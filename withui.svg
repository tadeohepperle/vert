<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="267"><g><title>[[heap]] (1 samples, 0.37%)</title><rect x="0.0000%" y="805" width="0.3745%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>tokio::runtime::context::set_scheduler (1 samples, 0.37%)</title><rect x="0.0000%" y="789" width="0.3745%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>[libc.so.6] (4 samples, 1.50%)</title><rect x="0.3745%" y="805" width="1.4981%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="4"/><text x="0.6245%" y="815.50"></text></g><g><title>[libc.so.6] (4 samples, 1.50%)</title><rect x="0.3745%" y="789" width="1.4981%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="4"/><text x="0.6245%" y="799.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 1.50%)</title><rect x="0.3745%" y="773" width="1.4981%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="4"/><text x="0.6245%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 1.50%)</title><rect x="0.3745%" y="757" width="1.4981%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="4"/><text x="0.6245%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 1.50%)</title><rect x="0.3745%" y="741" width="1.4981%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="4"/><text x="0.6245%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 1.50%)</title><rect x="0.3745%" y="725" width="1.4981%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="4"/><text x="0.6245%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 1.50%)</title><rect x="0.3745%" y="709" width="1.4981%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="4"/><text x="0.6245%" y="719.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (4 samples, 1.50%)</title><rect x="0.3745%" y="693" width="1.4981%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="4"/><text x="0.6245%" y="703.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (3 samples, 1.12%)</title><rect x="0.7491%" y="677" width="1.1236%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="3"/><text x="0.9991%" y="687.50"></text></g><g><title>tokio-runtime-w (7 samples, 2.62%)</title><rect x="0.0000%" y="821" width="2.6217%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="7"/><text x="0.2500%" y="831.50">to..</text></g><g><title>[unknown] (2 samples, 0.75%)</title><rect x="1.8727%" y="805" width="0.7491%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="2"/><text x="2.1227%" y="815.50"></text></g><g><title>syscall (1 samples, 0.37%)</title><rect x="2.2472%" y="789" width="0.3745%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="2.4972%" y="799.50"></text></g><g><title>&lt;wgpu::Sampler as core::ops::drop::Drop&gt;::drop (1 samples, 0.37%)</title><rect x="2.6217%" y="789" width="0.3745%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="2.8717%" y="799.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (1 samples, 0.37%)</title><rect x="2.9963%" y="789" width="0.3745%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="1"/><text x="3.2463%" y="799.50"></text></g><g><title>[libc.so.6] (5 samples, 1.87%)</title><rect x="3.3708%" y="789" width="1.8727%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="5"/><text x="3.6208%" y="799.50">[..</text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="5.2434%" y="789" width="0.7491%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="2"/><text x="5.4934%" y="799.50"></text></g><g><title>egui::style::TextStyle::resolve (1 samples, 0.37%)</title><rect x="5.9925%" y="789" width="0.3745%" height="15" fill="rgb(221,200,47)" fg:x="16" fg:w="1"/><text x="6.2425%" y="799.50"></text></g><g><title>epaint::stats::PaintStats::from_shapes (1 samples, 0.37%)</title><rect x="6.3670%" y="789" width="0.3745%" height="15" fill="rgb(226,26,5)" fg:x="17" fg:w="1"/><text x="6.6170%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (1 samples, 0.37%)</title><rect x="6.7416%" y="789" width="0.3745%" height="15" fill="rgb(249,33,26)" fg:x="18" fg:w="1"/><text x="6.9916%" y="799.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.37%)</title><rect x="7.1161%" y="789" width="0.3745%" height="15" fill="rgb(235,183,28)" fg:x="19" fg:w="1"/><text x="7.3661%" y="799.50"></text></g><g><title>[[heap]] (14 samples, 5.24%)</title><rect x="2.6217%" y="805" width="5.2434%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="14"/><text x="2.8717%" y="815.50">[[heap..</text></g><g><title>wgpu_render_pass_set_vertex_buffer (1 samples, 0.37%)</title><rect x="7.4906%" y="789" width="0.3745%" height="15" fill="rgb(247,18,42)" fg:x="20" fg:w="1"/><text x="7.7406%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.37%)</title><rect x="7.8652%" y="789" width="0.3745%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="1"/><text x="8.1152%" y="799.50"></text></g><g><title>[[stack]] (3 samples, 1.12%)</title><rect x="7.8652%" y="805" width="1.1236%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="3"/><text x="8.1152%" y="815.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="8.2397%" y="789" width="0.7491%" height="15" fill="rgb(225,111,53)" fg:x="22" fg:w="2"/><text x="8.4897%" y="799.50"></text></g><g><title>[anon] (1 samples, 0.37%)</title><rect x="8.9888%" y="805" width="0.3745%" height="15" fill="rgb(238,160,17)" fg:x="24" fg:w="1"/><text x="9.2388%" y="815.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.37%)</title><rect x="8.9888%" y="789" width="0.3745%" height="15" fill="rgb(214,148,48)" fg:x="24" fg:w="1"/><text x="9.2388%" y="799.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.37%)</title><rect x="8.9888%" y="773" width="0.3745%" height="15" fill="rgb(232,36,49)" fg:x="24" fg:w="1"/><text x="9.2388%" y="783.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.37%)</title><rect x="8.9888%" y="757" width="0.3745%" height="15" fill="rgb(209,103,24)" fg:x="24" fg:w="1"/><text x="9.2388%" y="767.50"></text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.37%)</title><rect x="8.9888%" y="741" width="0.3745%" height="15" fill="rgb(229,88,8)" fg:x="24" fg:w="1"/><text x="9.2388%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 1.87%)</title><rect x="9.3633%" y="805" width="1.8727%" height="15" fill="rgb(213,181,19)" fg:x="25" fg:w="5"/><text x="9.6133%" y="815.50">[..</text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="10.8614%" y="789" width="0.3745%" height="15" fill="rgb(254,191,54)" fg:x="29" fg:w="1"/><text x="11.1114%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="10.8614%" y="773" width="0.3745%" height="15" fill="rgb(241,83,37)" fg:x="29" fg:w="1"/><text x="11.1114%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="10.8614%" y="757" width="0.3745%" height="15" fill="rgb(233,36,39)" fg:x="29" fg:w="1"/><text x="11.1114%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="10.8614%" y="741" width="0.3745%" height="15" fill="rgb(226,3,54)" fg:x="29" fg:w="1"/><text x="11.1114%" y="751.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.37%)</title><rect x="15.3558%" y="757" width="0.3745%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="1"/><text x="15.6058%" y="767.50"></text></g><g><title>__snprintf_chk (1 samples, 0.37%)</title><rect x="15.3558%" y="741" width="0.3745%" height="15" fill="rgb(238,167,29)" fg:x="41" fg:w="1"/><text x="15.6058%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="15.3558%" y="725" width="0.3745%" height="15" fill="rgb(232,182,51)" fg:x="41" fg:w="1"/><text x="15.6058%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="15.3558%" y="709" width="0.3745%" height="15" fill="rgb(231,60,39)" fg:x="41" fg:w="1"/><text x="15.6058%" y="719.50"></text></g><g><title>[iris_dri.so] (4 samples, 1.50%)</title><rect x="15.3558%" y="773" width="1.4981%" height="15" fill="rgb(208,69,12)" fg:x="41" fg:w="4"/><text x="15.6058%" y="783.50"></text></g><g><title>cfree (3 samples, 1.12%)</title><rect x="15.7303%" y="757" width="1.1236%" height="15" fill="rgb(235,93,37)" fg:x="42" fg:w="3"/><text x="15.9803%" y="767.50"></text></g><g><title>[libc.so.6] (3 samples, 1.12%)</title><rect x="15.7303%" y="741" width="1.1236%" height="15" fill="rgb(213,116,39)" fg:x="42" fg:w="3"/><text x="15.9803%" y="751.50"></text></g><g><title>[libc.so.6] (3 samples, 1.12%)</title><rect x="15.7303%" y="725" width="1.1236%" height="15" fill="rgb(222,207,29)" fg:x="42" fg:w="3"/><text x="15.9803%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="16.4794%" y="709" width="0.3745%" height="15" fill="rgb(206,96,30)" fg:x="44" fg:w="1"/><text x="16.7294%" y="719.50"></text></g><g><title>__mmap (1 samples, 0.37%)</title><rect x="16.4794%" y="693" width="0.3745%" height="15" fill="rgb(218,138,4)" fg:x="44" fg:w="1"/><text x="16.7294%" y="703.50"></text></g><g><title>[libc.so.6] (17 samples, 6.37%)</title><rect x="11.2360%" y="805" width="6.3670%" height="15" fill="rgb(250,191,14)" fg:x="30" fg:w="17"/><text x="11.4860%" y="815.50">[libc.so..</text></g><g><title>[libc.so.6] (10 samples, 3.75%)</title><rect x="13.8577%" y="789" width="3.7453%" height="15" fill="rgb(239,60,40)" fg:x="37" fg:w="10"/><text x="14.1077%" y="799.50">[lib..</text></g><g><title>__ctype_init (2 samples, 0.75%)</title><rect x="16.8539%" y="773" width="0.7491%" height="15" fill="rgb(206,27,48)" fg:x="45" fg:w="2"/><text x="17.1039%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.37%)</title><rect x="21.7228%" y="789" width="0.3745%" height="15" fill="rgb(225,35,8)" fg:x="58" fg:w="1"/><text x="21.9728%" y="799.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::bloom::Bloom as vert::app::module::Module&gt;::new (1 samples, 0.37%)</title><rect x="22.0974%" y="789" width="0.3745%" height="15" fill="rgb(250,213,24)" fg:x="59" fg:w="1"/><text x="22.3474%" y="799.50"></text></g><g><title>wgpu::Device::create_render_pipeline (1 samples, 0.37%)</title><rect x="22.0974%" y="773" width="0.3745%" height="15" fill="rgb(247,123,22)" fg:x="59" fg:w="1"/><text x="22.3474%" y="783.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_render_pipeline (1 samples, 0.37%)</title><rect x="22.0974%" y="757" width="0.3745%" height="15" fill="rgb(231,138,38)" fg:x="59" fg:w="1"/><text x="22.3474%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_render_pipeline (1 samples, 0.37%)</title><rect x="22.0974%" y="741" width="0.3745%" height="15" fill="rgb(231,145,46)" fg:x="59" fg:w="1"/><text x="22.3474%" y="751.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_render_pipeline (1 samples, 0.37%)</title><rect x="22.0974%" y="725" width="0.3745%" height="15" fill="rgb(251,118,11)" fg:x="59" fg:w="1"/><text x="22.3474%" y="735.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_render_pipeline (1 samples, 0.37%)</title><rect x="22.0974%" y="709" width="0.3745%" height="15" fill="rgb(217,147,25)" fg:x="59" fg:w="1"/><text x="22.3474%" y="719.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_render_pipeline (1 samples, 0.37%)</title><rect x="22.0974%" y="693" width="0.3745%" height="15" fill="rgb(247,81,37)" fg:x="59" fg:w="1"/><text x="22.3474%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::compile_stage (1 samples, 0.37%)</title><rect x="22.0974%" y="677" width="0.3745%" height="15" fill="rgb(209,12,38)" fg:x="59" fg:w="1"/><text x="22.3474%" y="687.50"></text></g><g><title>naga::back::spv::write_vec (1 samples, 0.37%)</title><rect x="22.0974%" y="661" width="0.3745%" height="15" fill="rgb(227,1,9)" fg:x="59" fg:w="1"/><text x="22.3474%" y="671.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write (1 samples, 0.37%)</title><rect x="22.0974%" y="645" width="0.3745%" height="15" fill="rgb(248,47,43)" fg:x="59" fg:w="1"/><text x="22.3474%" y="655.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_logical_layout (1 samples, 0.37%)</title><rect x="22.0974%" y="629" width="0.3745%" height="15" fill="rgb(221,10,30)" fg:x="59" fg:w="1"/><text x="22.3474%" y="639.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_function (1 samples, 0.37%)</title><rect x="22.0974%" y="613" width="0.3745%" height="15" fill="rgb(210,229,1)" fg:x="59" fg:w="1"/><text x="22.3474%" y="623.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::write_block (1 samples, 0.37%)</title><rect x="22.0974%" y="597" width="0.3745%" height="15" fill="rgb(222,148,37)" fg:x="59" fg:w="1"/><text x="22.3474%" y="607.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::cache_expression_value (1 samples, 0.37%)</title><rect x="22.0974%" y="581" width="0.3745%" height="15" fill="rgb(234,67,33)" fg:x="59" fg:w="1"/><text x="22.3474%" y="591.50"></text></g><g><title>naga::back::spv::instructions::&lt;impl naga::back::spv::Instruction&gt;::ray_query_get_intersection (1 samples, 0.37%)</title><rect x="22.0974%" y="565" width="0.3745%" height="15" fill="rgb(247,98,35)" fg:x="59" fg:w="1"/><text x="22.3474%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.37%)</title><rect x="22.0974%" y="549" width="0.3745%" height="15" fill="rgb(247,138,52)" fg:x="59" fg:w="1"/><text x="22.3474%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.37%)</title><rect x="22.0974%" y="533" width="0.3745%" height="15" fill="rgb(213,79,30)" fg:x="59" fg:w="1"/><text x="22.3474%" y="543.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="22.0974%" y="517" width="0.3745%" height="15" fill="rgb(246,177,23)" fg:x="59" fg:w="1"/><text x="22.3474%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="22.0974%" y="501" width="0.3745%" height="15" fill="rgb(230,62,27)" fg:x="59" fg:w="1"/><text x="22.3474%" y="511.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (1 samples, 0.37%)</title><rect x="22.4719%" y="789" width="0.3745%" height="15" fill="rgb(216,154,8)" fg:x="60" fg:w="1"/><text x="22.7219%" y="799.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::enumerate_adapters (1 samples, 0.37%)</title><rect x="22.8464%" y="789" width="0.3745%" height="15" fill="rgb(244,35,45)" fg:x="61" fg:w="1"/><text x="23.0964%" y="799.50"></text></g><g><title>[libEGL.so.1.1.0] (1 samples, 0.37%)</title><rect x="22.8464%" y="773" width="0.3745%" height="15" fill="rgb(251,115,12)" fg:x="61" fg:w="1"/><text x="23.0964%" y="783.50"></text></g><g><title>__glDispatchMakeCurrent (1 samples, 0.37%)</title><rect x="22.8464%" y="757" width="0.3745%" height="15" fill="rgb(240,54,50)" fg:x="61" fg:w="1"/><text x="23.0964%" y="767.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (1 samples, 0.37%)</title><rect x="22.8464%" y="741" width="0.3745%" height="15" fill="rgb(233,84,52)" fg:x="61" fg:w="1"/><text x="23.0964%" y="751.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (1 samples, 0.37%)</title><rect x="22.8464%" y="725" width="0.3745%" height="15" fill="rgb(207,117,47)" fg:x="61" fg:w="1"/><text x="23.0964%" y="735.50"></text></g><g><title>_glapi_get_proc_address (1 samples, 0.37%)</title><rect x="22.8464%" y="709" width="0.3745%" height="15" fill="rgb(249,43,39)" fg:x="61" fg:w="1"/><text x="23.0964%" y="719.50"></text></g><g><title>[libglapi.so.0.0.0] (1 samples, 0.37%)</title><rect x="22.8464%" y="693" width="0.3745%" height="15" fill="rgb(209,38,44)" fg:x="61" fg:w="1"/><text x="23.0964%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="22.8464%" y="677" width="0.3745%" height="15" fill="rgb(236,212,23)" fg:x="61" fg:w="1"/><text x="23.0964%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="23.2210%" y="789" width="0.3745%" height="15" fill="rgb(242,79,21)" fg:x="62" fg:w="1"/><text x="23.4710%" y="799.50"></text></g><g><title>[libc.so.6] (5 samples, 1.87%)</title><rect x="23.5955%" y="789" width="1.8727%" height="15" fill="rgb(211,96,35)" fg:x="63" fg:w="5"/><text x="23.8455%" y="799.50">[..</text></g><g><title>main (1 samples, 0.37%)</title><rect x="25.0936%" y="773" width="0.3745%" height="15" fill="rgb(253,215,40)" fg:x="67" fg:w="1"/><text x="25.3436%" y="783.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.37%)</title><rect x="25.0936%" y="757" width="0.3745%" height="15" fill="rgb(211,81,21)" fg:x="67" fg:w="1"/><text x="25.3436%" y="767.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.37%)</title><rect x="25.0936%" y="741" width="0.3745%" height="15" fill="rgb(208,190,38)" fg:x="67" fg:w="1"/><text x="25.3436%" y="751.50"></text></g><g><title>std::panicking::try (1 samples, 0.37%)</title><rect x="25.0936%" y="725" width="0.3745%" height="15" fill="rgb(235,213,38)" fg:x="67" fg:w="1"/><text x="25.3436%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.37%)</title><rect x="25.0936%" y="709" width="0.3745%" height="15" fill="rgb(237,122,38)" fg:x="67" fg:w="1"/><text x="25.3436%" y="719.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1 samples, 0.37%)</title><rect x="25.0936%" y="693" width="0.3745%" height="15" fill="rgb(244,218,35)" fg:x="67" fg:w="1"/><text x="25.3436%" y="703.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.37%)</title><rect x="25.0936%" y="677" width="0.3745%" height="15" fill="rgb(240,68,47)" fg:x="67" fg:w="1"/><text x="25.3436%" y="687.50"></text></g><g><title>std::panicking::try (1 samples, 0.37%)</title><rect x="25.0936%" y="661" width="0.3745%" height="15" fill="rgb(210,16,53)" fg:x="67" fg:w="1"/><text x="25.3436%" y="671.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.37%)</title><rect x="25.0936%" y="645" width="0.3745%" height="15" fill="rgb(235,124,12)" fg:x="67" fg:w="1"/><text x="25.3436%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.37%)</title><rect x="25.0936%" y="629" width="0.3745%" height="15" fill="rgb(224,169,11)" fg:x="67" fg:w="1"/><text x="25.3436%" y="639.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.37%)</title><rect x="25.0936%" y="613" width="0.3745%" height="15" fill="rgb(250,166,2)" fg:x="67" fg:w="1"/><text x="25.3436%" y="623.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.37%)</title><rect x="25.0936%" y="597" width="0.3745%" height="15" fill="rgb(242,216,29)" fg:x="67" fg:w="1"/><text x="25.3436%" y="607.50"></text></g><g><title>ui::main (1 samples, 0.37%)</title><rect x="25.0936%" y="581" width="0.3745%" height="15" fill="rgb(230,116,27)" fg:x="67" fg:w="1"/><text x="25.3436%" y="591.50"></text></g><g><title>vert::app::AppBuilder::run (1 samples, 0.37%)</title><rect x="25.0936%" y="565" width="0.3745%" height="15" fill="rgb(228,99,48)" fg:x="67" fg:w="1"/><text x="25.3436%" y="575.50"></text></g><g><title>vert::app::instantiate_module (1 samples, 0.37%)</title><rect x="25.0936%" y="549" width="0.3745%" height="15" fill="rgb(253,11,6)" fg:x="67" fg:w="1"/><text x="25.3436%" y="559.50"></text></g><g><title>&lt;vert::modules::winit_main::WinitMain as vert::app::module::Module&gt;::new (1 samples, 0.37%)</title><rect x="25.0936%" y="533" width="0.3745%" height="15" fill="rgb(247,143,39)" fg:x="67" fg:w="1"/><text x="25.3436%" y="543.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (1 samples, 0.37%)</title><rect x="25.0936%" y="517" width="0.3745%" height="15" fill="rgb(236,97,10)" fg:x="67" fg:w="1"/><text x="25.3436%" y="527.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (1 samples, 0.37%)</title><rect x="25.0936%" y="501" width="0.3745%" height="15" fill="rgb(233,208,19)" fg:x="67" fg:w="1"/><text x="25.3436%" y="511.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (1 samples, 0.37%)</title><rect x="25.0936%" y="485" width="0.3745%" height="15" fill="rgb(216,164,2)" fg:x="67" fg:w="1"/><text x="25.3436%" y="495.50"></text></g><g><title>winit::platform_impl::platform::common::xkb_state::KbdState::from_x11_xkb (1 samples, 0.37%)</title><rect x="25.0936%" y="469" width="0.3745%" height="15" fill="rgb(220,129,5)" fg:x="67" fg:w="1"/><text x="25.3436%" y="479.50"></text></g><g><title>_ZN5winit13platform_impl8platform6common9xkb_state8KbdState12init_compose17h58ee4d6a72d093c1E.llvm.13872874890276231379 (1 samples, 0.37%)</title><rect x="25.0936%" y="453" width="0.3745%" height="15" fill="rgb(242,17,10)" fg:x="67" fg:w="1"/><text x="25.3436%" y="463.50"></text></g><g><title>xkb_compose_table_new_from_locale (1 samples, 0.37%)</title><rect x="25.0936%" y="437" width="0.3745%" height="15" fill="rgb(242,107,0)" fg:x="67" fg:w="1"/><text x="25.3436%" y="447.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.37%)</title><rect x="25.0936%" y="421" width="0.3745%" height="15" fill="rgb(251,28,31)" fg:x="67" fg:w="1"/><text x="25.3436%" y="431.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.37%)</title><rect x="25.0936%" y="405" width="0.3745%" height="15" fill="rgb(233,223,10)" fg:x="67" fg:w="1"/><text x="25.3436%" y="415.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.37%)</title><rect x="25.0936%" y="389" width="0.3745%" height="15" fill="rgb(215,21,27)" fg:x="67" fg:w="1"/><text x="25.3436%" y="399.50"></text></g><g><title>[libvulkan.so.1.3.274] (3 samples, 1.12%)</title><rect x="25.4682%" y="789" width="1.1236%" height="15" fill="rgb(232,23,21)" fg:x="68" fg:w="3"/><text x="25.7182%" y="799.50"></text></g><g><title>[libvulkan.so.1.3.274] (3 samples, 1.12%)</title><rect x="25.4682%" y="773" width="1.1236%" height="15" fill="rgb(244,5,23)" fg:x="68" fg:w="3"/><text x="25.7182%" y="783.50"></text></g><g><title>[libvulkan.so.1.3.274] (3 samples, 1.12%)</title><rect x="25.4682%" y="757" width="1.1236%" height="15" fill="rgb(226,81,46)" fg:x="68" fg:w="3"/><text x="25.7182%" y="767.50"></text></g><g><title>dlopen (3 samples, 1.12%)</title><rect x="25.4682%" y="741" width="1.1236%" height="15" fill="rgb(247,70,30)" fg:x="68" fg:w="3"/><text x="25.7182%" y="751.50"></text></g><g><title>[libc.so.6] (3 samples, 1.12%)</title><rect x="25.4682%" y="725" width="1.1236%" height="15" fill="rgb(212,68,19)" fg:x="68" fg:w="3"/><text x="25.7182%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 1.12%)</title><rect x="25.4682%" y="709" width="1.1236%" height="15" fill="rgb(240,187,13)" fg:x="68" fg:w="3"/><text x="25.7182%" y="719.50"></text></g><g><title>_dl_catch_exception (3 samples, 1.12%)</title><rect x="25.4682%" y="693" width="1.1236%" height="15" fill="rgb(223,113,26)" fg:x="68" fg:w="3"/><text x="25.7182%" y="703.50"></text></g><g><title>[libc.so.6] (3 samples, 1.12%)</title><rect x="25.4682%" y="677" width="1.1236%" height="15" fill="rgb(206,192,2)" fg:x="68" fg:w="3"/><text x="25.7182%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 1.12%)</title><rect x="25.4682%" y="661" width="1.1236%" height="15" fill="rgb(241,108,4)" fg:x="68" fg:w="3"/><text x="25.7182%" y="671.50"></text></g><g><title>_dl_catch_exception (3 samples, 1.12%)</title><rect x="25.4682%" y="645" width="1.1236%" height="15" fill="rgb(247,173,49)" fg:x="68" fg:w="3"/><text x="25.7182%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 1.12%)</title><rect x="25.4682%" y="629" width="1.1236%" height="15" fill="rgb(224,114,35)" fg:x="68" fg:w="3"/><text x="25.7182%" y="639.50"></text></g><g><title>_dl_catch_exception (3 samples, 1.12%)</title><rect x="25.4682%" y="613" width="1.1236%" height="15" fill="rgb(245,159,27)" fg:x="68" fg:w="3"/><text x="25.7182%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 1.12%)</title><rect x="25.4682%" y="597" width="1.1236%" height="15" fill="rgb(245,172,44)" fg:x="68" fg:w="3"/><text x="25.7182%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 1.12%)</title><rect x="25.4682%" y="581" width="1.1236%" height="15" fill="rgb(236,23,11)" fg:x="68" fg:w="3"/><text x="25.7182%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 1.12%)</title><rect x="25.4682%" y="565" width="1.1236%" height="15" fill="rgb(205,117,38)" fg:x="68" fg:w="3"/><text x="25.7182%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 1.12%)</title><rect x="25.4682%" y="549" width="1.1236%" height="15" fill="rgb(237,72,25)" fg:x="68" fg:w="3"/><text x="25.7182%" y="559.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="28.4644%" y="773" width="0.3745%" height="15" fill="rgb(244,70,9)" fg:x="76" fg:w="1"/><text x="28.7144%" y="783.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="28.4644%" y="757" width="0.3745%" height="15" fill="rgb(217,125,39)" fg:x="76" fg:w="1"/><text x="28.7144%" y="767.50"></text></g><g><title>ZSTD_decompress (1 samples, 0.37%)</title><rect x="28.4644%" y="741" width="0.3745%" height="15" fill="rgb(235,36,10)" fg:x="76" fg:w="1"/><text x="28.7144%" y="751.50"></text></g><g><title>ZSTD_decompress_usingDDict (1 samples, 0.37%)</title><rect x="28.4644%" y="725" width="0.3745%" height="15" fill="rgb(251,123,47)" fg:x="76" fg:w="1"/><text x="28.7144%" y="735.50"></text></g><g><title>[libzstd.so.1.5.5] (1 samples, 0.37%)</title><rect x="28.4644%" y="709" width="0.3745%" height="15" fill="rgb(221,13,13)" fg:x="76" fg:w="1"/><text x="28.7144%" y="719.50"></text></g><g><title>ZSTD_decompressBlock_internal (1 samples, 0.37%)</title><rect x="28.4644%" y="693" width="0.3745%" height="15" fill="rgb(238,131,9)" fg:x="76" fg:w="1"/><text x="28.7144%" y="703.50"></text></g><g><title>ZSTD_decodeLiteralsBlock (1 samples, 0.37%)</title><rect x="28.4644%" y="677" width="0.3745%" height="15" fill="rgb(211,50,8)" fg:x="76" fg:w="1"/><text x="28.7144%" y="687.50"></text></g><g><title>HUF_decompress4X_hufOnly_wksp (1 samples, 0.37%)</title><rect x="28.4644%" y="661" width="0.3745%" height="15" fill="rgb(245,182,24)" fg:x="76" fg:w="1"/><text x="28.7144%" y="671.50"></text></g><g><title>HUF_readDTableX1_wksp (1 samples, 0.37%)</title><rect x="28.4644%" y="645" width="0.3745%" height="15" fill="rgb(242,14,37)" fg:x="76" fg:w="1"/><text x="28.7144%" y="655.50"></text></g><g><title>[libzstd.so.1.5.5] (1 samples, 0.37%)</title><rect x="28.4644%" y="629" width="0.3745%" height="15" fill="rgb(246,228,12)" fg:x="76" fg:w="1"/><text x="28.7144%" y="639.50"></text></g><g><title>[libzstd.so.1.5.5] (1 samples, 0.37%)</title><rect x="28.4644%" y="613" width="0.3745%" height="15" fill="rgb(213,55,15)" fg:x="76" fg:w="1"/><text x="28.7144%" y="623.50"></text></g><g><title>[libzstd.so.1.5.5] (1 samples, 0.37%)</title><rect x="28.4644%" y="597" width="0.3745%" height="15" fill="rgb(209,9,3)" fg:x="76" fg:w="1"/><text x="28.7144%" y="607.50"></text></g><g><title>[libvulkan_intel.so] (7 samples, 2.62%)</title><rect x="26.5918%" y="789" width="2.6217%" height="15" fill="rgb(230,59,30)" fg:x="71" fg:w="7"/><text x="26.8418%" y="799.50">[l..</text></g><g><title>regcomp (1 samples, 0.37%)</title><rect x="28.8390%" y="773" width="0.3745%" height="15" fill="rgb(209,121,21)" fg:x="77" fg:w="1"/><text x="29.0890%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="28.8390%" y="757" width="0.3745%" height="15" fill="rgb(220,109,13)" fg:x="77" fg:w="1"/><text x="29.0890%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="28.8390%" y="741" width="0.3745%" height="15" fill="rgb(232,18,1)" fg:x="77" fg:w="1"/><text x="29.0890%" y="751.50"></text></g><g><title>__mbrtowc (1 samples, 0.37%)</title><rect x="28.8390%" y="725" width="0.3745%" height="15" fill="rgb(215,41,42)" fg:x="77" fg:w="1"/><text x="29.0890%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="28.8390%" y="709" width="0.3745%" height="15" fill="rgb(224,123,36)" fg:x="77" fg:w="1"/><text x="29.0890%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="28.8390%" y="693" width="0.3745%" height="15" fill="rgb(240,125,3)" fg:x="77" fg:w="1"/><text x="29.0890%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="28.8390%" y="677" width="0.3745%" height="15" fill="rgb(205,98,50)" fg:x="77" fg:w="1"/><text x="29.0890%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="28.8390%" y="661" width="0.3745%" height="15" fill="rgb(205,185,37)" fg:x="77" fg:w="1"/><text x="29.0890%" y="671.50"></text></g><g><title>_ZN4egui11widget_text8RichText3new17h1edee99c956ee4b3E.llvm.17616223525726133955 (1 samples, 0.37%)</title><rect x="29.2135%" y="789" width="0.3745%" height="15" fill="rgb(238,207,15)" fg:x="78" fg:w="1"/><text x="29.4635%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.37%)</title><rect x="29.5880%" y="789" width="0.3745%" height="15" fill="rgb(213,199,42)" fg:x="79" fg:w="1"/><text x="29.8380%" y="799.50"></text></g><g><title>eglGetProcAddress (1 samples, 0.37%)</title><rect x="29.9625%" y="789" width="0.3745%" height="15" fill="rgb(235,201,11)" fg:x="80" fg:w="1"/><text x="30.2125%" y="799.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.37%)</title><rect x="30.3371%" y="789" width="0.3745%" height="15" fill="rgb(207,46,11)" fg:x="81" fg:w="1"/><text x="30.5871%" y="799.50"></text></g><g><title>morphorm::types::Units::is_auto (1 samples, 0.37%)</title><rect x="30.7116%" y="789" width="0.3745%" height="15" fill="rgb(241,35,35)" fg:x="82" fg:w="1"/><text x="30.9616%" y="799.50"></text></g><g><title>morphorm::types::Units::to_px_clamped (1 samples, 0.37%)</title><rect x="31.0861%" y="789" width="0.3745%" height="15" fill="rgb(243,32,47)" fg:x="83" fg:w="1"/><text x="31.3361%" y="799.50"></text></g><g><title>realloc (2 samples, 0.75%)</title><rect x="31.4607%" y="789" width="0.7491%" height="15" fill="rgb(247,202,23)" fg:x="84" fg:w="2"/><text x="31.7107%" y="799.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.37%)</title><rect x="32.2097%" y="789" width="0.3745%" height="15" fill="rgb(219,102,11)" fg:x="86" fg:w="1"/><text x="32.4597%" y="799.50"></text></g><g><title>wgpu::Instance::new (1 samples, 0.37%)</title><rect x="32.2097%" y="773" width="0.3745%" height="15" fill="rgb(243,110,44)" fg:x="86" fg:w="1"/><text x="32.4597%" y="783.50"></text></g><g><title>wgpu_core::instance::Instance::new (1 samples, 0.37%)</title><rect x="32.2097%" y="757" width="0.3745%" height="15" fill="rgb(222,74,54)" fg:x="86" fg:w="1"/><text x="32.4597%" y="767.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::init (1 samples, 0.37%)</title><rect x="32.2097%" y="741" width="0.3745%" height="15" fill="rgb(216,99,12)" fg:x="86" fg:w="1"/><text x="32.4597%" y="751.50"></text></g><g><title>libloading::os::unix::Library::open (1 samples, 0.37%)</title><rect x="32.2097%" y="725" width="0.3745%" height="15" fill="rgb(226,22,26)" fg:x="86" fg:w="1"/><text x="32.4597%" y="735.50"></text></g><g><title>dlopen (1 samples, 0.37%)</title><rect x="32.2097%" y="709" width="0.3745%" height="15" fill="rgb(217,163,10)" fg:x="86" fg:w="1"/><text x="32.4597%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="32.2097%" y="693" width="0.3745%" height="15" fill="rgb(213,25,53)" fg:x="86" fg:w="1"/><text x="32.4597%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="32.2097%" y="677" width="0.3745%" height="15" fill="rgb(252,105,26)" fg:x="86" fg:w="1"/><text x="32.4597%" y="687.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.37%)</title><rect x="32.2097%" y="661" width="0.3745%" height="15" fill="rgb(220,39,43)" fg:x="86" fg:w="1"/><text x="32.4597%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="32.2097%" y="645" width="0.3745%" height="15" fill="rgb(229,68,48)" fg:x="86" fg:w="1"/><text x="32.4597%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="32.2097%" y="629" width="0.3745%" height="15" fill="rgb(252,8,32)" fg:x="86" fg:w="1"/><text x="32.4597%" y="639.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.37%)</title><rect x="32.2097%" y="613" width="0.3745%" height="15" fill="rgb(223,20,43)" fg:x="86" fg:w="1"/><text x="32.4597%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="32.2097%" y="597" width="0.3745%" height="15" fill="rgb(229,81,49)" fg:x="86" fg:w="1"/><text x="32.4597%" y="607.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.37%)</title><rect x="32.2097%" y="581" width="0.3745%" height="15" fill="rgb(236,28,36)" fg:x="86" fg:w="1"/><text x="32.4597%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="32.2097%" y="565" width="0.3745%" height="15" fill="rgb(249,185,26)" fg:x="86" fg:w="1"/><text x="32.4597%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="32.2097%" y="549" width="0.3745%" height="15" fill="rgb(249,174,33)" fg:x="86" fg:w="1"/><text x="32.4597%" y="559.50"></text></g><g><title>vert::app::AppBuilder::run (1 samples, 0.37%)</title><rect x="32.5843%" y="789" width="0.3745%" height="15" fill="rgb(233,201,37)" fg:x="87" fg:w="1"/><text x="32.8343%" y="799.50"></text></g><g><title>vert::app::instantiate_module (1 samples, 0.37%)</title><rect x="32.5843%" y="773" width="0.3745%" height="15" fill="rgb(221,78,26)" fg:x="87" fg:w="1"/><text x="32.8343%" y="783.50"></text></g><g><title>&lt;vert::modules::egui::Egui as vert::app::module::Module&gt;::new (1 samples, 0.37%)</title><rect x="32.5843%" y="757" width="0.3745%" height="15" fill="rgb(250,127,30)" fg:x="87" fg:w="1"/><text x="32.8343%" y="767.50"></text></g><g><title>egui_wgpu::renderer::Renderer::new (1 samples, 0.37%)</title><rect x="32.5843%" y="741" width="0.3745%" height="15" fill="rgb(230,49,44)" fg:x="87" fg:w="1"/><text x="32.8343%" y="751.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.37%)</title><rect x="32.5843%" y="725" width="0.3745%" height="15" fill="rgb(229,67,23)" fg:x="87" fg:w="1"/><text x="32.8343%" y="735.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="32.5843%" y="709" width="0.3745%" height="15" fill="rgb(249,83,47)" fg:x="87" fg:w="1"/><text x="32.8343%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="32.5843%" y="693" width="0.3745%" height="15" fill="rgb(215,43,3)" fg:x="87" fg:w="1"/><text x="32.8343%" y="703.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="32.5843%" y="677" width="0.3745%" height="15" fill="rgb(238,154,13)" fg:x="87" fg:w="1"/><text x="32.8343%" y="687.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (1 samples, 0.37%)</title><rect x="32.5843%" y="661" width="0.3745%" height="15" fill="rgb(219,56,2)" fg:x="87" fg:w="1"/><text x="32.8343%" y="671.50"></text></g><g><title>naga::front::wgsl::parse_str (1 samples, 0.37%)</title><rect x="32.5843%" y="645" width="0.3745%" height="15" fill="rgb(233,0,4)" fg:x="87" fg:w="1"/><text x="32.8343%" y="655.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1 samples, 0.37%)</title><rect x="32.5843%" y="629" width="0.3745%" height="15" fill="rgb(235,30,7)" fg:x="87" fg:w="1"/><text x="32.8343%" y="639.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (1 samples, 0.37%)</title><rect x="32.5843%" y="613" width="0.3745%" height="15" fill="rgb(250,79,13)" fg:x="87" fg:w="1"/><text x="32.8343%" y="623.50"></text></g><g><title>naga::front::wgsl::parse::Parser::function_decl (1 samples, 0.37%)</title><rect x="32.5843%" y="597" width="0.3745%" height="15" fill="rgb(211,146,34)" fg:x="87" fg:w="1"/><text x="32.8343%" y="607.50"></text></g><g><title>_ZN4naga5front4wgsl5parse5lexer13consume_token17h790d086fee39747dE.llvm.9652253072215551723 (1 samples, 0.37%)</title><rect x="32.5843%" y="581" width="0.3745%" height="15" fill="rgb(228,22,38)" fg:x="87" fg:w="1"/><text x="32.8343%" y="591.50"></text></g><g><title>naga::front::wgsl::parse::lexer::consume_any (1 samples, 0.37%)</title><rect x="32.5843%" y="565" width="0.3745%" height="15" fill="rgb(235,168,5)" fg:x="87" fg:w="1"/><text x="32.8343%" y="575.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::ui_rect::UiRectRenderer as vert::app::module::Module&gt;::new (1 samples, 0.37%)</title><rect x="32.9588%" y="773" width="0.3745%" height="15" fill="rgb(221,155,16)" fg:x="88" fg:w="1"/><text x="33.2088%" y="783.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.37%)</title><rect x="32.9588%" y="757" width="0.3745%" height="15" fill="rgb(215,215,53)" fg:x="88" fg:w="1"/><text x="33.2088%" y="767.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="32.9588%" y="741" width="0.3745%" height="15" fill="rgb(223,4,10)" fg:x="88" fg:w="1"/><text x="33.2088%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="32.9588%" y="725" width="0.3745%" height="15" fill="rgb(234,103,6)" fg:x="88" fg:w="1"/><text x="33.2088%" y="735.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="32.9588%" y="709" width="0.3745%" height="15" fill="rgb(227,97,0)" fg:x="88" fg:w="1"/><text x="33.2088%" y="719.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (1 samples, 0.37%)</title><rect x="32.9588%" y="693" width="0.3745%" height="15" fill="rgb(234,150,53)" fg:x="88" fg:w="1"/><text x="33.2088%" y="703.50"></text></g><g><title>naga::front::wgsl::parse_str (1 samples, 0.37%)</title><rect x="32.9588%" y="677" width="0.3745%" height="15" fill="rgb(228,201,54)" fg:x="88" fg:w="1"/><text x="33.2088%" y="687.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1 samples, 0.37%)</title><rect x="32.9588%" y="661" width="0.3745%" height="15" fill="rgb(222,22,37)" fg:x="88" fg:w="1"/><text x="33.2088%" y="671.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (1 samples, 0.37%)</title><rect x="32.9588%" y="645" width="0.3745%" height="15" fill="rgb(237,53,32)" fg:x="88" fg:w="1"/><text x="33.2088%" y="655.50"></text></g><g><title>naga::front::wgsl::parse::Parser::function_decl (1 samples, 0.37%)</title><rect x="32.9588%" y="629" width="0.3745%" height="15" fill="rgb(233,25,53)" fg:x="88" fg:w="1"/><text x="33.2088%" y="639.50"></text></g><g><title>naga::front::wgsl::parse::Parser::statement (1 samples, 0.37%)</title><rect x="32.9588%" y="613" width="0.3745%" height="15" fill="rgb(210,40,34)" fg:x="88" fg:w="1"/><text x="33.2088%" y="623.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span (1 samples, 0.37%)</title><rect x="32.9588%" y="597" width="0.3745%" height="15" fill="rgb(241,220,44)" fg:x="88" fg:w="1"/><text x="33.2088%" y="607.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}} (1 samples, 0.37%)</title><rect x="32.9588%" y="581" width="0.3745%" height="15" fill="rgb(235,28,35)" fg:x="88" fg:w="1"/><text x="33.2088%" y="591.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}} (1 samples, 0.37%)</title><rect x="32.9588%" y="565" width="0.3745%" height="15" fill="rgb(210,56,17)" fg:x="88" fg:w="1"/><text x="33.2088%" y="575.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.37%)</title><rect x="32.9588%" y="549" width="0.3745%" height="15" fill="rgb(224,130,29)" fg:x="88" fg:w="1"/><text x="33.2088%" y="559.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.37%)</title><rect x="32.9588%" y="533" width="0.3745%" height="15" fill="rgb(235,212,8)" fg:x="88" fg:w="1"/><text x="33.2088%" y="543.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="517" width="0.3745%" height="15" fill="rgb(223,33,50)" fg:x="88" fg:w="1"/><text x="33.2088%" y="527.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="501" width="0.3745%" height="15" fill="rgb(219,149,13)" fg:x="88" fg:w="1"/><text x="33.2088%" y="511.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="485" width="0.3745%" height="15" fill="rgb(250,156,29)" fg:x="88" fg:w="1"/><text x="33.2088%" y="495.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="469" width="0.3745%" height="15" fill="rgb(216,193,19)" fg:x="88" fg:w="1"/><text x="33.2088%" y="479.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="453" width="0.3745%" height="15" fill="rgb(216,135,14)" fg:x="88" fg:w="1"/><text x="33.2088%" y="463.50"></text></g><g><title>naga::front::wgsl::parse::Parser::unary_expression (1 samples, 0.37%)</title><rect x="32.9588%" y="437" width="0.3745%" height="15" fill="rgb(241,47,5)" fg:x="88" fg:w="1"/><text x="33.2088%" y="447.50"></text></g><g><title>naga::front::wgsl::parse::Parser::function_call (1 samples, 0.37%)</title><rect x="32.9588%" y="421" width="0.3745%" height="15" fill="rgb(233,42,35)" fg:x="88" fg:w="1"/><text x="33.2088%" y="431.50"></text></g><g><title>naga::front::wgsl::parse::Parser::arguments (1 samples, 0.37%)</title><rect x="32.9588%" y="405" width="0.3745%" height="15" fill="rgb(231,13,6)" fg:x="88" fg:w="1"/><text x="33.2088%" y="415.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span (1 samples, 0.37%)</title><rect x="32.9588%" y="389" width="0.3745%" height="15" fill="rgb(207,181,40)" fg:x="88" fg:w="1"/><text x="33.2088%" y="399.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}} (1 samples, 0.37%)</title><rect x="32.9588%" y="373" width="0.3745%" height="15" fill="rgb(254,173,49)" fg:x="88" fg:w="1"/><text x="33.2088%" y="383.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}} (1 samples, 0.37%)</title><rect x="32.9588%" y="357" width="0.3745%" height="15" fill="rgb(221,1,38)" fg:x="88" fg:w="1"/><text x="33.2088%" y="367.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.37%)</title><rect x="32.9588%" y="341" width="0.3745%" height="15" fill="rgb(206,124,46)" fg:x="88" fg:w="1"/><text x="33.2088%" y="351.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.37%)</title><rect x="32.9588%" y="325" width="0.3745%" height="15" fill="rgb(249,21,11)" fg:x="88" fg:w="1"/><text x="33.2088%" y="335.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="309" width="0.3745%" height="15" fill="rgb(222,201,40)" fg:x="88" fg:w="1"/><text x="33.2088%" y="319.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="293" width="0.3745%" height="15" fill="rgb(235,61,29)" fg:x="88" fg:w="1"/><text x="33.2088%" y="303.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="277" width="0.3745%" height="15" fill="rgb(219,207,3)" fg:x="88" fg:w="1"/><text x="33.2088%" y="287.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="261" width="0.3745%" height="15" fill="rgb(222,56,46)" fg:x="88" fg:w="1"/><text x="33.2088%" y="271.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.37%)</title><rect x="32.9588%" y="245" width="0.3745%" height="15" fill="rgb(239,76,54)" fg:x="88" fg:w="1"/><text x="33.2088%" y="255.50"></text></g><g><title>naga::front::wgsl::parse::Parser::unary_expression (1 samples, 0.37%)</title><rect x="32.9588%" y="229" width="0.3745%" height="15" fill="rgb(231,124,27)" fg:x="88" fg:w="1"/><text x="33.2088%" y="239.50"></text></g><g><title>naga::front::wgsl::parse::lexer::Lexer::start_byte_offset (1 samples, 0.37%)</title><rect x="32.9588%" y="213" width="0.3745%" height="15" fill="rgb(249,195,6)" fg:x="88" fg:w="1"/><text x="33.2088%" y="223.50"></text></g><g><title>_ZN4naga5front4wgsl5parse5lexer13consume_token17h790d086fee39747dE.llvm.9652253072215551723 (1 samples, 0.37%)</title><rect x="32.9588%" y="197" width="0.3745%" height="15" fill="rgb(237,174,47)" fg:x="88" fg:w="1"/><text x="33.2088%" y="207.50"></text></g><g><title>vert::app::instantiate_module (2 samples, 0.75%)</title><rect x="32.9588%" y="789" width="0.7491%" height="15" fill="rgb(206,201,31)" fg:x="88" fg:w="2"/><text x="33.2088%" y="799.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::bloom::Bloom as vert::app::module::Module&gt;::new (1 samples, 0.37%)</title><rect x="33.3333%" y="773" width="0.3745%" height="15" fill="rgb(231,57,52)" fg:x="89" fg:w="1"/><text x="33.5833%" y="783.50"></text></g><g><title>vert::modules::renderer::post_processing::bloom::BloomTextures::create (1 samples, 0.37%)</title><rect x="33.3333%" y="757" width="0.3745%" height="15" fill="rgb(248,177,22)" fg:x="89" fg:w="1"/><text x="33.5833%" y="767.50"></text></g><g><title>vert::modules::renderer::screen_texture::HdrTexture::create (1 samples, 0.37%)</title><rect x="33.3333%" y="741" width="0.3745%" height="15" fill="rgb(215,211,37)" fg:x="89" fg:w="1"/><text x="33.5833%" y="751.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.37%)</title><rect x="33.3333%" y="725" width="0.3745%" height="15" fill="rgb(241,128,51)" fg:x="89" fg:w="1"/><text x="33.5833%" y="735.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="33.3333%" y="709" width="0.3745%" height="15" fill="rgb(227,165,31)" fg:x="89" fg:w="1"/><text x="33.5833%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="33.3333%" y="693" width="0.3745%" height="15" fill="rgb(228,167,24)" fg:x="89" fg:w="1"/><text x="33.5833%" y="703.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="33.3333%" y="677" width="0.3745%" height="15" fill="rgb(228,143,12)" fg:x="89" fg:w="1"/><text x="33.5833%" y="687.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_texture (1 samples, 0.37%)</title><rect x="33.3333%" y="661" width="0.3745%" height="15" fill="rgb(249,149,8)" fg:x="89" fg:w="1"/><text x="33.5833%" y="671.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.37%)</title><rect x="33.3333%" y="645" width="0.3745%" height="15" fill="rgb(243,35,44)" fg:x="89" fg:w="1"/><text x="33.5833%" y="655.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="33.3333%" y="629" width="0.3745%" height="15" fill="rgb(246,89,9)" fg:x="89" fg:w="1"/><text x="33.5833%" y="639.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="33.3333%" y="613" width="0.3745%" height="15" fill="rgb(233,213,13)" fg:x="89" fg:w="1"/><text x="33.5833%" y="623.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="33.3333%" y="597" width="0.3745%" height="15" fill="rgb(233,141,41)" fg:x="89" fg:w="1"/><text x="33.5833%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.3333%" y="581" width="0.3745%" height="15" fill="rgb(239,167,4)" fg:x="89" fg:w="1"/><text x="33.5833%" y="591.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="33.7079%" y="741" width="0.3745%" height="15" fill="rgb(209,217,16)" fg:x="90" fg:w="1"/><text x="33.9579%" y="751.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="33.7079%" y="725" width="0.3745%" height="15" fill="rgb(219,88,35)" fg:x="90" fg:w="1"/><text x="33.9579%" y="735.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="33.7079%" y="709" width="0.3745%" height="15" fill="rgb(220,193,23)" fg:x="90" fg:w="1"/><text x="33.9579%" y="719.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.37%)</title><rect x="33.7079%" y="693" width="0.3745%" height="15" fill="rgb(230,90,52)" fg:x="90" fg:w="1"/><text x="33.9579%" y="703.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="33.7079%" y="677" width="0.3745%" height="15" fill="rgb(252,106,19)" fg:x="90" fg:w="1"/><text x="33.9579%" y="687.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="33.7079%" y="661" width="0.3745%" height="15" fill="rgb(206,74,20)" fg:x="90" fg:w="1"/><text x="33.9579%" y="671.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="33.7079%" y="645" width="0.3745%" height="15" fill="rgb(230,138,44)" fg:x="90" fg:w="1"/><text x="33.9579%" y="655.50"></text></g><g><title>regcomp (1 samples, 0.37%)</title><rect x="33.7079%" y="629" width="0.3745%" height="15" fill="rgb(235,182,43)" fg:x="90" fg:w="1"/><text x="33.9579%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="613" width="0.3745%" height="15" fill="rgb(242,16,51)" fg:x="90" fg:w="1"/><text x="33.9579%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="597" width="0.3745%" height="15" fill="rgb(248,9,4)" fg:x="90" fg:w="1"/><text x="33.9579%" y="607.50"></text></g><g><title>__mbrtowc (1 samples, 0.37%)</title><rect x="33.7079%" y="581" width="0.3745%" height="15" fill="rgb(210,31,22)" fg:x="90" fg:w="1"/><text x="33.9579%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="565" width="0.3745%" height="15" fill="rgb(239,54,39)" fg:x="90" fg:w="1"/><text x="33.9579%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="549" width="0.3745%" height="15" fill="rgb(230,99,41)" fg:x="90" fg:w="1"/><text x="33.9579%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="533" width="0.3745%" height="15" fill="rgb(253,106,12)" fg:x="90" fg:w="1"/><text x="33.9579%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="517" width="0.3745%" height="15" fill="rgb(213,46,41)" fg:x="90" fg:w="1"/><text x="33.9579%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="501" width="0.3745%" height="15" fill="rgb(215,133,35)" fg:x="90" fg:w="1"/><text x="33.9579%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="485" width="0.3745%" height="15" fill="rgb(213,28,5)" fg:x="90" fg:w="1"/><text x="33.9579%" y="495.50"></text></g><g><title>__tfind (1 samples, 0.37%)</title><rect x="33.7079%" y="469" width="0.3745%" height="15" fill="rgb(215,77,49)" fg:x="90" fg:w="1"/><text x="33.9579%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="33.7079%" y="453" width="0.3745%" height="15" fill="rgb(248,100,22)" fg:x="90" fg:w="1"/><text x="33.9579%" y="463.50"></text></g><g><title>vkCreateInstance (2 samples, 0.75%)</title><rect x="33.7079%" y="789" width="0.7491%" height="15" fill="rgb(208,67,9)" fg:x="90" fg:w="2"/><text x="33.9579%" y="799.50"></text></g><g><title>[libvulkan.so.1.3.274] (2 samples, 0.75%)</title><rect x="33.7079%" y="773" width="0.7491%" height="15" fill="rgb(219,133,21)" fg:x="90" fg:w="2"/><text x="33.9579%" y="783.50"></text></g><g><title>[libvulkan.so.1.3.274] (2 samples, 0.75%)</title><rect x="33.7079%" y="757" width="0.7491%" height="15" fill="rgb(246,46,29)" fg:x="90" fg:w="2"/><text x="33.9579%" y="767.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.37%)</title><rect x="34.0824%" y="741" width="0.3745%" height="15" fill="rgb(246,185,52)" fg:x="91" fg:w="1"/><text x="34.3324%" y="751.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.37%)</title><rect x="34.0824%" y="725" width="0.3745%" height="15" fill="rgb(252,136,11)" fg:x="91" fg:w="1"/><text x="34.3324%" y="735.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.37%)</title><rect x="34.0824%" y="709" width="0.3745%" height="15" fill="rgb(219,138,53)" fg:x="91" fg:w="1"/><text x="34.3324%" y="719.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.37%)</title><rect x="34.0824%" y="693" width="0.3745%" height="15" fill="rgb(211,51,23)" fg:x="91" fg:w="1"/><text x="34.3324%" y="703.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="34.0824%" y="677" width="0.3745%" height="15" fill="rgb(247,221,28)" fg:x="91" fg:w="1"/><text x="34.3324%" y="687.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="34.0824%" y="661" width="0.3745%" height="15" fill="rgb(251,222,45)" fg:x="91" fg:w="1"/><text x="34.3324%" y="671.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="34.0824%" y="645" width="0.3745%" height="15" fill="rgb(217,162,53)" fg:x="91" fg:w="1"/><text x="34.3324%" y="655.50"></text></g><g><title>[libvulkan.so.1.3.274] (1 samples, 0.37%)</title><rect x="34.4569%" y="741" width="0.3745%" height="15" fill="rgb(229,93,14)" fg:x="92" fg:w="1"/><text x="34.7069%" y="751.50"></text></g><g><title>[libvulkan.so.1.3.274] (1 samples, 0.37%)</title><rect x="34.4569%" y="725" width="0.3745%" height="15" fill="rgb(209,67,49)" fg:x="92" fg:w="1"/><text x="34.7069%" y="735.50"></text></g><g><title>[libvulkan.so.1.3.274] (1 samples, 0.37%)</title><rect x="34.4569%" y="709" width="0.3745%" height="15" fill="rgb(213,87,29)" fg:x="92" fg:w="1"/><text x="34.7069%" y="719.50"></text></g><g><title>[libvulkan.so.1.3.274] (1 samples, 0.37%)</title><rect x="34.4569%" y="693" width="0.3745%" height="15" fill="rgb(205,151,52)" fg:x="92" fg:w="1"/><text x="34.7069%" y="703.50"></text></g><g><title>__libc_calloc (1 samples, 0.37%)</title><rect x="34.4569%" y="677" width="0.3745%" height="15" fill="rgb(253,215,39)" fg:x="92" fg:w="1"/><text x="34.7069%" y="687.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (6 samples, 2.25%)</title><rect x="34.4569%" y="789" width="2.2472%" height="15" fill="rgb(221,220,41)" fg:x="92" fg:w="6"/><text x="34.7069%" y="799.50">v..</text></g><g><title>[libvulkan.so.1.3.274] (6 samples, 2.25%)</title><rect x="34.4569%" y="773" width="2.2472%" height="15" fill="rgb(218,133,21)" fg:x="92" fg:w="6"/><text x="34.7069%" y="783.50">[..</text></g><g><title>[libvulkan.so.1.3.274] (6 samples, 2.25%)</title><rect x="34.4569%" y="757" width="2.2472%" height="15" fill="rgb(221,193,43)" fg:x="92" fg:w="6"/><text x="34.7069%" y="767.50">[..</text></g><g><title>dlclose (5 samples, 1.87%)</title><rect x="34.8315%" y="741" width="1.8727%" height="15" fill="rgb(240,128,52)" fg:x="93" fg:w="5"/><text x="35.0815%" y="751.50">d..</text></g><g><title>XML_ParseBuffer (1 samples, 0.37%)</title><rect x="36.7041%" y="629" width="0.3745%" height="15" fill="rgb(253,114,12)" fg:x="98" fg:w="1"/><text x="36.9541%" y="639.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="36.7041%" y="613" width="0.3745%" height="15" fill="rgb(215,223,47)" fg:x="98" fg:w="1"/><text x="36.9541%" y="623.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="36.7041%" y="597" width="0.3745%" height="15" fill="rgb(248,225,23)" fg:x="98" fg:w="1"/><text x="36.9541%" y="607.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="36.7041%" y="581" width="0.3745%" height="15" fill="rgb(250,108,0)" fg:x="98" fg:w="1"/><text x="36.9541%" y="591.50"></text></g><g><title>wgpu::Instance::new (2 samples, 0.75%)</title><rect x="36.7041%" y="789" width="0.7491%" height="15" fill="rgb(228,208,7)" fg:x="98" fg:w="2"/><text x="36.9541%" y="799.50"></text></g><g><title>wgpu_core::instance::Instance::new (2 samples, 0.75%)</title><rect x="36.7041%" y="773" width="0.7491%" height="15" fill="rgb(244,45,10)" fg:x="98" fg:w="2"/><text x="36.9541%" y="783.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::init (2 samples, 0.75%)</title><rect x="36.7041%" y="757" width="0.7491%" height="15" fill="rgb(207,125,25)" fg:x="98" fg:w="2"/><text x="36.9541%" y="767.50"></text></g><g><title>wgpu_hal::gles::egl::Inner::create (2 samples, 0.75%)</title><rect x="36.7041%" y="741" width="0.7491%" height="15" fill="rgb(210,195,18)" fg:x="98" fg:w="2"/><text x="36.9541%" y="751.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (2 samples, 0.75%)</title><rect x="36.7041%" y="725" width="0.7491%" height="15" fill="rgb(249,80,12)" fg:x="98" fg:w="2"/><text x="36.9541%" y="735.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (2 samples, 0.75%)</title><rect x="36.7041%" y="709" width="0.7491%" height="15" fill="rgb(221,65,9)" fg:x="98" fg:w="2"/><text x="36.9541%" y="719.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (2 samples, 0.75%)</title><rect x="36.7041%" y="693" width="0.7491%" height="15" fill="rgb(235,49,36)" fg:x="98" fg:w="2"/><text x="36.9541%" y="703.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.75%)</title><rect x="36.7041%" y="677" width="0.7491%" height="15" fill="rgb(225,32,20)" fg:x="98" fg:w="2"/><text x="36.9541%" y="687.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.75%)</title><rect x="36.7041%" y="661" width="0.7491%" height="15" fill="rgb(215,141,46)" fg:x="98" fg:w="2"/><text x="36.9541%" y="671.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.75%)</title><rect x="36.7041%" y="645" width="0.7491%" height="15" fill="rgb(250,160,47)" fg:x="98" fg:w="2"/><text x="36.9541%" y="655.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.37%)</title><rect x="37.0787%" y="629" width="0.3745%" height="15" fill="rgb(216,222,40)" fg:x="99" fg:w="1"/><text x="37.3287%" y="639.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.37%)</title><rect x="37.0787%" y="613" width="0.3745%" height="15" fill="rgb(234,217,39)" fg:x="99" fg:w="1"/><text x="37.3287%" y="623.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.37%)</title><rect x="37.0787%" y="597" width="0.3745%" height="15" fill="rgb(207,178,40)" fg:x="99" fg:w="1"/><text x="37.3287%" y="607.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.37%)</title><rect x="37.0787%" y="581" width="0.3745%" height="15" fill="rgb(221,136,13)" fg:x="99" fg:w="1"/><text x="37.3287%" y="591.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="37.0787%" y="565" width="0.3745%" height="15" fill="rgb(249,199,10)" fg:x="99" fg:w="1"/><text x="37.3287%" y="575.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="37.0787%" y="549" width="0.3745%" height="15" fill="rgb(249,222,13)" fg:x="99" fg:w="1"/><text x="37.3287%" y="559.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="37.0787%" y="533" width="0.3745%" height="15" fill="rgb(244,185,38)" fg:x="99" fg:w="1"/><text x="37.3287%" y="543.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="37.0787%" y="517" width="0.3745%" height="15" fill="rgb(236,202,9)" fg:x="99" fg:w="1"/><text x="37.3287%" y="527.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="37.0787%" y="501" width="0.3745%" height="15" fill="rgb(250,229,37)" fg:x="99" fg:w="1"/><text x="37.3287%" y="511.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.37%)</title><rect x="37.0787%" y="485" width="0.3745%" height="15" fill="rgb(206,174,23)" fg:x="99" fg:w="1"/><text x="37.3287%" y="495.50"></text></g><g><title>wgpu_core::binding_model::BindGroup&lt;A&gt;::validate_dynamic_bindings (1 samples, 0.37%)</title><rect x="37.4532%" y="789" width="0.3745%" height="15" fill="rgb(211,33,43)" fg:x="100" fg:w="1"/><text x="37.7032%" y="799.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (1 samples, 0.37%)</title><rect x="37.8277%" y="789" width="0.3745%" height="15" fill="rgb(245,58,50)" fg:x="101" fg:w="1"/><text x="38.0777%" y="799.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (3 samples, 1.12%)</title><rect x="38.2022%" y="789" width="1.1236%" height="15" fill="rgb(244,68,36)" fg:x="102" fg:w="3"/><text x="38.4522%" y="799.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (3 samples, 1.12%)</title><rect x="38.2022%" y="773" width="1.1236%" height="15" fill="rgb(232,229,15)" fg:x="102" fg:w="3"/><text x="38.4522%" y="783.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (3 samples, 1.12%)</title><rect x="38.2022%" y="757" width="1.1236%" height="15" fill="rgb(254,30,23)" fg:x="102" fg:w="3"/><text x="38.4522%" y="767.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 1.12%)</title><rect x="38.2022%" y="741" width="1.1236%" height="15" fill="rgb(235,160,14)" fg:x="102" fg:w="3"/><text x="38.4522%" y="751.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 1.12%)</title><rect x="38.2022%" y="725" width="1.1236%" height="15" fill="rgb(212,155,44)" fg:x="102" fg:w="3"/><text x="38.4522%" y="735.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 1.12%)</title><rect x="38.2022%" y="709" width="1.1236%" height="15" fill="rgb(226,2,50)" fg:x="102" fg:w="3"/><text x="38.4522%" y="719.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="38.5768%" y="693" width="0.7491%" height="15" fill="rgb(234,177,6)" fg:x="103" fg:w="2"/><text x="38.8268%" y="703.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="38.9513%" y="677" width="0.3745%" height="15" fill="rgb(217,24,9)" fg:x="104" fg:w="1"/><text x="39.2013%" y="687.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (3 samples, 1.12%)</title><rect x="39.3258%" y="789" width="1.1236%" height="15" fill="rgb(220,13,46)" fg:x="105" fg:w="3"/><text x="39.5758%" y="799.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (2 samples, 0.75%)</title><rect x="39.7004%" y="773" width="0.7491%" height="15" fill="rgb(239,221,27)" fg:x="106" fg:w="2"/><text x="39.9504%" y="783.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="39.7004%" y="757" width="0.7491%" height="15" fill="rgb(222,198,25)" fg:x="106" fg:w="2"/><text x="39.9504%" y="767.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="39.7004%" y="741" width="0.7491%" height="15" fill="rgb(211,99,13)" fg:x="106" fg:w="2"/><text x="39.9504%" y="751.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="39.7004%" y="725" width="0.7491%" height="15" fill="rgb(232,111,31)" fg:x="106" fg:w="2"/><text x="39.9504%" y="735.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="39.7004%" y="709" width="0.7491%" height="15" fill="rgb(245,82,37)" fg:x="106" fg:w="2"/><text x="39.9504%" y="719.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="39.7004%" y="693" width="0.7491%" height="15" fill="rgb(227,149,46)" fg:x="106" fg:w="2"/><text x="39.9504%" y="703.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="40.0749%" y="677" width="0.3745%" height="15" fill="rgb(218,36,50)" fg:x="107" fg:w="1"/><text x="40.3249%" y="687.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="40.0749%" y="661" width="0.3745%" height="15" fill="rgb(226,80,48)" fg:x="107" fg:w="1"/><text x="40.3249%" y="671.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (1 samples, 0.37%)</title><rect x="40.4494%" y="789" width="0.3745%" height="15" fill="rgb(238,224,15)" fg:x="108" fg:w="1"/><text x="40.6994%" y="799.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (1 samples, 0.37%)</title><rect x="40.8240%" y="789" width="0.3745%" height="15" fill="rgb(241,136,10)" fg:x="109" fg:w="1"/><text x="41.0740%" y="799.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (4 samples, 1.50%)</title><rect x="41.1985%" y="789" width="1.4981%" height="15" fill="rgb(208,32,45)" fg:x="110" fg:w="4"/><text x="41.4485%" y="799.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (4 samples, 1.50%)</title><rect x="41.1985%" y="773" width="1.4981%" height="15" fill="rgb(207,135,9)" fg:x="110" fg:w="4"/><text x="41.4485%" y="783.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (4 samples, 1.50%)</title><rect x="41.1985%" y="757" width="1.4981%" height="15" fill="rgb(206,86,44)" fg:x="110" fg:w="4"/><text x="41.4485%" y="767.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::Ime::new (4 samples, 1.50%)</title><rect x="41.1985%" y="741" width="1.4981%" height="15" fill="rgb(245,177,15)" fg:x="110" fg:w="4"/><text x="41.4485%" y="751.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::PotentialInputMethods::open_im (4 samples, 1.50%)</title><rect x="41.1985%" y="725" width="1.4981%" height="15" fill="rgb(206,64,50)" fg:x="110" fg:w="4"/><text x="41.4485%" y="735.50"></text></g><g><title>_ZN5winit13platform_impl8platform3x113ime12input_method20PotentialInputMethod7open_im17h3cf011a26f25cd6dE.llvm.1883977762121155037 (4 samples, 1.50%)</title><rect x="41.1985%" y="709" width="1.4981%" height="15" fill="rgb(234,36,40)" fg:x="110" fg:w="4"/><text x="41.4485%" y="719.50"></text></g><g><title>_XimOpenIM (4 samples, 1.50%)</title><rect x="41.1985%" y="693" width="1.4981%" height="15" fill="rgb(213,64,8)" fg:x="110" fg:w="4"/><text x="41.4485%" y="703.50"></text></g><g><title>_XimLocalOpenIM (4 samples, 1.50%)</title><rect x="41.1985%" y="677" width="1.4981%" height="15" fill="rgb(210,75,36)" fg:x="110" fg:w="4"/><text x="41.4485%" y="687.50"></text></g><g><title>[libX11.so.6.4.0] (4 samples, 1.50%)</title><rect x="41.1985%" y="661" width="1.4981%" height="15" fill="rgb(229,88,21)" fg:x="110" fg:w="4"/><text x="41.4485%" y="671.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.75%)</title><rect x="41.9476%" y="645" width="0.7491%" height="15" fill="rgb(252,204,47)" fg:x="112" fg:w="2"/><text x="42.1976%" y="655.50"></text></g><g><title>_IO_getc (2 samples, 0.75%)</title><rect x="41.9476%" y="629" width="0.7491%" height="15" fill="rgb(208,77,27)" fg:x="112" fg:w="2"/><text x="42.1976%" y="639.50"></text></g><g><title>[unknown] (68 samples, 25.47%)</title><rect x="17.6030%" y="805" width="25.4682%" height="15" fill="rgb(221,76,26)" fg:x="47" fg:w="68"/><text x="17.8530%" y="815.50">[unknown]</text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::new (1 samples, 0.37%)</title><rect x="42.6966%" y="789" width="0.3745%" height="15" fill="rgb(225,139,18)" fg:x="114" fg:w="1"/><text x="42.9466%" y="799.50"></text></g><g><title>x11_dl::xlib::Xlib::open (1 samples, 0.37%)</title><rect x="42.6966%" y="773" width="0.3745%" height="15" fill="rgb(230,137,11)" fg:x="114" fg:w="1"/><text x="42.9466%" y="783.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.37%)</title><rect x="42.6966%" y="757" width="0.3745%" height="15" fill="rgb(212,28,1)" fg:x="114" fg:w="1"/><text x="42.9466%" y="767.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.37%)</title><rect x="42.6966%" y="741" width="0.3745%" height="15" fill="rgb(248,164,17)" fg:x="114" fg:w="1"/><text x="42.9466%" y="751.50"></text></g><g><title>_ZN9once_cell3imp17OnceCell$LT$T$GT$10initialize28_$u7b$$u7b$closure$u7d$$u7d$17hb513a045a6f4e27aE.llvm.17462875578338596722 (1 samples, 0.37%)</title><rect x="42.6966%" y="725" width="0.3745%" height="15" fill="rgb(222,171,42)" fg:x="114" fg:w="1"/><text x="42.9466%" y="735.50"></text></g><g><title>x11_dl::xlib::Xlib::open::_{{closure}} (1 samples, 0.37%)</title><rect x="42.6966%" y="709" width="0.3745%" height="15" fill="rgb(243,84,45)" fg:x="114" fg:w="1"/><text x="42.9466%" y="719.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.37%)</title><rect x="42.6966%" y="693" width="0.3745%" height="15" fill="rgb(252,49,23)" fg:x="114" fg:w="1"/><text x="42.9466%" y="703.50"></text></g><g><title>dlopen (1 samples, 0.37%)</title><rect x="42.6966%" y="677" width="0.3745%" height="15" fill="rgb(215,19,7)" fg:x="114" fg:w="1"/><text x="42.9466%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="42.6966%" y="661" width="0.3745%" height="15" fill="rgb(238,81,41)" fg:x="114" fg:w="1"/><text x="42.9466%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="42.6966%" y="645" width="0.3745%" height="15" fill="rgb(210,199,37)" fg:x="114" fg:w="1"/><text x="42.9466%" y="655.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.37%)</title><rect x="42.6966%" y="629" width="0.3745%" height="15" fill="rgb(244,192,49)" fg:x="114" fg:w="1"/><text x="42.9466%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="42.6966%" y="613" width="0.3745%" height="15" fill="rgb(226,211,11)" fg:x="114" fg:w="1"/><text x="42.9466%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="42.6966%" y="597" width="0.3745%" height="15" fill="rgb(236,162,54)" fg:x="114" fg:w="1"/><text x="42.9466%" y="607.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.37%)</title><rect x="42.6966%" y="581" width="0.3745%" height="15" fill="rgb(220,229,9)" fg:x="114" fg:w="1"/><text x="42.9466%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="42.6966%" y="565" width="0.3745%" height="15" fill="rgb(250,87,22)" fg:x="114" fg:w="1"/><text x="42.9466%" y="575.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.37%)</title><rect x="42.6966%" y="549" width="0.3745%" height="15" fill="rgb(239,43,17)" fg:x="114" fg:w="1"/><text x="42.9466%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="42.6966%" y="533" width="0.3745%" height="15" fill="rgb(231,177,25)" fg:x="114" fg:w="1"/><text x="42.9466%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="42.6966%" y="517" width="0.3745%" height="15" fill="rgb(219,179,1)" fg:x="114" fg:w="1"/><text x="42.9466%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.37%)</title><rect x="42.6966%" y="501" width="0.3745%" height="15" fill="rgb(238,219,53)" fg:x="114" fg:w="1"/><text x="42.9466%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.37%)</title><rect x="43.0712%" y="485" width="0.3745%" height="15" fill="rgb(232,167,36)" fg:x="115" fg:w="1"/><text x="43.3212%" y="495.50"></text></g><g><title>clock_gettime (1 samples, 0.37%)</title><rect x="43.0712%" y="469" width="0.3745%" height="15" fill="rgb(244,19,51)" fg:x="115" fg:w="1"/><text x="43.3212%" y="479.50"></text></g><g><title>egui::context::Context::tessellate (1 samples, 0.37%)</title><rect x="43.4457%" y="421" width="0.3745%" height="15" fill="rgb(224,6,22)" fg:x="116" fg:w="1"/><text x="43.6957%" y="431.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.37%)</title><rect x="43.4457%" y="405" width="0.3745%" height="15" fill="rgb(224,145,5)" fg:x="116" fg:w="1"/><text x="43.6957%" y="415.50"></text></g><g><title>epaint::tessellator::tessellate_shapes (1 samples, 0.37%)</title><rect x="43.4457%" y="389" width="0.3745%" height="15" fill="rgb(234,130,49)" fg:x="116" fg:w="1"/><text x="43.6957%" y="399.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_clipped_shape (1 samples, 0.37%)</title><rect x="43.4457%" y="373" width="0.3745%" height="15" fill="rgb(254,6,2)" fg:x="116" fg:w="1"/><text x="43.6957%" y="383.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_shape (1 samples, 0.37%)</title><rect x="43.4457%" y="357" width="0.3745%" height="15" fill="rgb(208,96,46)" fg:x="116" fg:w="1"/><text x="43.6957%" y="367.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_circle (1 samples, 0.37%)</title><rect x="43.4457%" y="341" width="0.3745%" height="15" fill="rgb(239,3,39)" fg:x="116" fg:w="1"/><text x="43.6957%" y="351.50"></text></g><g><title>epaint::tessellator::Path::fill (1 samples, 0.37%)</title><rect x="43.4457%" y="325" width="0.3745%" height="15" fill="rgb(233,210,1)" fg:x="116" fg:w="1"/><text x="43.6957%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.37%)</title><rect x="43.4457%" y="309" width="0.3745%" height="15" fill="rgb(244,137,37)" fg:x="116" fg:w="1"/><text x="43.6957%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.37%)</title><rect x="43.4457%" y="293" width="0.3745%" height="15" fill="rgb(240,136,2)" fg:x="116" fg:w="1"/><text x="43.6957%" y="303.50"></text></g><g><title>realloc (1 samples, 0.37%)</title><rect x="43.4457%" y="277" width="0.3745%" height="15" fill="rgb(239,18,37)" fg:x="116" fg:w="1"/><text x="43.6957%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="43.4457%" y="261" width="0.3745%" height="15" fill="rgb(218,185,22)" fg:x="116" fg:w="1"/><text x="43.6957%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="43.4457%" y="245" width="0.3745%" height="15" fill="rgb(225,218,4)" fg:x="116" fg:w="1"/><text x="43.6957%" y="255.50"></text></g><g><title>&lt;vert::modules::egui::Egui as vert::modules::renderer::Prepare&gt;::prepare (3 samples, 1.12%)</title><rect x="43.4457%" y="437" width="1.1236%" height="15" fill="rgb(230,182,32)" fg:x="116" fg:w="3"/><text x="43.6957%" y="447.50"></text></g><g><title>egui_wgpu::renderer::Renderer::update_buffers (2 samples, 0.75%)</title><rect x="43.8202%" y="421" width="0.7491%" height="15" fill="rgb(242,56,43)" fg:x="117" fg:w="2"/><text x="44.0702%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::QueueWriteBufferView&gt; (2 samples, 0.75%)</title><rect x="43.8202%" y="405" width="0.7491%" height="15" fill="rgb(233,99,24)" fg:x="117" fg:w="2"/><text x="44.0702%" y="415.50"></text></g><g><title>&lt;wgpu::QueueWriteBufferView as core::ops::drop::Drop&gt;::drop (2 samples, 0.75%)</title><rect x="43.8202%" y="389" width="0.7491%" height="15" fill="rgb(234,209,42)" fg:x="117" fg:w="2"/><text x="44.0702%" y="399.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_staging_buffer (2 samples, 0.75%)</title><rect x="43.8202%" y="373" width="0.7491%" height="15" fill="rgb(227,7,12)" fg:x="117" fg:w="2"/><text x="44.0702%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_staging_buffer (2 samples, 0.75%)</title><rect x="43.8202%" y="357" width="0.7491%" height="15" fill="rgb(245,203,43)" fg:x="117" fg:w="2"/><text x="44.0702%" y="367.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer (2 samples, 0.75%)</title><rect x="43.8202%" y="341" width="0.7491%" height="15" fill="rgb(238,205,33)" fg:x="117" fg:w="2"/><text x="44.0702%" y="351.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (2 samples, 0.75%)</title><rect x="43.8202%" y="325" width="0.7491%" height="15" fill="rgb(231,56,7)" fg:x="117" fg:w="2"/><text x="44.0702%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (2 samples, 0.75%)</title><rect x="43.8202%" y="309" width="0.7491%" height="15" fill="rgb(244,186,29)" fg:x="117" fg:w="2"/><text x="44.0702%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="43.8202%" y="293" width="0.7491%" height="15" fill="rgb(234,111,31)" fg:x="117" fg:w="2"/><text x="44.0702%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="43.8202%" y="277" width="0.7491%" height="15" fill="rgb(241,149,10)" fg:x="117" fg:w="2"/><text x="44.0702%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="43.8202%" y="261" width="0.7491%" height="15" fill="rgb(249,206,44)" fg:x="117" fg:w="2"/><text x="44.0702%" y="271.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="43.8202%" y="245" width="0.7491%" height="15" fill="rgb(251,153,30)" fg:x="117" fg:w="2"/><text x="44.0702%" y="255.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="43.8202%" y="229" width="0.7491%" height="15" fill="rgb(239,152,38)" fg:x="117" fg:w="2"/><text x="44.0702%" y="239.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="43.8202%" y="213" width="0.7491%" height="15" fill="rgb(249,139,47)" fg:x="117" fg:w="2"/><text x="44.0702%" y="223.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="43.8202%" y="197" width="0.7491%" height="15" fill="rgb(244,64,35)" fg:x="117" fg:w="2"/><text x="44.0702%" y="207.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="44.1948%" y="181" width="0.3745%" height="15" fill="rgb(216,46,15)" fg:x="118" fg:w="1"/><text x="44.4448%" y="191.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="44.1948%" y="165" width="0.3745%" height="15" fill="rgb(250,74,19)" fg:x="118" fg:w="1"/><text x="44.4448%" y="175.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="44.1948%" y="149" width="0.3745%" height="15" fill="rgb(249,42,33)" fg:x="118" fg:w="1"/><text x="44.4448%" y="159.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="45.3184%" y="341" width="0.3745%" height="15" fill="rgb(242,149,17)" fg:x="121" fg:w="1"/><text x="45.5684%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="45.3184%" y="325" width="0.3745%" height="15" fill="rgb(244,29,21)" fg:x="121" fg:w="1"/><text x="45.5684%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="45.3184%" y="309" width="0.3745%" height="15" fill="rgb(220,130,37)" fg:x="121" fg:w="1"/><text x="45.5684%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="45.3184%" y="293" width="0.3745%" height="15" fill="rgb(211,67,2)" fg:x="121" fg:w="1"/><text x="45.5684%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="45.3184%" y="277" width="0.3745%" height="15" fill="rgb(235,68,52)" fg:x="121" fg:w="1"/><text x="45.5684%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="45.3184%" y="261" width="0.3745%" height="15" fill="rgb(246,142,3)" fg:x="121" fg:w="1"/><text x="45.5684%" y="271.50"></text></g><g><title>&lt;vert::modules::egui::Egui as vert::modules::renderer::post_processing::SdrSurfaceRenderer&gt;::render (4 samples, 1.50%)</title><rect x="44.5693%" y="437" width="1.4981%" height="15" fill="rgb(241,25,7)" fg:x="119" fg:w="4"/><text x="44.8193%" y="447.50"></text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.12648948253069277602 (4 samples, 1.50%)</title><rect x="44.5693%" y="421" width="1.4981%" height="15" fill="rgb(242,119,39)" fg:x="119" fg:w="4"/><text x="44.8193%" y="431.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (4 samples, 1.50%)</title><rect x="44.5693%" y="405" width="1.4981%" height="15" fill="rgb(241,98,45)" fg:x="119" fg:w="4"/><text x="44.8193%" y="415.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (4 samples, 1.50%)</title><rect x="44.5693%" y="389" width="1.4981%" height="15" fill="rgb(254,28,30)" fg:x="119" fg:w="4"/><text x="44.8193%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (4 samples, 1.50%)</title><rect x="44.5693%" y="373" width="1.4981%" height="15" fill="rgb(241,142,54)" fg:x="119" fg:w="4"/><text x="44.8193%" y="383.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (4 samples, 1.50%)</title><rect x="44.5693%" y="357" width="1.4981%" height="15" fill="rgb(222,85,15)" fg:x="119" fg:w="4"/><text x="44.8193%" y="367.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (1 samples, 0.37%)</title><rect x="45.6929%" y="341" width="0.3745%" height="15" fill="rgb(210,85,47)" fg:x="122" fg:w="1"/><text x="45.9429%" y="351.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (1 samples, 0.37%)</title><rect x="45.6929%" y="325" width="0.3745%" height="15" fill="rgb(224,206,25)" fg:x="122" fg:w="1"/><text x="45.9429%" y="335.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::color_mesh::ColorMeshRenderer as vert::modules::renderer::Prepare&gt;::prepare (1 samples, 0.37%)</title><rect x="46.0674%" y="437" width="0.3745%" height="15" fill="rgb(243,201,19)" fg:x="123" fg:w="1"/><text x="46.3174%" y="447.50"></text></g><g><title>wgpu::Queue::write_buffer (1 samples, 0.37%)</title><rect x="46.0674%" y="421" width="0.3745%" height="15" fill="rgb(236,59,4)" fg:x="123" fg:w="1"/><text x="46.3174%" y="431.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (1 samples, 0.37%)</title><rect x="46.0674%" y="405" width="0.3745%" height="15" fill="rgb(254,179,45)" fg:x="123" fg:w="1"/><text x="46.3174%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (1 samples, 0.37%)</title><rect x="46.0674%" y="389" width="0.3745%" height="15" fill="rgb(226,14,10)" fg:x="123" fg:w="1"/><text x="46.3174%" y="399.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (1 samples, 0.37%)</title><rect x="46.0674%" y="373" width="0.3745%" height="15" fill="rgb(244,27,41)" fg:x="123" fg:w="1"/><text x="46.3174%" y="383.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (1 samples, 0.37%)</title><rect x="46.0674%" y="357" width="0.3745%" height="15" fill="rgb(235,35,32)" fg:x="123" fg:w="1"/><text x="46.3174%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (1 samples, 0.37%)</title><rect x="46.0674%" y="341" width="0.3745%" height="15" fill="rgb(218,68,31)" fg:x="123" fg:w="1"/><text x="46.3174%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="46.0674%" y="325" width="0.3745%" height="15" fill="rgb(207,120,37)" fg:x="123" fg:w="1"/><text x="46.3174%" y="335.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::color_mesh::ColorMeshRenderer as vert::modules::renderer::main_pass_renderer::MainPassRenderer&gt;::render (1 samples, 0.37%)</title><rect x="46.4419%" y="437" width="0.3745%" height="15" fill="rgb(227,98,0)" fg:x="124" fg:w="1"/><text x="46.6919%" y="447.50"></text></g><g><title>wgpu::RenderPass::set_pipeline (1 samples, 0.37%)</title><rect x="46.4419%" y="421" width="0.3745%" height="15" fill="rgb(207,7,3)" fg:x="124" fg:w="1"/><text x="46.6919%" y="431.50"></text></g><g><title>wgpu_render_pass_set_pipeline (1 samples, 0.37%)</title><rect x="46.4419%" y="405" width="0.3745%" height="15" fill="rgb(206,98,19)" fg:x="124" fg:w="1"/><text x="46.6919%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.37%)</title><rect x="46.4419%" y="389" width="0.3745%" height="15" fill="rgb(217,5,26)" fg:x="124" fg:w="1"/><text x="46.6919%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.37%)</title><rect x="46.4419%" y="373" width="0.3745%" height="15" fill="rgb(235,190,38)" fg:x="124" fg:w="1"/><text x="46.6919%" y="383.50"></text></g><g><title>realloc (1 samples, 0.37%)</title><rect x="46.4419%" y="357" width="0.3745%" height="15" fill="rgb(247,86,24)" fg:x="124" fg:w="1"/><text x="46.6919%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.75%)</title><rect x="47.1910%" y="325" width="0.7491%" height="15" fill="rgb(205,101,16)" fg:x="126" fg:w="2"/><text x="47.4410%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="48.6891%" y="261" width="0.3745%" height="15" fill="rgb(246,168,33)" fg:x="130" fg:w="1"/><text x="48.9391%" y="271.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="48.6891%" y="245" width="0.3745%" height="15" fill="rgb(231,114,1)" fg:x="130" fg:w="1"/><text x="48.9391%" y="255.50"></text></g><g><title>[libvulkan_intel.so] (4 samples, 1.50%)</title><rect x="47.9401%" y="325" width="1.4981%" height="15" fill="rgb(207,184,53)" fg:x="128" fg:w="4"/><text x="48.1901%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (4 samples, 1.50%)</title><rect x="47.9401%" y="309" width="1.4981%" height="15" fill="rgb(224,95,51)" fg:x="128" fg:w="4"/><text x="48.1901%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 1.12%)</title><rect x="48.3146%" y="293" width="1.1236%" height="15" fill="rgb(212,188,45)" fg:x="129" fg:w="3"/><text x="48.5646%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="48.6891%" y="277" width="0.7491%" height="15" fill="rgb(223,154,38)" fg:x="130" fg:w="2"/><text x="48.9391%" y="287.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="49.0637%" y="261" width="0.3745%" height="15" fill="rgb(251,22,52)" fg:x="131" fg:w="1"/><text x="49.3137%" y="271.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (2 samples, 0.75%)</title><rect x="49.4382%" y="325" width="0.7491%" height="15" fill="rgb(229,209,22)" fg:x="132" fg:w="2"/><text x="49.6882%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (2 samples, 0.75%)</title><rect x="49.4382%" y="309" width="0.7491%" height="15" fill="rgb(234,138,34)" fg:x="132" fg:w="2"/><text x="49.6882%" y="319.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (1 samples, 0.37%)</title><rect x="50.1873%" y="309" width="0.3745%" height="15" fill="rgb(212,95,11)" fg:x="134" fg:w="1"/><text x="50.4373%" y="319.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (2 samples, 0.75%)</title><rect x="50.1873%" y="325" width="0.7491%" height="15" fill="rgb(240,179,47)" fg:x="134" fg:w="2"/><text x="50.4373%" y="335.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (1 samples, 0.37%)</title><rect x="50.5618%" y="309" width="0.3745%" height="15" fill="rgb(240,163,11)" fg:x="135" fg:w="1"/><text x="50.8118%" y="319.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close_and_swap (3 samples, 1.12%)</title><rect x="50.9363%" y="325" width="1.1236%" height="15" fill="rgb(236,37,12)" fg:x="136" fg:w="3"/><text x="51.1863%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (3 samples, 1.12%)</title><rect x="50.9363%" y="309" width="1.1236%" height="15" fill="rgb(232,164,16)" fg:x="136" fg:w="3"/><text x="51.1863%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 1.12%)</title><rect x="50.9363%" y="293" width="1.1236%" height="15" fill="rgb(244,205,15)" fg:x="136" fg:w="3"/><text x="51.1863%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 1.12%)</title><rect x="50.9363%" y="277" width="1.1236%" height="15" fill="rgb(223,117,47)" fg:x="136" fg:w="3"/><text x="51.1863%" y="287.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (1 samples, 0.37%)</title><rect x="52.0599%" y="325" width="0.3745%" height="15" fill="rgb(244,107,35)" fg:x="139" fg:w="1"/><text x="52.3099%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.37%)</title><rect x="52.0599%" y="309" width="0.3745%" height="15" fill="rgb(205,140,8)" fg:x="139" fg:w="1"/><text x="52.3099%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.37%)</title><rect x="52.0599%" y="293" width="0.3745%" height="15" fill="rgb(228,84,46)" fg:x="139" fg:w="1"/><text x="52.3099%" y="303.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="52.0599%" y="277" width="0.3745%" height="15" fill="rgb(254,188,9)" fg:x="139" fg:w="1"/><text x="52.3099%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="52.0599%" y="261" width="0.3745%" height="15" fill="rgb(206,112,54)" fg:x="139" fg:w="1"/><text x="52.3099%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="52.0599%" y="245" width="0.3745%" height="15" fill="rgb(216,84,49)" fg:x="139" fg:w="1"/><text x="52.3099%" y="255.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (1 samples, 0.37%)</title><rect x="52.4345%" y="325" width="0.3745%" height="15" fill="rgb(214,194,35)" fg:x="140" fg:w="1"/><text x="52.6845%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (1 samples, 0.37%)</title><rect x="52.4345%" y="309" width="0.3745%" height="15" fill="rgb(249,28,3)" fg:x="140" fg:w="1"/><text x="52.6845%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="52.4345%" y="293" width="0.3745%" height="15" fill="rgb(222,56,52)" fg:x="140" fg:w="1"/><text x="52.6845%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="52.4345%" y="277" width="0.3745%" height="15" fill="rgb(245,217,50)" fg:x="140" fg:w="1"/><text x="52.6845%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="52.4345%" y="261" width="0.3745%" height="15" fill="rgb(213,201,24)" fg:x="140" fg:w="1"/><text x="52.6845%" y="271.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (1 samples, 0.37%)</title><rect x="52.8090%" y="325" width="0.3745%" height="15" fill="rgb(248,116,28)" fg:x="141" fg:w="1"/><text x="53.0590%" y="335.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.37%)</title><rect x="52.8090%" y="309" width="0.3745%" height="15" fill="rgb(219,72,43)" fg:x="141" fg:w="1"/><text x="53.0590%" y="319.50"></text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.753356876329018898 (25 samples, 9.36%)</title><rect x="46.8165%" y="405" width="9.3633%" height="15" fill="rgb(209,138,14)" fg:x="125" fg:w="25"/><text x="47.0665%" y="415.50">_ZN4core3ptr3..</text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (25 samples, 9.36%)</title><rect x="46.8165%" y="389" width="9.3633%" height="15" fill="rgb(222,18,33)" fg:x="125" fg:w="25"/><text x="47.0665%" y="399.50">&lt;wgpu::Render..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (25 samples, 9.36%)</title><rect x="46.8165%" y="373" width="9.3633%" height="15" fill="rgb(213,199,7)" fg:x="125" fg:w="25"/><text x="47.0665%" y="383.50">&lt;T as wgpu::c..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (25 samples, 9.36%)</title><rect x="46.8165%" y="357" width="9.3633%" height="15" fill="rgb(250,110,10)" fg:x="125" fg:w="25"/><text x="47.0665%" y="367.50">&lt;wgpu::backen..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (25 samples, 9.36%)</title><rect x="46.8165%" y="341" width="9.3633%" height="15" fill="rgb(248,123,6)" fg:x="125" fg:w="25"/><text x="47.0665%" y="351.50">wgpu_core::co..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (8 samples, 3.00%)</title><rect x="53.1835%" y="325" width="2.9963%" height="15" fill="rgb(206,91,31)" fg:x="142" fg:w="8"/><text x="53.4335%" y="335.50">wgp..</text></g><g><title>[libvulkan_intel.so] (8 samples, 3.00%)</title><rect x="53.1835%" y="309" width="2.9963%" height="15" fill="rgb(211,154,13)" fg:x="142" fg:w="8"/><text x="53.4335%" y="319.50">[li..</text></g><g><title>[libvulkan_intel.so] (5 samples, 1.87%)</title><rect x="54.3071%" y="293" width="1.8727%" height="15" fill="rgb(225,148,7)" fg:x="145" fg:w="5"/><text x="54.5571%" y="303.50">[..</text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="55.8052%" y="277" width="0.3745%" height="15" fill="rgb(220,160,43)" fg:x="149" fg:w="1"/><text x="56.0552%" y="287.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::bloom::Bloom as vert::modules::renderer::post_processing::PostProcessingEffect&gt;::apply::run_screen_render_pass (27 samples, 10.11%)</title><rect x="46.8165%" y="421" width="10.1124%" height="15" fill="rgb(213,52,39)" fg:x="125" fg:w="27"/><text x="47.0665%" y="431.50">&lt;vert::modules:..</text></g><g><title>wgpu::CommandEncoder::begin_render_pass (2 samples, 0.75%)</title><rect x="56.1798%" y="405" width="0.7491%" height="15" fill="rgb(243,137,7)" fg:x="150" fg:w="2"/><text x="56.4298%" y="415.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_begin_render_pass (2 samples, 0.75%)</title><rect x="56.1798%" y="389" width="0.7491%" height="15" fill="rgb(230,79,13)" fg:x="150" fg:w="2"/><text x="56.4298%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_begin_render_pass (2 samples, 0.75%)</title><rect x="56.1798%" y="373" width="0.7491%" height="15" fill="rgb(247,105,23)" fg:x="150" fg:w="2"/><text x="56.4298%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.75%)</title><rect x="56.1798%" y="357" width="0.7491%" height="15" fill="rgb(223,179,41)" fg:x="150" fg:w="2"/><text x="56.4298%" y="367.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::bloom::Bloom as vert::modules::renderer::post_processing::PostProcessingEffect&gt;::apply (28 samples, 10.49%)</title><rect x="46.8165%" y="437" width="10.4869%" height="15" fill="rgb(218,9,34)" fg:x="125" fg:w="28"/><text x="47.0665%" y="447.50">&lt;vert::modules:..</text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.753356876329018898 (1 samples, 0.37%)</title><rect x="56.9288%" y="421" width="0.3745%" height="15" fill="rgb(222,106,8)" fg:x="152" fg:w="1"/><text x="57.1788%" y="431.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (1 samples, 0.37%)</title><rect x="56.9288%" y="405" width="0.3745%" height="15" fill="rgb(211,220,0)" fg:x="152" fg:w="1"/><text x="57.1788%" y="415.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (1 samples, 0.37%)</title><rect x="56.9288%" y="389" width="0.3745%" height="15" fill="rgb(229,52,16)" fg:x="152" fg:w="1"/><text x="57.1788%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (1 samples, 0.37%)</title><rect x="56.9288%" y="373" width="0.3745%" height="15" fill="rgb(212,155,18)" fg:x="152" fg:w="1"/><text x="57.1788%" y="383.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.37%)</title><rect x="56.9288%" y="357" width="0.3745%" height="15" fill="rgb(242,21,14)" fg:x="152" fg:w="1"/><text x="57.1788%" y="367.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::tone_mapping::AcesToneMapping as vert::modules::renderer::post_processing::PostProcessingEffect&gt;::apply (1 samples, 0.37%)</title><rect x="57.3034%" y="437" width="0.3745%" height="15" fill="rgb(222,19,48)" fg:x="153" fg:w="1"/><text x="57.5534%" y="447.50"></text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.753356876329018898 (1 samples, 0.37%)</title><rect x="57.3034%" y="421" width="0.3745%" height="15" fill="rgb(232,45,27)" fg:x="153" fg:w="1"/><text x="57.5534%" y="431.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (1 samples, 0.37%)</title><rect x="57.3034%" y="405" width="0.3745%" height="15" fill="rgb(249,103,42)" fg:x="153" fg:w="1"/><text x="57.5534%" y="415.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (1 samples, 0.37%)</title><rect x="57.3034%" y="389" width="0.3745%" height="15" fill="rgb(246,81,33)" fg:x="153" fg:w="1"/><text x="57.5534%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (1 samples, 0.37%)</title><rect x="57.3034%" y="373" width="0.3745%" height="15" fill="rgb(252,33,42)" fg:x="153" fg:w="1"/><text x="57.5534%" y="383.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.37%)</title><rect x="57.3034%" y="357" width="0.3745%" height="15" fill="rgb(209,212,41)" fg:x="153" fg:w="1"/><text x="57.5534%" y="367.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (1 samples, 0.37%)</title><rect x="57.3034%" y="341" width="0.3745%" height="15" fill="rgb(207,154,6)" fg:x="153" fg:w="1"/><text x="57.5534%" y="351.50"></text></g><g><title>&lt;vert::modules::ui::ui_renderer::UiRenderer as vert::modules::renderer::main_pass_renderer::MainPassRenderer&gt;::render (3 samples, 1.12%)</title><rect x="57.6779%" y="437" width="1.1236%" height="15" fill="rgb(223,64,47)" fg:x="154" fg:w="3"/><text x="57.9279%" y="447.50"></text></g><g><title>wgpu::RenderPass::set_vertex_buffer (3 samples, 1.12%)</title><rect x="57.6779%" y="421" width="1.1236%" height="15" fill="rgb(211,161,38)" fg:x="154" fg:w="3"/><text x="57.9279%" y="431.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_set_vertex_buffer (1 samples, 0.37%)</title><rect x="58.4270%" y="405" width="0.3745%" height="15" fill="rgb(219,138,40)" fg:x="156" fg:w="1"/><text x="58.6770%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="67.7903%" y="325" width="0.3745%" height="15" fill="rgb(241,228,46)" fg:x="181" fg:w="1"/><text x="68.0403%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="68.1648%" y="325" width="0.7491%" height="15" fill="rgb(223,209,38)" fg:x="182" fg:w="2"/><text x="68.4148%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (23 samples, 8.61%)</title><rect x="60.6742%" y="357" width="8.6142%" height="15" fill="rgb(236,164,45)" fg:x="162" fg:w="23"/><text x="60.9242%" y="367.50">[libvulkan_i..</text></g><g><title>[libvulkan_intel.so] (15 samples, 5.62%)</title><rect x="63.6704%" y="341" width="5.6180%" height="15" fill="rgb(231,15,5)" fg:x="170" fg:w="15"/><text x="63.9204%" y="351.50">[libvul..</text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="68.9139%" y="325" width="0.3745%" height="15" fill="rgb(252,35,15)" fg:x="184" fg:w="1"/><text x="69.1639%" y="335.50"></text></g><g><title>cfree (1 samples, 0.37%)</title><rect x="69.2884%" y="357" width="0.3745%" height="15" fill="rgb(248,181,18)" fg:x="185" fg:w="1"/><text x="69.5384%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="69.2884%" y="341" width="0.3745%" height="15" fill="rgb(233,39,42)" fg:x="185" fg:w="1"/><text x="69.5384%" y="351.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (5 samples, 1.87%)</title><rect x="69.6629%" y="357" width="1.8727%" height="15" fill="rgb(238,110,33)" fg:x="186" fg:w="5"/><text x="69.9129%" y="367.50">w..</text></g><g><title>wgpu_core::command::bind::compat::BoundBindGroupLayouts::update_expectations (3 samples, 1.12%)</title><rect x="70.4120%" y="341" width="1.1236%" height="15" fill="rgb(233,195,10)" fg:x="188" fg:w="3"/><text x="70.6620%" y="351.50"></text></g><g><title>wgpu_core::command::bind::compat::BoundBindGroupLayouts::invalid_mask (1 samples, 0.37%)</title><rect x="71.5356%" y="357" width="0.3745%" height="15" fill="rgb(254,105,3)" fg:x="191" fg:w="1"/><text x="71.7856%" y="367.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (1 samples, 0.37%)</title><rect x="71.9101%" y="357" width="0.3745%" height="15" fill="rgb(221,225,9)" fg:x="192" fg:w="1"/><text x="72.1601%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (1 samples, 0.37%)</title><rect x="71.9101%" y="341" width="0.3745%" height="15" fill="rgb(224,227,45)" fg:x="192" fg:w="1"/><text x="72.1601%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="71.9101%" y="325" width="0.3745%" height="15" fill="rgb(229,198,43)" fg:x="192" fg:w="1"/><text x="72.1601%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="71.9101%" y="309" width="0.3745%" height="15" fill="rgb(206,209,35)" fg:x="192" fg:w="1"/><text x="72.1601%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="71.9101%" y="293" width="0.3745%" height="15" fill="rgb(245,195,53)" fg:x="192" fg:w="1"/><text x="72.1601%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="71.9101%" y="277" width="0.3745%" height="15" fill="rgb(240,92,26)" fg:x="192" fg:w="1"/><text x="72.1601%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="71.9101%" y="261" width="0.3745%" height="15" fill="rgb(207,40,23)" fg:x="192" fg:w="1"/><text x="72.1601%" y="271.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="71.9101%" y="245" width="0.3745%" height="15" fill="rgb(223,111,35)" fg:x="192" fg:w="1"/><text x="72.1601%" y="255.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="71.9101%" y="229" width="0.3745%" height="15" fill="rgb(229,147,28)" fg:x="192" fg:w="1"/><text x="72.1601%" y="239.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (2 samples, 0.75%)</title><rect x="72.2846%" y="357" width="0.7491%" height="15" fill="rgb(211,29,28)" fg:x="193" fg:w="2"/><text x="72.5346%" y="367.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (1 samples, 0.37%)</title><rect x="72.6592%" y="341" width="0.3745%" height="15" fill="rgb(228,72,33)" fg:x="194" fg:w="1"/><text x="72.9092%" y="351.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.37%)</title><rect x="72.6592%" y="325" width="0.3745%" height="15" fill="rgb(205,214,31)" fg:x="194" fg:w="1"/><text x="72.9092%" y="335.50"></text></g><g><title>wgpu_core::command::render::VertexState::update_limits (1 samples, 0.37%)</title><rect x="73.0337%" y="357" width="0.3745%" height="15" fill="rgb(224,111,15)" fg:x="195" fg:w="1"/><text x="73.2837%" y="367.50"></text></g><g><title>wgpu_core::device::RenderPassContext::check_compatible (1 samples, 0.37%)</title><rect x="73.4082%" y="357" width="0.3745%" height="15" fill="rgb(253,21,26)" fg:x="196" fg:w="1"/><text x="73.6582%" y="367.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (9 samples, 3.37%)</title><rect x="73.7828%" y="341" width="3.3708%" height="15" fill="rgb(245,139,43)" fg:x="197" fg:w="9"/><text x="74.0328%" y="351.50">wgp..</text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (50 samples, 18.73%)</title><rect x="58.8015%" y="437" width="18.7266%" height="15" fill="rgb(252,170,7)" fg:x="157" fg:w="50"/><text x="59.0515%" y="447.50">core::ptr::drop_in_place&lt;wgpu..</text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (49 samples, 18.35%)</title><rect x="59.1760%" y="421" width="18.3521%" height="15" fill="rgb(231,118,14)" fg:x="158" fg:w="49"/><text x="59.4260%" y="431.50">&lt;wgpu::RenderPass as core::op..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (49 samples, 18.35%)</title><rect x="59.1760%" y="405" width="18.3521%" height="15" fill="rgb(238,83,0)" fg:x="158" fg:w="49"/><text x="59.4260%" y="415.50">&lt;T as wgpu::context::DynConte..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (49 samples, 18.35%)</title><rect x="59.1760%" y="389" width="18.3521%" height="15" fill="rgb(221,39,39)" fg:x="158" fg:w="49"/><text x="59.4260%" y="399.50">&lt;wgpu::backend::direct::Conte..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (49 samples, 18.35%)</title><rect x="59.1760%" y="373" width="18.3521%" height="15" fill="rgb(222,119,46)" fg:x="158" fg:w="49"/><text x="59.4260%" y="383.50">wgpu_core::command::render::&lt;..</text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (10 samples, 3.75%)</title><rect x="73.7828%" y="357" width="3.7453%" height="15" fill="rgb(222,165,49)" fg:x="197" fg:w="10"/><text x="74.0328%" y="367.50">wgpu..</text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::get (1 samples, 0.37%)</title><rect x="77.1536%" y="341" width="0.3745%" height="15" fill="rgb(219,113,52)" fg:x="206" fg:w="1"/><text x="77.4036%" y="351.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (1 samples, 0.37%)</title><rect x="77.5281%" y="357" width="0.3745%" height="15" fill="rgb(214,7,15)" fg:x="207" fg:w="1"/><text x="77.7781%" y="367.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="77.5281%" y="341" width="0.3745%" height="15" fill="rgb(235,32,4)" fg:x="207" fg:w="1"/><text x="77.7781%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="77.5281%" y="325" width="0.3745%" height="15" fill="rgb(238,90,54)" fg:x="207" fg:w="1"/><text x="77.7781%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="77.5281%" y="309" width="0.3745%" height="15" fill="rgb(213,208,19)" fg:x="207" fg:w="1"/><text x="77.7781%" y="319.50"></text></g><g><title>vert::modules::graphics_context::GraphicsContext::new_surface_texture_and_view (10 samples, 3.75%)</title><rect x="77.5281%" y="437" width="3.7453%" height="15" fill="rgb(233,156,4)" fg:x="207" fg:w="10"/><text x="77.7781%" y="447.50">vert..</text></g><g><title>wgpu::Surface::get_current_texture (10 samples, 3.75%)</title><rect x="77.5281%" y="421" width="3.7453%" height="15" fill="rgb(207,194,5)" fg:x="207" fg:w="10"/><text x="77.7781%" y="431.50">wgpu..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (10 samples, 3.75%)</title><rect x="77.5281%" y="405" width="3.7453%" height="15" fill="rgb(206,111,30)" fg:x="207" fg:w="10"/><text x="77.7781%" y="415.50">&lt;T a..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (10 samples, 3.75%)</title><rect x="77.5281%" y="389" width="3.7453%" height="15" fill="rgb(243,70,54)" fg:x="207" fg:w="10"/><text x="77.7781%" y="399.50">&lt;wgp..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_get_current_texture (10 samples, 3.75%)</title><rect x="77.5281%" y="373" width="3.7453%" height="15" fill="rgb(242,28,8)" fg:x="207" fg:w="10"/><text x="77.7781%" y="383.50">wgpu..</text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (9 samples, 3.37%)</title><rect x="77.9026%" y="357" width="3.3708%" height="15" fill="rgb(219,106,18)" fg:x="208" fg:w="9"/><text x="78.1526%" y="367.50">wgp..</text></g><g><title>[libvulkan_intel.so] (9 samples, 3.37%)</title><rect x="77.9026%" y="341" width="3.3708%" height="15" fill="rgb(244,222,10)" fg:x="208" fg:w="9"/><text x="78.1526%" y="351.50">[li..</text></g><g><title>[libvulkan_intel.so] (9 samples, 3.37%)</title><rect x="77.9026%" y="325" width="3.3708%" height="15" fill="rgb(236,179,52)" fg:x="208" fg:w="9"/><text x="78.1526%" y="335.50">[li..</text></g><g><title>[libvulkan_intel.so] (9 samples, 3.37%)</title><rect x="77.9026%" y="309" width="3.3708%" height="15" fill="rgb(213,23,39)" fg:x="208" fg:w="9"/><text x="78.1526%" y="319.50">[li..</text></g><g><title>drmSyncobjWait (8 samples, 3.00%)</title><rect x="78.2772%" y="293" width="2.9963%" height="15" fill="rgb(238,48,10)" fg:x="209" fg:w="8"/><text x="78.5272%" y="303.50">drm..</text></g><g><title>drmIoctl (8 samples, 3.00%)</title><rect x="78.2772%" y="277" width="2.9963%" height="15" fill="rgb(251,196,23)" fg:x="209" fg:w="8"/><text x="78.5272%" y="287.50">drm..</text></g><g><title>ioctl (8 samples, 3.00%)</title><rect x="78.2772%" y="261" width="2.9963%" height="15" fill="rgb(250,152,24)" fg:x="209" fg:w="8"/><text x="78.5272%" y="271.50">ioc..</text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="81.2734%" y="277" width="0.3745%" height="15" fill="rgb(209,150,17)" fg:x="217" fg:w="1"/><text x="81.5234%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="81.2734%" y="261" width="0.3745%" height="15" fill="rgb(234,202,34)" fg:x="217" fg:w="1"/><text x="81.5234%" y="271.50"></text></g><g><title>ioctl (1 samples, 0.37%)</title><rect x="81.2734%" y="245" width="0.3745%" height="15" fill="rgb(253,148,53)" fg:x="217" fg:w="1"/><text x="81.5234%" y="255.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (2 samples, 0.75%)</title><rect x="81.2734%" y="373" width="0.7491%" height="15" fill="rgb(218,129,16)" fg:x="217" fg:w="2"/><text x="81.5234%" y="383.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="81.2734%" y="357" width="0.7491%" height="15" fill="rgb(216,85,19)" fg:x="217" fg:w="2"/><text x="81.5234%" y="367.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="81.2734%" y="341" width="0.7491%" height="15" fill="rgb(235,228,7)" fg:x="217" fg:w="2"/><text x="81.5234%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="81.2734%" y="325" width="0.7491%" height="15" fill="rgb(245,175,0)" fg:x="217" fg:w="2"/><text x="81.5234%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="81.2734%" y="309" width="0.7491%" height="15" fill="rgb(208,168,36)" fg:x="217" fg:w="2"/><text x="81.5234%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="81.2734%" y="293" width="0.7491%" height="15" fill="rgb(246,171,24)" fg:x="217" fg:w="2"/><text x="81.5234%" y="303.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.37%)</title><rect x="81.6479%" y="277" width="0.3745%" height="15" fill="rgb(215,142,24)" fg:x="218" fg:w="1"/><text x="81.8979%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.75%)</title><rect x="82.0225%" y="357" width="0.7491%" height="15" fill="rgb(250,187,7)" fg:x="219" fg:w="2"/><text x="82.2725%" y="367.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.75%)</title><rect x="82.0225%" y="341" width="0.7491%" height="15" fill="rgb(228,66,33)" fg:x="219" fg:w="2"/><text x="82.2725%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&lt;wgpu_hal::gles::Api&gt;&gt; (3 samples, 1.12%)</title><rect x="82.0225%" y="373" width="1.1236%" height="15" fill="rgb(234,215,21)" fg:x="219" fg:w="3"/><text x="82.2725%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::texture::TextureTracker&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.37%)</title><rect x="82.7715%" y="357" width="0.3745%" height="15" fill="rgb(222,191,20)" fg:x="221" fg:w="1"/><text x="83.0215%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.37%)</title><rect x="82.7715%" y="341" width="0.3745%" height="15" fill="rgb(245,79,54)" fg:x="221" fg:w="1"/><text x="83.0215%" y="351.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.37%)</title><rect x="82.7715%" y="325" width="0.3745%" height="15" fill="rgb(240,10,37)" fg:x="221" fg:w="1"/><text x="83.0215%" y="335.50"></text></g><g><title>[libc.so.6] (3 samples, 1.12%)</title><rect x="83.5206%" y="293" width="1.1236%" height="15" fill="rgb(214,192,32)" fg:x="223" fg:w="3"/><text x="83.7706%" y="303.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (4 samples, 1.50%)</title><rect x="83.5206%" y="357" width="1.4981%" height="15" fill="rgb(209,36,54)" fg:x="223" fg:w="4"/><text x="83.7706%" y="367.50"></text></g><g><title>[libvulkan_intel.so] (4 samples, 1.50%)</title><rect x="83.5206%" y="341" width="1.4981%" height="15" fill="rgb(220,10,11)" fg:x="223" fg:w="4"/><text x="83.7706%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (4 samples, 1.50%)</title><rect x="83.5206%" y="325" width="1.4981%" height="15" fill="rgb(221,106,17)" fg:x="223" fg:w="4"/><text x="83.7706%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (4 samples, 1.50%)</title><rect x="83.5206%" y="309" width="1.4981%" height="15" fill="rgb(251,142,44)" fg:x="223" fg:w="4"/><text x="83.7706%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="84.6442%" y="293" width="0.3745%" height="15" fill="rgb(238,13,15)" fg:x="226" fg:w="1"/><text x="84.8942%" y="303.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::maintain (6 samples, 2.25%)</title><rect x="83.1461%" y="373" width="2.2472%" height="15" fill="rgb(208,107,27)" fg:x="222" fg:w="6"/><text x="83.3961%" y="383.50">w..</text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (1 samples, 0.37%)</title><rect x="85.0187%" y="357" width="0.3745%" height="15" fill="rgb(205,136,37)" fg:x="227" fg:w="1"/><text x="85.2687%" y="367.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::remove (1 samples, 0.37%)</title><rect x="85.0187%" y="341" width="0.3745%" height="15" fill="rgb(250,205,27)" fg:x="227" fg:w="1"/><text x="85.2687%" y="351.50"></text></g><g><title>cfree (1 samples, 0.37%)</title><rect x="85.0187%" y="325" width="0.3745%" height="15" fill="rgb(210,80,43)" fg:x="227" fg:w="1"/><text x="85.2687%" y="335.50"></text></g><g><title>wgpu::Queue::submit (12 samples, 4.49%)</title><rect x="81.2734%" y="437" width="4.4944%" height="15" fill="rgb(247,160,36)" fg:x="217" fg:w="12"/><text x="81.5234%" y="447.50">wgpu:..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (12 samples, 4.49%)</title><rect x="81.2734%" y="421" width="4.4944%" height="15" fill="rgb(234,13,49)" fg:x="217" fg:w="12"/><text x="81.5234%" y="431.50">&lt;T as..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (12 samples, 4.49%)</title><rect x="81.2734%" y="405" width="4.4944%" height="15" fill="rgb(234,122,0)" fg:x="217" fg:w="12"/><text x="81.5234%" y="415.50">&lt;wgpu..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_submit (12 samples, 4.49%)</title><rect x="81.2734%" y="389" width="4.4944%" height="15" fill="rgb(207,146,38)" fg:x="217" fg:w="12"/><text x="81.5234%" y="399.50">wgpu_..</text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::get_mut (1 samples, 0.37%)</title><rect x="85.3933%" y="373" width="0.3745%" height="15" fill="rgb(207,177,25)" fg:x="228" fg:w="1"/><text x="85.6433%" y="383.50"></text></g><g><title>wgpu::Queue::write_buffer (1 samples, 0.37%)</title><rect x="85.7678%" y="437" width="0.3745%" height="15" fill="rgb(211,178,42)" fg:x="229" fg:w="1"/><text x="86.0178%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (1 samples, 0.37%)</title><rect x="85.7678%" y="421" width="0.3745%" height="15" fill="rgb(230,69,54)" fg:x="229" fg:w="1"/><text x="86.0178%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (1 samples, 0.37%)</title><rect x="85.7678%" y="405" width="0.3745%" height="15" fill="rgb(214,135,41)" fg:x="229" fg:w="1"/><text x="86.0178%" y="415.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (1 samples, 0.37%)</title><rect x="85.7678%" y="389" width="0.3745%" height="15" fill="rgb(237,67,25)" fg:x="229" fg:w="1"/><text x="86.0178%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="85.7678%" y="373" width="0.3745%" height="15" fill="rgb(222,189,50)" fg:x="229" fg:w="1"/><text x="86.0178%" y="383.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (2 samples, 0.75%)</title><rect x="86.1423%" y="373" width="0.7491%" height="15" fill="rgb(245,148,34)" fg:x="230" fg:w="2"/><text x="86.3923%" y="383.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="86.1423%" y="357" width="0.7491%" height="15" fill="rgb(222,29,6)" fg:x="230" fg:w="2"/><text x="86.3923%" y="367.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="86.1423%" y="341" width="0.7491%" height="15" fill="rgb(221,189,43)" fg:x="230" fg:w="2"/><text x="86.3923%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="86.1423%" y="325" width="0.7491%" height="15" fill="rgb(207,36,27)" fg:x="230" fg:w="2"/><text x="86.3923%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="86.1423%" y="309" width="0.7491%" height="15" fill="rgb(217,90,24)" fg:x="230" fg:w="2"/><text x="86.3923%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.75%)</title><rect x="86.1423%" y="293" width="0.7491%" height="15" fill="rgb(224,66,35)" fg:x="230" fg:w="2"/><text x="86.3923%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="86.5169%" y="277" width="0.3745%" height="15" fill="rgb(221,13,50)" fg:x="231" fg:w="1"/><text x="86.7669%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="86.5169%" y="261" width="0.3745%" height="15" fill="rgb(236,68,49)" fg:x="231" fg:w="1"/><text x="86.7669%" y="271.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="86.5169%" y="245" width="0.3745%" height="15" fill="rgb(229,146,28)" fg:x="231" fg:w="1"/><text x="86.7669%" y="255.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="86.5169%" y="229" width="0.3745%" height="15" fill="rgb(225,31,38)" fg:x="231" fg:w="1"/><text x="86.7669%" y="239.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="86.5169%" y="213" width="0.3745%" height="15" fill="rgb(250,208,3)" fg:x="231" fg:w="1"/><text x="86.7669%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="86.5169%" y="197" width="0.3745%" height="15" fill="rgb(246,54,23)" fg:x="231" fg:w="1"/><text x="86.7669%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="86.5169%" y="181" width="0.3745%" height="15" fill="rgb(243,76,11)" fg:x="231" fg:w="1"/><text x="86.7669%" y="191.50"></text></g><g><title>_ZN4vert7modules8renderer8Renderer18prepare_and_render17h80bcbabc5bbee19bE.llvm.2757540087349140276 (117 samples, 43.82%)</title><rect x="43.4457%" y="453" width="43.8202%" height="15" fill="rgb(245,21,50)" fg:x="116" fg:w="117"/><text x="43.6957%" y="463.50">_ZN4vert7modules8renderer8Renderer18prepare_and_render17h80bcbabc5bbee19..</text></g><g><title>wgpu::SurfaceTexture::present (3 samples, 1.12%)</title><rect x="86.1423%" y="437" width="1.1236%" height="15" fill="rgb(228,9,43)" fg:x="230" fg:w="3"/><text x="86.3923%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (3 samples, 1.12%)</title><rect x="86.1423%" y="421" width="1.1236%" height="15" fill="rgb(208,100,47)" fg:x="230" fg:w="3"/><text x="86.3923%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (3 samples, 1.12%)</title><rect x="86.1423%" y="405" width="1.1236%" height="15" fill="rgb(232,26,8)" fg:x="230" fg:w="3"/><text x="86.3923%" y="415.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_present (3 samples, 1.12%)</title><rect x="86.1423%" y="389" width="1.1236%" height="15" fill="rgb(216,166,38)" fg:x="230" fg:w="3"/><text x="86.3923%" y="399.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::remove (1 samples, 0.37%)</title><rect x="86.8914%" y="373" width="0.3745%" height="15" fill="rgb(251,202,51)" fg:x="232" fg:w="1"/><text x="87.1414%" y="383.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::remove (1 samples, 0.37%)</title><rect x="86.8914%" y="357" width="0.3745%" height="15" fill="rgb(254,216,34)" fg:x="232" fg:w="1"/><text x="87.1414%" y="367.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.37%)</title><rect x="86.8914%" y="341" width="0.3745%" height="15" fill="rgb(251,32,27)" fg:x="232" fg:w="1"/><text x="87.1414%" y="351.50"></text></g><g><title>vert::modules::renderer::main_pass_renderer::color_mesh::ColorMeshRenderer::draw_cubes (1 samples, 0.37%)</title><rect x="87.2659%" y="437" width="0.3745%" height="15" fill="rgb(208,127,28)" fg:x="233" fg:w="1"/><text x="87.5159%" y="447.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="87.2659%" y="421" width="0.3745%" height="15" fill="rgb(224,137,22)" fg:x="233" fg:w="1"/><text x="87.5159%" y="431.50"></text></g><g><title>&lt;vert::modules::ui::billboard::DivChildIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.37%)</title><rect x="87.6404%" y="405" width="0.3745%" height="15" fill="rgb(254,70,32)" fg:x="234" fg:w="1"/><text x="87.8904%" y="415.50"></text></g><g><title>morphorm::layout::layout (1 samples, 0.37%)</title><rect x="88.0150%" y="405" width="0.3745%" height="15" fill="rgb(229,75,37)" fg:x="235" fg:w="1"/><text x="88.2650%" y="415.50"></text></g><g><title>morphorm::types::Units::to_px_clamped (2 samples, 0.75%)</title><rect x="88.3895%" y="405" width="0.7491%" height="15" fill="rgb(252,64,23)" fg:x="236" fg:w="2"/><text x="88.6395%" y="415.50"></text></g><g><title>ui::MyApp::update (6 samples, 2.25%)</title><rect x="87.2659%" y="453" width="2.2472%" height="15" fill="rgb(232,162,48)" fg:x="233" fg:w="6"/><text x="87.5159%" y="463.50">u..</text></g><g><title>vert::modules::ui::billboard::Billboard::end_frame (5 samples, 1.87%)</title><rect x="87.6404%" y="437" width="1.8727%" height="15" fill="rgb(246,160,12)" fg:x="234" fg:w="5"/><text x="87.8904%" y="447.50">v..</text></g><g><title>morphorm::layout::layout (5 samples, 1.87%)</title><rect x="87.6404%" y="421" width="1.8727%" height="15" fill="rgb(247,166,0)" fg:x="234" fg:w="5"/><text x="87.8904%" y="431.50">m..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::with_capacity (1 samples, 0.37%)</title><rect x="89.1386%" y="405" width="0.3745%" height="15" fill="rgb(249,219,21)" fg:x="238" fg:w="1"/><text x="89.3886%" y="415.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (1 samples, 0.37%)</title><rect x="89.1386%" y="389" width="0.3745%" height="15" fill="rgb(205,209,3)" fg:x="238" fg:w="1"/><text x="89.3886%" y="399.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="89.1386%" y="373" width="0.3745%" height="15" fill="rgb(243,44,1)" fg:x="238" fg:w="1"/><text x="89.3886%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="89.1386%" y="357" width="0.3745%" height="15" fill="rgb(206,159,16)" fg:x="238" fg:w="1"/><text x="89.3886%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="89.1386%" y="341" width="0.3745%" height="15" fill="rgb(244,77,30)" fg:x="238" fg:w="1"/><text x="89.3886%" y="351.50"></text></g><g><title>egui::memory::Memory::gained_focus (1 samples, 0.37%)</title><rect x="89.5131%" y="293" width="0.3745%" height="15" fill="rgb(218,69,12)" fg:x="239" fg:w="1"/><text x="89.7631%" y="303.50"></text></g><g><title>&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (2 samples, 0.75%)</title><rect x="89.5131%" y="309" width="0.7491%" height="15" fill="rgb(212,87,7)" fg:x="239" fg:w="2"/><text x="89.7631%" y="319.50"></text></g><g><title>egui::widgets::label::Label::layout_in_ui (1 samples, 0.37%)</title><rect x="89.8876%" y="293" width="0.3745%" height="15" fill="rgb(245,114,25)" fg:x="240" fg:w="1"/><text x="90.1376%" y="303.50"></text></g><g><title>egui::ui::Ui::allocate_exact_size (1 samples, 0.37%)</title><rect x="89.8876%" y="277" width="0.3745%" height="15" fill="rgb(210,61,42)" fg:x="240" fg:w="1"/><text x="90.1376%" y="287.50"></text></g><g><title>egui::context::Context::interact (1 samples, 0.37%)</title><rect x="89.8876%" y="261" width="0.3745%" height="15" fill="rgb(211,52,33)" fg:x="240" fg:w="1"/><text x="90.1376%" y="271.50"></text></g><g><title>egui::context::Context::interact_with_hovered (1 samples, 0.37%)</title><rect x="89.8876%" y="245" width="0.3745%" height="15" fill="rgb(234,58,33)" fg:x="240" fg:w="1"/><text x="90.1376%" y="255.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.37%)</title><rect x="89.8876%" y="229" width="0.3745%" height="15" fill="rgb(220,115,36)" fg:x="240" fg:w="1"/><text x="90.1376%" y="239.50"></text></g><g><title>&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (1 samples, 0.37%)</title><rect x="90.2622%" y="229" width="0.3745%" height="15" fill="rgb(243,153,54)" fg:x="241" fg:w="1"/><text x="90.5122%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.37%)</title><rect x="90.2622%" y="213" width="0.3745%" height="15" fill="rgb(251,47,18)" fg:x="241" fg:w="1"/><text x="90.5122%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.37%)</title><rect x="90.2622%" y="197" width="0.3745%" height="15" fill="rgb(242,102,42)" fg:x="241" fg:w="1"/><text x="90.5122%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.37%)</title><rect x="90.2622%" y="181" width="0.3745%" height="15" fill="rgb(234,31,38)" fg:x="241" fg:w="1"/><text x="90.5122%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.37%)</title><rect x="90.2622%" y="165" width="0.3745%" height="15" fill="rgb(221,117,51)" fg:x="241" fg:w="1"/><text x="90.5122%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.37%)</title><rect x="90.2622%" y="149" width="0.3745%" height="15" fill="rgb(212,20,18)" fg:x="241" fg:w="1"/><text x="90.5122%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.37%)</title><rect x="90.2622%" y="133" width="0.3745%" height="15" fill="rgb(245,133,36)" fg:x="241" fg:w="1"/><text x="90.5122%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.37%)</title><rect x="90.2622%" y="117" width="0.3745%" height="15" fill="rgb(212,6,19)" fg:x="241" fg:w="1"/><text x="90.5122%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.37%)</title><rect x="90.2622%" y="101" width="0.3745%" height="15" fill="rgb(218,1,36)" fg:x="241" fg:w="1"/><text x="90.5122%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.37%)</title><rect x="90.2622%" y="85" width="0.3745%" height="15" fill="rgb(246,84,54)" fg:x="241" fg:w="1"/><text x="90.5122%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.37%)</title><rect x="90.2622%" y="69" width="0.3745%" height="15" fill="rgb(242,110,6)" fg:x="241" fg:w="1"/><text x="90.5122%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.37%)</title><rect x="90.2622%" y="53" width="0.3745%" height="15" fill="rgb(214,47,5)" fg:x="241" fg:w="1"/><text x="90.5122%" y="63.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="90.2622%" y="37" width="0.3745%" height="15" fill="rgb(218,159,25)" fg:x="241" fg:w="1"/><text x="90.5122%" y="47.50"></text></g><g><title>egui::context::Context::interact (1 samples, 0.37%)</title><rect x="90.6367%" y="213" width="0.3745%" height="15" fill="rgb(215,211,28)" fg:x="242" fg:w="1"/><text x="90.8867%" y="223.50"></text></g><g><title>egui::context::Context::interact_with_hovered (1 samples, 0.37%)</title><rect x="90.6367%" y="197" width="0.3745%" height="15" fill="rgb(238,59,32)" fg:x="242" fg:w="1"/><text x="90.8867%" y="207.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.37%)</title><rect x="90.6367%" y="181" width="0.3745%" height="15" fill="rgb(226,82,3)" fg:x="242" fg:w="1"/><text x="90.8867%" y="191.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingState::show_body_unindented (5 samples, 1.87%)</title><rect x="89.5131%" y="421" width="1.8727%" height="15" fill="rgb(240,164,32)" fg:x="239" fg:w="5"/><text x="89.7631%" y="431.50">e..</text></g><g><title>egui::ui::Ui::scope (5 samples, 1.87%)</title><rect x="89.5131%" y="405" width="1.8727%" height="15" fill="rgb(232,46,7)" fg:x="239" fg:w="5"/><text x="89.7631%" y="415.50">e..</text></g><g><title>egui::ui::Ui::scope_dyn (5 samples, 1.87%)</title><rect x="89.5131%" y="389" width="1.8727%" height="15" fill="rgb(229,129,53)" fg:x="239" fg:w="5"/><text x="89.7631%" y="399.50">e..</text></g><g><title>_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17ha9b0284caac2e444E.llvm.14917777082512500663 (5 samples, 1.87%)</title><rect x="89.5131%" y="373" width="1.8727%" height="15" fill="rgb(234,188,29)" fg:x="239" fg:w="5"/><text x="89.7631%" y="383.50">_..</text></g><g><title>egui::containers::resize::Resize::show (5 samples, 1.87%)</title><rect x="89.5131%" y="357" width="1.8727%" height="15" fill="rgb(246,141,4)" fg:x="239" fg:w="5"/><text x="89.7631%" y="367.50">e..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 1.87%)</title><rect x="89.5131%" y="341" width="1.8727%" height="15" fill="rgb(229,23,39)" fg:x="239" fg:w="5"/><text x="89.7631%" y="351.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 1.87%)</title><rect x="89.5131%" y="325" width="1.8727%" height="15" fill="rgb(206,12,3)" fg:x="239" fg:w="5"/><text x="89.7631%" y="335.50">c..</text></g><g><title>&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (3 samples, 1.12%)</title><rect x="90.2622%" y="309" width="1.1236%" height="15" fill="rgb(252,226,20)" fg:x="241" fg:w="3"/><text x="90.5122%" y="319.50"></text></g><g><title>egui::ui::Ui::horizontal_with_main_wrap_dyn (3 samples, 1.12%)</title><rect x="90.2622%" y="293" width="1.1236%" height="15" fill="rgb(216,123,35)" fg:x="241" fg:w="3"/><text x="90.5122%" y="303.50"></text></g><g><title>egui::ui::Ui::allocate_ui_with_layout_dyn (3 samples, 1.12%)</title><rect x="90.2622%" y="277" width="1.1236%" height="15" fill="rgb(212,68,40)" fg:x="241" fg:w="3"/><text x="90.5122%" y="287.50"></text></g><g><title>_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h668347b07e9db4e5E.llvm.14826037258625001205 (3 samples, 1.12%)</title><rect x="90.2622%" y="261" width="1.1236%" height="15" fill="rgb(254,125,32)" fg:x="241" fg:w="3"/><text x="90.5122%" y="271.50"></text></g><g><title>egui::widgets::slider::Slider::add_contents (3 samples, 1.12%)</title><rect x="90.2622%" y="245" width="1.1236%" height="15" fill="rgb(253,97,22)" fg:x="241" fg:w="3"/><text x="90.5122%" y="255.50"></text></g><g><title>egui::ui::Ui::allocate_response (2 samples, 0.75%)</title><rect x="90.6367%" y="229" width="0.7491%" height="15" fill="rgb(241,101,14)" fg:x="242" fg:w="2"/><text x="90.8867%" y="239.50"></text></g><g><title>emath::align::Align2::align_size_within_rect (1 samples, 0.37%)</title><rect x="91.0112%" y="213" width="0.3745%" height="15" fill="rgb(238,103,29)" fg:x="243" fg:w="1"/><text x="91.2612%" y="223.50"></text></g><g><title>egui::containers::frame::Prepared::end (2 samples, 0.75%)</title><rect x="91.3858%" y="421" width="0.7491%" height="15" fill="rgb(233,195,47)" fg:x="244" fg:w="2"/><text x="91.6358%" y="431.50"></text></g><g><title>egui::containers::frame::Frame::paint (2 samples, 0.75%)</title><rect x="91.3858%" y="405" width="0.7491%" height="15" fill="rgb(246,218,30)" fg:x="244" fg:w="2"/><text x="91.6358%" y="415.50"></text></g><g><title>epaint::shadow::Shadow::tessellate (2 samples, 0.75%)</title><rect x="91.3858%" y="389" width="0.7491%" height="15" fill="rgb(219,145,47)" fg:x="244" fg:w="2"/><text x="91.6358%" y="399.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_rect (2 samples, 0.75%)</title><rect x="91.3858%" y="373" width="0.7491%" height="15" fill="rgb(243,12,26)" fg:x="244" fg:w="2"/><text x="91.6358%" y="383.50"></text></g><g><title>epaint::tessellator::Path::fill (2 samples, 0.75%)</title><rect x="91.3858%" y="357" width="0.7491%" height="15" fill="rgb(214,87,16)" fg:x="244" fg:w="2"/><text x="91.6358%" y="367.50"></text></g><g><title>vert::modules::batteries::graphics_settings_controller::GraphicsSettingsController::update (8 samples, 3.00%)</title><rect x="89.5131%" y="453" width="2.9963%" height="15" fill="rgb(208,99,42)" fg:x="239" fg:w="8"/><text x="89.7631%" y="463.50">ver..</text></g><g><title>egui::containers::window::Window::show_dyn (8 samples, 3.00%)</title><rect x="89.5131%" y="437" width="2.9963%" height="15" fill="rgb(253,99,2)" fg:x="239" fg:w="8"/><text x="89.7631%" y="447.50">egu..</text></g><g><title>egui::containers::window::show_title_bar (1 samples, 0.37%)</title><rect x="92.1348%" y="421" width="0.3745%" height="15" fill="rgb(220,168,23)" fg:x="246" fg:w="1"/><text x="92.3848%" y="431.50"></text></g><g><title>egui::ui::Ui::horizontal_with_main_wrap_dyn (1 samples, 0.37%)</title><rect x="92.1348%" y="405" width="0.3745%" height="15" fill="rgb(242,38,24)" fg:x="246" fg:w="1"/><text x="92.3848%" y="415.50"></text></g><g><title>egui::ui::Ui::allocate_ui_with_layout_dyn (1 samples, 0.37%)</title><rect x="92.1348%" y="389" width="0.3745%" height="15" fill="rgb(225,182,9)" fg:x="246" fg:w="1"/><text x="92.3848%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.37%)</title><rect x="92.1348%" y="373" width="0.3745%" height="15" fill="rgb(243,178,37)" fg:x="246" fg:w="1"/><text x="92.3848%" y="383.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.37%)</title><rect x="92.1348%" y="357" width="0.3745%" height="15" fill="rgb(232,139,19)" fg:x="246" fg:w="1"/><text x="92.3848%" y="367.50"></text></g><g><title>egui::widget_text::RichText::font_height (1 samples, 0.37%)</title><rect x="92.1348%" y="341" width="0.3745%" height="15" fill="rgb(225,201,24)" fg:x="246" fg:w="1"/><text x="92.3848%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (132 samples, 49.44%)</title><rect x="43.4457%" y="469" width="49.4382%" height="15" fill="rgb(221,47,46)" fg:x="116" fg:w="132"/><text x="43.6957%" y="479.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call..</text></g><g><title>vert::modules::egui::Egui::begin_frame (1 samples, 0.37%)</title><rect x="92.5094%" y="453" width="0.3745%" height="15" fill="rgb(249,23,13)" fg:x="247" fg:w="1"/><text x="92.7594%" y="463.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.37%)</title><rect x="92.5094%" y="437" width="0.3745%" height="15" fill="rgb(219,9,5)" fg:x="247" fg:w="1"/><text x="92.7594%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.37%)</title><rect x="92.5094%" y="421" width="0.3745%" height="15" fill="rgb(254,171,16)" fg:x="247" fg:w="1"/><text x="92.7594%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.37%)</title><rect x="92.5094%" y="405" width="0.3745%" height="15" fill="rgb(230,171,20)" fg:x="247" fg:w="1"/><text x="92.7594%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.37%)</title><rect x="92.5094%" y="389" width="0.3745%" height="15" fill="rgb(210,71,41)" fg:x="247" fg:w="1"/><text x="92.7594%" y="399.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="92.5094%" y="373" width="0.3745%" height="15" fill="rgb(206,173,20)" fg:x="247" fg:w="1"/><text x="92.7594%" y="383.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::poll_events_with_timeout (134 samples, 50.19%)</title><rect x="43.0712%" y="501" width="50.1873%" height="15" fill="rgb(233,88,34)" fg:x="115" fg:w="134"/><text x="43.3212%" y="511.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::poll_events_with_timeout</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::single_iteration (133 samples, 49.81%)</title><rect x="43.4457%" y="485" width="49.8127%" height="15" fill="rgb(223,209,46)" fg:x="116" fg:w="133"/><text x="43.6957%" y="495.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::single_iteration</text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (1 samples, 0.37%)</title><rect x="92.8839%" y="469" width="0.3745%" height="15" fill="rgb(250,43,18)" fg:x="248" fg:w="1"/><text x="93.1339%" y="479.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (1 samples, 0.37%)</title><rect x="92.8839%" y="453" width="0.3745%" height="15" fill="rgb(208,13,10)" fg:x="248" fg:w="1"/><text x="93.1339%" y="463.50"></text></g><g><title>_ZN4vert7modules8renderer8Renderer18prepare_and_render17h80bcbabc5bbee19bE.llvm.2757540087349140276 (1 samples, 0.37%)</title><rect x="93.2584%" y="469" width="0.3745%" height="15" fill="rgb(212,200,36)" fg:x="249" fg:w="1"/><text x="93.5084%" y="479.50"></text></g><g><title>&lt;vert::modules::egui::Egui as vert::modules::renderer::Prepare&gt;::prepare (1 samples, 0.37%)</title><rect x="93.2584%" y="453" width="0.3745%" height="15" fill="rgb(225,90,30)" fg:x="249" fg:w="1"/><text x="93.5084%" y="463.50"></text></g><g><title>egui_wgpu::renderer::Renderer::update_texture (1 samples, 0.37%)</title><rect x="93.2584%" y="437" width="0.3745%" height="15" fill="rgb(236,182,39)" fg:x="249" fg:w="1"/><text x="93.5084%" y="447.50"></text></g><g><title>[libm.so.6] (1 samples, 0.37%)</title><rect x="93.2584%" y="421" width="0.3745%" height="15" fill="rgb(212,144,35)" fg:x="249" fg:w="1"/><text x="93.5084%" y="431.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.37%)</title><rect x="93.6330%" y="453" width="0.3745%" height="15" fill="rgb(228,63,44)" fg:x="250" fg:w="1"/><text x="93.8830%" y="463.50"></text></g><g><title>epaint::text::font::Font::preload_common_characters (1 samples, 0.37%)</title><rect x="93.6330%" y="437" width="0.3745%" height="15" fill="rgb(228,109,6)" fg:x="250" fg:w="1"/><text x="93.8830%" y="447.50"></text></g><g><title>epaint::text::font::Font::glyph_info (1 samples, 0.37%)</title><rect x="93.6330%" y="421" width="0.3745%" height="15" fill="rgb(238,117,24)" fg:x="250" fg:w="1"/><text x="93.8830%" y="431.50"></text></g><g><title>epaint::text::font::FontImpl::glyph_info (1 samples, 0.37%)</title><rect x="93.6330%" y="405" width="0.3745%" height="15" fill="rgb(242,26,26)" fg:x="250" fg:w="1"/><text x="93.8830%" y="415.50"></text></g><g><title>epaint::text::font::FontImpl::allocate_glyph (1 samples, 0.37%)</title><rect x="93.6330%" y="389" width="0.3745%" height="15" fill="rgb(221,92,48)" fg:x="250" fg:w="1"/><text x="93.8830%" y="399.50"></text></g><g><title>ab_glyph::outlined::OutlinedGlyph::draw (1 samples, 0.37%)</title><rect x="93.6330%" y="373" width="0.3745%" height="15" fill="rgb(209,209,32)" fg:x="250" fg:w="1"/><text x="93.8830%" y="383.50"></text></g><g><title>ab_glyph_rasterizer::raster::draw_line_avx2 (1 samples, 0.37%)</title><rect x="93.6330%" y="357" width="0.3745%" height="15" fill="rgb(221,70,22)" fg:x="250" fg:w="1"/><text x="93.8830%" y="367.50"></text></g><g><title>&lt;vert::modules::winit_main::WinitMain as vert::app::module::MainModule&gt;::main (137 samples, 51.31%)</title><rect x="43.0712%" y="533" width="51.3109%" height="15" fill="rgb(248,145,5)" fg:x="115" fg:w="137"/><text x="43.3212%" y="543.50">&lt;vert::modules::winit_main::WinitMain as vert::app::module::MainModule&gt;::main</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_on_demand (137 samples, 51.31%)</title><rect x="43.0712%" y="517" width="51.3109%" height="15" fill="rgb(226,116,26)" fg:x="115" fg:w="137"/><text x="43.3212%" y="527.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_on_demand</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::single_iteration (3 samples, 1.12%)</title><rect x="93.2584%" y="501" width="1.1236%" height="15" fill="rgb(244,5,17)" fg:x="249" fg:w="3"/><text x="93.5084%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 1.12%)</title><rect x="93.2584%" y="485" width="1.1236%" height="15" fill="rgb(252,159,33)" fg:x="249" fg:w="3"/><text x="93.5084%" y="495.50"></text></g><g><title>vert::modules::egui::Egui::begin_frame (2 samples, 0.75%)</title><rect x="93.6330%" y="469" width="0.7491%" height="15" fill="rgb(206,71,0)" fg:x="250" fg:w="2"/><text x="93.8830%" y="479.50"></text></g><g><title>egui::data::input::RawInput::take (1 samples, 0.37%)</title><rect x="94.0075%" y="453" width="0.3745%" height="15" fill="rgb(233,118,54)" fg:x="251" fg:w="1"/><text x="94.2575%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.37%)</title><rect x="94.0075%" y="437" width="0.3745%" height="15" fill="rgb(234,83,48)" fg:x="251" fg:w="1"/><text x="94.2575%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.37%)</title><rect x="94.0075%" y="421" width="0.3745%" height="15" fill="rgb(228,3,54)" fg:x="251" fg:w="1"/><text x="94.2575%" y="431.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="94.0075%" y="405" width="0.3745%" height="15" fill="rgb(226,155,13)" fg:x="251" fg:w="1"/><text x="94.2575%" y="415.50"></text></g><g><title>&lt;vert::modules::renderer::Renderer as vert::app::module::Module&gt;::new (1 samples, 0.37%)</title><rect x="94.3820%" y="517" width="0.3745%" height="15" fill="rgb(241,28,37)" fg:x="252" fg:w="1"/><text x="94.6320%" y="527.50"></text></g><g><title>vert::modules::renderer::screen_texture::HdrTexture::create (1 samples, 0.37%)</title><rect x="94.3820%" y="501" width="0.3745%" height="15" fill="rgb(233,93,10)" fg:x="252" fg:w="1"/><text x="94.6320%" y="511.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.37%)</title><rect x="94.3820%" y="485" width="0.3745%" height="15" fill="rgb(225,113,19)" fg:x="252" fg:w="1"/><text x="94.6320%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="94.3820%" y="469" width="0.3745%" height="15" fill="rgb(241,2,18)" fg:x="252" fg:w="1"/><text x="94.6320%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="94.3820%" y="453" width="0.3745%" height="15" fill="rgb(228,207,21)" fg:x="252" fg:w="1"/><text x="94.6320%" y="463.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="94.3820%" y="437" width="0.3745%" height="15" fill="rgb(213,211,35)" fg:x="252" fg:w="1"/><text x="94.6320%" y="447.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_texture (1 samples, 0.37%)</title><rect x="94.3820%" y="421" width="0.3745%" height="15" fill="rgb(209,83,10)" fg:x="252" fg:w="1"/><text x="94.6320%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.37%)</title><rect x="94.3820%" y="405" width="0.3745%" height="15" fill="rgb(209,164,1)" fg:x="252" fg:w="1"/><text x="94.6320%" y="415.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.37%)</title><rect x="94.3820%" y="389" width="0.3745%" height="15" fill="rgb(213,184,43)" fg:x="252" fg:w="1"/><text x="94.6320%" y="399.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (1 samples, 0.37%)</title><rect x="94.3820%" y="373" width="0.3745%" height="15" fill="rgb(231,61,34)" fg:x="252" fg:w="1"/><text x="94.6320%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::allocate_memory (1 samples, 0.37%)</title><rect x="94.3820%" y="357" width="0.3745%" height="15" fill="rgb(235,75,3)" fg:x="252" fg:w="1"/><text x="94.6320%" y="367.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="94.3820%" y="341" width="0.3745%" height="15" fill="rgb(220,106,47)" fg:x="252" fg:w="1"/><text x="94.6320%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="94.3820%" y="325" width="0.3745%" height="15" fill="rgb(210,196,33)" fg:x="252" fg:w="1"/><text x="94.6320%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="94.3820%" y="309" width="0.3745%" height="15" fill="rgb(229,154,42)" fg:x="252" fg:w="1"/><text x="94.6320%" y="319.50"></text></g><g><title>fontdue::math::Geometry::finalize (1 samples, 0.37%)</title><rect x="94.7566%" y="485" width="0.3745%" height="15" fill="rgb(228,114,26)" fg:x="253" fg:w="1"/><text x="95.0066%" y="495.50"></text></g><g><title>&lt;fontdue::math::Geometry as ttf_parser::OutlineBuilder&gt;::line_to (1 samples, 0.37%)</title><rect x="95.1311%" y="469" width="0.3745%" height="15" fill="rgb(208,144,1)" fg:x="254" fg:w="1"/><text x="95.3811%" y="479.50"></text></g><g><title>fontdue::math::Geometry::push (1 samples, 0.37%)</title><rect x="95.1311%" y="453" width="0.3745%" height="15" fill="rgb(239,112,37)" fg:x="254" fg:w="1"/><text x="95.3811%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.37%)</title><rect x="95.1311%" y="437" width="0.3745%" height="15" fill="rgb(210,96,50)" fg:x="254" fg:w="1"/><text x="95.3811%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.37%)</title><rect x="95.1311%" y="421" width="0.3745%" height="15" fill="rgb(222,178,2)" fg:x="254" fg:w="1"/><text x="95.3811%" y="431.50"></text></g><g><title>realloc (1 samples, 0.37%)</title><rect x="95.1311%" y="405" width="0.3745%" height="15" fill="rgb(226,74,18)" fg:x="254" fg:w="1"/><text x="95.3811%" y="415.50"></text></g><g><title>fontdue::font::Font::from_bytes (3 samples, 1.12%)</title><rect x="94.7566%" y="501" width="1.1236%" height="15" fill="rgb(225,67,54)" fg:x="253" fg:w="3"/><text x="95.0066%" y="511.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (2 samples, 0.75%)</title><rect x="95.1311%" y="485" width="0.7491%" height="15" fill="rgb(251,92,32)" fg:x="254" fg:w="2"/><text x="95.3811%" y="495.50"></text></g><g><title>&lt;fontdue::math::Geometry as ttf_parser::OutlineBuilder&gt;::quad_to (1 samples, 0.37%)</title><rect x="95.5056%" y="469" width="0.3745%" height="15" fill="rgb(228,149,22)" fg:x="255" fg:w="1"/><text x="95.7556%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.37%)</title><rect x="95.5056%" y="453" width="0.3745%" height="15" fill="rgb(243,54,13)" fg:x="255" fg:w="1"/><text x="95.7556%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.37%)</title><rect x="95.5056%" y="437" width="0.3745%" height="15" fill="rgb(243,180,28)" fg:x="255" fg:w="1"/><text x="95.7556%" y="447.50"></text></g><g><title>realloc (1 samples, 0.37%)</title><rect x="95.5056%" y="421" width="0.3745%" height="15" fill="rgb(208,167,24)" fg:x="255" fg:w="1"/><text x="95.7556%" y="431.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.37%)</title><rect x="95.8801%" y="485" width="0.3745%" height="15" fill="rgb(245,73,45)" fg:x="256" fg:w="1"/><text x="96.1301%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="95.8801%" y="469" width="0.3745%" height="15" fill="rgb(237,203,48)" fg:x="256" fg:w="1"/><text x="96.1301%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="95.8801%" y="453" width="0.3745%" height="15" fill="rgb(211,197,16)" fg:x="256" fg:w="1"/><text x="96.1301%" y="463.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.37%)</title><rect x="95.8801%" y="437" width="0.3745%" height="15" fill="rgb(243,99,51)" fg:x="256" fg:w="1"/><text x="96.1301%" y="447.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_texture (1 samples, 0.37%)</title><rect x="95.8801%" y="421" width="0.3745%" height="15" fill="rgb(215,123,29)" fg:x="256" fg:w="1"/><text x="96.1301%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.37%)</title><rect x="95.8801%" y="405" width="0.3745%" height="15" fill="rgb(239,186,37)" fg:x="256" fg:w="1"/><text x="96.1301%" y="415.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.37%)</title><rect x="95.8801%" y="389" width="0.3745%" height="15" fill="rgb(252,136,39)" fg:x="256" fg:w="1"/><text x="96.1301%" y="399.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (1 samples, 0.37%)</title><rect x="95.8801%" y="373" width="0.3745%" height="15" fill="rgb(223,213,32)" fg:x="256" fg:w="1"/><text x="96.1301%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::allocate_memory (1 samples, 0.37%)</title><rect x="95.8801%" y="357" width="0.3745%" height="15" fill="rgb(233,115,5)" fg:x="256" fg:w="1"/><text x="96.1301%" y="367.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="95.8801%" y="341" width="0.3745%" height="15" fill="rgb(207,226,44)" fg:x="256" fg:w="1"/><text x="96.1301%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="95.8801%" y="325" width="0.3745%" height="15" fill="rgb(208,126,0)" fg:x="256" fg:w="1"/><text x="96.1301%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="95.8801%" y="309" width="0.3745%" height="15" fill="rgb(244,66,21)" fg:x="256" fg:w="1"/><text x="96.1301%" y="319.50"></text></g><g><title>[libc.so.6] (2 samples, 0.75%)</title><rect x="96.2547%" y="421" width="0.7491%" height="15" fill="rgb(222,97,12)" fg:x="257" fg:w="2"/><text x="96.5047%" y="431.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::text_renderer::TextRenderer as vert::app::module::Module&gt;::new (7 samples, 2.62%)</title><rect x="94.7566%" y="517" width="2.6217%" height="15" fill="rgb(219,213,19)" fg:x="253" fg:w="7"/><text x="95.0066%" y="527.50">&lt;v..</text></g><g><title>vert::elements::texture::Texture::from_image (4 samples, 1.50%)</title><rect x="95.8801%" y="501" width="1.4981%" height="15" fill="rgb(252,169,30)" fg:x="256" fg:w="4"/><text x="96.1301%" y="511.50"></text></g><g><title>wgpu::Queue::write_texture (3 samples, 1.12%)</title><rect x="96.2547%" y="485" width="1.1236%" height="15" fill="rgb(206,32,51)" fg:x="257" fg:w="3"/><text x="96.5047%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (3 samples, 1.12%)</title><rect x="96.2547%" y="469" width="1.1236%" height="15" fill="rgb(250,172,42)" fg:x="257" fg:w="3"/><text x="96.5047%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (3 samples, 1.12%)</title><rect x="96.2547%" y="453" width="1.1236%" height="15" fill="rgb(209,34,43)" fg:x="257" fg:w="3"/><text x="96.5047%" y="463.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_texture (3 samples, 1.12%)</title><rect x="96.2547%" y="437" width="1.1236%" height="15" fill="rgb(223,11,35)" fg:x="257" fg:w="3"/><text x="96.5047%" y="447.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (1 samples, 0.37%)</title><rect x="97.0037%" y="421" width="0.3745%" height="15" fill="rgb(251,219,26)" fg:x="259" fg:w="1"/><text x="97.2537%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (1 samples, 0.37%)</title><rect x="97.0037%" y="405" width="0.3745%" height="15" fill="rgb(231,119,3)" fg:x="259" fg:w="1"/><text x="97.2537%" y="415.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.37%)</title><rect x="97.0037%" y="389" width="0.3745%" height="15" fill="rgb(216,97,11)" fg:x="259" fg:w="1"/><text x="97.2537%" y="399.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (1 samples, 0.37%)</title><rect x="97.0037%" y="373" width="0.3745%" height="15" fill="rgb(223,59,9)" fg:x="259" fg:w="1"/><text x="97.2537%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::allocate_memory (1 samples, 0.37%)</title><rect x="97.0037%" y="357" width="0.3745%" height="15" fill="rgb(233,93,31)" fg:x="259" fg:w="1"/><text x="97.2537%" y="367.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="97.0037%" y="341" width="0.3745%" height="15" fill="rgb(239,81,33)" fg:x="259" fg:w="1"/><text x="97.2537%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="97.0037%" y="325" width="0.3745%" height="15" fill="rgb(213,120,34)" fg:x="259" fg:w="1"/><text x="97.2537%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.37%)</title><rect x="97.0037%" y="309" width="0.3745%" height="15" fill="rgb(243,49,53)" fg:x="259" fg:w="1"/><text x="97.2537%" y="319.50"></text></g><g><title>&lt;vert::modules::tokio_runtime::TokioRuntime as vert::app::module::Module&gt;::new (5 samples, 1.87%)</title><rect x="97.3783%" y="517" width="1.8727%" height="15" fill="rgb(247,216,33)" fg:x="260" fg:w="5"/><text x="97.6283%" y="527.50">&lt;..</text></g><g><title>tokio::runtime::builder::Builder::build (5 samples, 1.87%)</title><rect x="97.3783%" y="501" width="1.8727%" height="15" fill="rgb(226,26,14)" fg:x="260" fg:w="5"/><text x="97.6283%" y="511.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (5 samples, 1.87%)</title><rect x="97.3783%" y="485" width="1.8727%" height="15" fill="rgb(215,49,53)" fg:x="260" fg:w="5"/><text x="97.6283%" y="495.50">t..</text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (5 samples, 1.87%)</title><rect x="97.3783%" y="469" width="1.8727%" height="15" fill="rgb(245,162,40)" fg:x="260" fg:w="5"/><text x="97.6283%" y="479.50">t..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (5 samples, 1.87%)</title><rect x="97.3783%" y="453" width="1.8727%" height="15" fill="rgb(229,68,17)" fg:x="260" fg:w="5"/><text x="97.6283%" y="463.50">t..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (5 samples, 1.87%)</title><rect x="97.3783%" y="437" width="1.8727%" height="15" fill="rgb(213,182,10)" fg:x="260" fg:w="5"/><text x="97.6283%" y="447.50">t..</text></g><g><title>std::thread::Builder::spawn_unchecked_ (5 samples, 1.87%)</title><rect x="97.3783%" y="421" width="1.8727%" height="15" fill="rgb(245,125,30)" fg:x="260" fg:w="5"/><text x="97.6283%" y="431.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new (5 samples, 1.87%)</title><rect x="97.3783%" y="405" width="1.8727%" height="15" fill="rgb(232,202,2)" fg:x="260" fg:w="5"/><text x="97.6283%" y="415.50">s..</text></g><g><title>pthread_create (5 samples, 1.87%)</title><rect x="97.3783%" y="389" width="1.8727%" height="15" fill="rgb(237,140,51)" fg:x="260" fg:w="5"/><text x="97.6283%" y="399.50">p..</text></g><g><title>__mmap (4 samples, 1.50%)</title><rect x="97.7528%" y="373" width="1.4981%" height="15" fill="rgb(236,157,25)" fg:x="261" fg:w="4"/><text x="98.0028%" y="383.50"></text></g><g><title>&lt;vert::modules::ui::font_cache::FontCache as vert::app::module::Module&gt;::new (1 samples, 0.37%)</title><rect x="99.2509%" y="517" width="0.3745%" height="15" fill="rgb(219,209,0)" fg:x="265" fg:w="1"/><text x="99.5009%" y="527.50"></text></g><g><title>fontdue::font::Font::from_bytes (1 samples, 0.37%)</title><rect x="99.2509%" y="501" width="0.3745%" height="15" fill="rgb(240,116,54)" fg:x="265" fg:w="1"/><text x="99.5009%" y="511.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (1 samples, 0.37%)</title><rect x="99.2509%" y="485" width="0.3745%" height="15" fill="rgb(216,10,36)" fg:x="265" fg:w="1"/><text x="99.5009%" y="495.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (1 samples, 0.37%)</title><rect x="99.2509%" y="469" width="0.3745%" height="15" fill="rgb(222,72,44)" fg:x="265" fg:w="1"/><text x="99.5009%" y="479.50"></text></g><g><title>all (267 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(232,159,9)" fg:x="0" fg:w="267"/><text x="0.2500%" y="847.50"></text></g><g><title>ui (260 samples, 97.38%)</title><rect x="2.6217%" y="821" width="97.3783%" height="15" fill="rgb(210,39,32)" fg:x="7" fg:w="260"/><text x="2.8717%" y="831.50">ui</text></g><g><title>_start (152 samples, 56.93%)</title><rect x="43.0712%" y="805" width="56.9288%" height="15" fill="rgb(216,194,45)" fg:x="115" fg:w="152"/><text x="43.3212%" y="815.50">_start</text></g><g><title>__libc_start_main (152 samples, 56.93%)</title><rect x="43.0712%" y="789" width="56.9288%" height="15" fill="rgb(218,18,35)" fg:x="115" fg:w="152"/><text x="43.3212%" y="799.50">__libc_start_main</text></g><g><title>[libc.so.6] (152 samples, 56.93%)</title><rect x="43.0712%" y="773" width="56.9288%" height="15" fill="rgb(207,83,51)" fg:x="115" fg:w="152"/><text x="43.3212%" y="783.50">[libc.so.6]</text></g><g><title>main (152 samples, 56.93%)</title><rect x="43.0712%" y="757" width="56.9288%" height="15" fill="rgb(225,63,43)" fg:x="115" fg:w="152"/><text x="43.3212%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (152 samples, 56.93%)</title><rect x="43.0712%" y="741" width="56.9288%" height="15" fill="rgb(207,57,36)" fg:x="115" fg:w="152"/><text x="43.3212%" y="751.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (152 samples, 56.93%)</title><rect x="43.0712%" y="725" width="56.9288%" height="15" fill="rgb(216,99,33)" fg:x="115" fg:w="152"/><text x="43.3212%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (152 samples, 56.93%)</title><rect x="43.0712%" y="709" width="56.9288%" height="15" fill="rgb(225,42,16)" fg:x="115" fg:w="152"/><text x="43.3212%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (152 samples, 56.93%)</title><rect x="43.0712%" y="693" width="56.9288%" height="15" fill="rgb(220,201,45)" fg:x="115" fg:w="152"/><text x="43.3212%" y="703.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (152 samples, 56.93%)</title><rect x="43.0712%" y="677" width="56.9288%" height="15" fill="rgb(225,33,4)" fg:x="115" fg:w="152"/><text x="43.3212%" y="687.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (152 samples, 56.93%)</title><rect x="43.0712%" y="661" width="56.9288%" height="15" fill="rgb(224,33,50)" fg:x="115" fg:w="152"/><text x="43.3212%" y="671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (152 samples, 56.93%)</title><rect x="43.0712%" y="645" width="56.9288%" height="15" fill="rgb(246,198,51)" fg:x="115" fg:w="152"/><text x="43.3212%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (152 samples, 56.93%)</title><rect x="43.0712%" y="629" width="56.9288%" height="15" fill="rgb(205,22,4)" fg:x="115" fg:w="152"/><text x="43.3212%" y="639.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (152 samples, 56.93%)</title><rect x="43.0712%" y="613" width="56.9288%" height="15" fill="rgb(206,3,8)" fg:x="115" fg:w="152"/><text x="43.3212%" y="623.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (152 samples, 56.93%)</title><rect x="43.0712%" y="597" width="56.9288%" height="15" fill="rgb(251,23,15)" fg:x="115" fg:w="152"/><text x="43.3212%" y="607.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (152 samples, 56.93%)</title><rect x="43.0712%" y="581" width="56.9288%" height="15" fill="rgb(252,88,28)" fg:x="115" fg:w="152"/><text x="43.3212%" y="591.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>ui::main (152 samples, 56.93%)</title><rect x="43.0712%" y="565" width="56.9288%" height="15" fill="rgb(212,127,14)" fg:x="115" fg:w="152"/><text x="43.3212%" y="575.50">ui::main</text></g><g><title>vert::app::AppBuilder::run (152 samples, 56.93%)</title><rect x="43.0712%" y="549" width="56.9288%" height="15" fill="rgb(247,145,37)" fg:x="115" fg:w="152"/><text x="43.3212%" y="559.50">vert::app::AppBuilder::run</text></g><g><title>vert::app::instantiate_module (15 samples, 5.62%)</title><rect x="94.3820%" y="533" width="5.6180%" height="15" fill="rgb(209,117,53)" fg:x="252" fg:w="15"/><text x="94.6320%" y="543.50">vert::a..</text></g><g><title>&lt;vert::modules::ui::ui_renderer::UiRenderer as vert::app::module::Module&gt;::new (1 samples, 0.37%)</title><rect x="99.6255%" y="517" width="0.3745%" height="15" fill="rgb(212,90,42)" fg:x="266" fg:w="1"/><text x="99.8755%" y="527.50"></text></g><g><title>vert::modules::ui::ui_renderer::create_pipeline (1 samples, 0.37%)</title><rect x="99.6255%" y="501" width="0.3745%" height="15" fill="rgb(218,164,37)" fg:x="266" fg:w="1"/><text x="99.8755%" y="511.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.37%)</title><rect x="99.6255%" y="485" width="0.3745%" height="15" fill="rgb(246,65,34)" fg:x="266" fg:w="1"/><text x="99.8755%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="99.6255%" y="469" width="0.3745%" height="15" fill="rgb(231,100,33)" fg:x="266" fg:w="1"/><text x="99.8755%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="99.6255%" y="453" width="0.3745%" height="15" fill="rgb(228,126,14)" fg:x="266" fg:w="1"/><text x="99.8755%" y="463.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.37%)</title><rect x="99.6255%" y="437" width="0.3745%" height="15" fill="rgb(215,173,21)" fg:x="266" fg:w="1"/><text x="99.8755%" y="447.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (1 samples, 0.37%)</title><rect x="99.6255%" y="421" width="0.3745%" height="15" fill="rgb(210,6,40)" fg:x="266" fg:w="1"/><text x="99.8755%" y="431.50"></text></g><g><title>naga::front::wgsl::parse_str (1 samples, 0.37%)</title><rect x="99.6255%" y="405" width="0.3745%" height="15" fill="rgb(212,48,18)" fg:x="266" fg:w="1"/><text x="99.8755%" y="415.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1 samples, 0.37%)</title><rect x="99.6255%" y="389" width="0.3745%" height="15" fill="rgb(230,214,11)" fg:x="266" fg:w="1"/><text x="99.8755%" y="399.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::lower (1 samples, 0.37%)</title><rect x="99.6255%" y="373" width="0.3745%" height="15" fill="rgb(254,105,39)" fg:x="266" fg:w="1"/><text x="99.8755%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.37%)</title><rect x="99.6255%" y="357" width="0.3745%" height="15" fill="rgb(245,158,5)" fg:x="266" fg:w="1"/><text x="99.8755%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.37%)</title><rect x="99.6255%" y="341" width="0.3745%" height="15" fill="rgb(249,208,11)" fg:x="266" fg:w="1"/><text x="99.8755%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.37%)</title><rect x="99.6255%" y="325" width="0.3745%" height="15" fill="rgb(210,39,28)" fg:x="266" fg:w="1"/><text x="99.8755%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.37%)</title><rect x="99.6255%" y="309" width="0.3745%" height="15" fill="rgb(211,56,53)" fg:x="266" fg:w="1"/><text x="99.8755%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.37%)</title><rect x="99.6255%" y="293" width="0.3745%" height="15" fill="rgb(226,201,30)" fg:x="266" fg:w="1"/><text x="99.8755%" y="303.50"></text></g><g><title>malloc (1 samples, 0.37%)</title><rect x="99.6255%" y="277" width="0.3745%" height="15" fill="rgb(239,101,34)" fg:x="266" fg:w="1"/><text x="99.8755%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="99.6255%" y="261" width="0.3745%" height="15" fill="rgb(226,209,5)" fg:x="266" fg:w="1"/><text x="99.8755%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.37%)</title><rect x="99.6255%" y="245" width="0.3745%" height="15" fill="rgb(250,105,47)" fg:x="266" fg:w="1"/><text x="99.8755%" y="255.50"></text></g></svg></svg>