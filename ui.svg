<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="837.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="837.00"> </text><svg id="frames" x="10" width="1180" total_samples="333"><g><title>[libc.so.6] (8 samples, 2.40%)</title><rect x="0.0000%" y="773" width="2.4024%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2500%" y="783.50">[l..</text></g><g><title>[libc.so.6] (8 samples, 2.40%)</title><rect x="0.0000%" y="757" width="2.4024%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="8"/><text x="0.2500%" y="767.50">[l..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 2.40%)</title><rect x="0.0000%" y="741" width="2.4024%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="8"/><text x="0.2500%" y="751.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 2.40%)</title><rect x="0.0000%" y="725" width="2.4024%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="8"/><text x="0.2500%" y="735.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 2.40%)</title><rect x="0.0000%" y="709" width="2.4024%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="8"/><text x="0.2500%" y="719.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (8 samples, 2.40%)</title><rect x="0.0000%" y="693" width="2.4024%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="703.50">co..</text></g><g><title>std::sys::unix::thread::guard::current (8 samples, 2.40%)</title><rect x="0.0000%" y="677" width="2.4024%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="687.50">st..</text></g><g><title>pthread_getattr_np (8 samples, 2.40%)</title><rect x="0.0000%" y="661" width="2.4024%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="8"/><text x="0.2500%" y="671.50">pt..</text></g><g><title>malloc (7 samples, 2.10%)</title><rect x="0.3003%" y="645" width="2.1021%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="7"/><text x="0.5503%" y="655.50">m..</text></g><g><title>[libc.so.6] (7 samples, 2.10%)</title><rect x="0.3003%" y="629" width="2.1021%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="7"/><text x="0.5503%" y="639.50">[..</text></g><g><title>[libc.so.6] (6 samples, 1.80%)</title><rect x="0.6006%" y="613" width="1.8018%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="6"/><text x="0.8506%" y="623.50">[..</text></g><g><title>[libc.so.6] (5 samples, 1.50%)</title><rect x="0.9009%" y="597" width="1.5015%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="5"/><text x="1.1509%" y="607.50"></text></g><g><title>__mmap (4 samples, 1.20%)</title><rect x="1.2012%" y="581" width="1.2012%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="4"/><text x="1.4512%" y="591.50"></text></g><g><title>tokio-runtime-w (9 samples, 2.70%)</title><rect x="0.0000%" y="789" width="2.7027%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="9"/><text x="0.2500%" y="799.50">to..</text></g><g><title>[unknown] (1 samples, 0.30%)</title><rect x="2.4024%" y="773" width="0.3003%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="1"/><text x="2.6524%" y="783.50"></text></g><g><title>&lt;vert::modules::ui::billboard::DivChildIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.30%)</title><rect x="2.7027%" y="757" width="0.3003%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="1"/><text x="2.9527%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_validate_write_buffer (1 samples, 0.30%)</title><rect x="3.0030%" y="757" width="0.3003%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="1"/><text x="3.2530%" y="767.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.30%)</title><rect x="3.3033%" y="757" width="0.3003%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="1"/><text x="3.5533%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="3.6036%" y="757" width="0.3003%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="1"/><text x="3.8536%" y="767.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (1 samples, 0.30%)</title><rect x="3.9039%" y="757" width="0.3003%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="1"/><text x="4.1539%" y="767.50"></text></g><g><title>[libc.so.6] (14 samples, 4.20%)</title><rect x="4.2042%" y="757" width="4.2042%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="14"/><text x="4.4542%" y="767.50">[libc..</text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="8.4084%" y="757" width="0.6006%" height="15" fill="rgb(235,183,28)" fg:x="28" fg:w="2"/><text x="8.6584%" y="767.50"></text></g><g><title>eglGetProcAddress (1 samples, 0.30%)</title><rect x="9.0090%" y="757" width="0.3003%" height="15" fill="rgb(221,5,38)" fg:x="30" fg:w="1"/><text x="9.2590%" y="767.50"></text></g><g><title>malloc (1 samples, 0.30%)</title><rect x="9.3093%" y="757" width="0.3003%" height="15" fill="rgb(247,18,42)" fg:x="31" fg:w="1"/><text x="9.5593%" y="767.50"></text></g><g><title>wgpu::range_to_offset_size (1 samples, 0.30%)</title><rect x="9.6096%" y="757" width="0.3003%" height="15" fill="rgb(241,131,45)" fg:x="32" fg:w="1"/><text x="9.8596%" y="767.50"></text></g><g><title>wgpu_core::command::bind::compat::BoundBindGroupLayouts::update_expectations (1 samples, 0.30%)</title><rect x="9.9099%" y="757" width="0.3003%" height="15" fill="rgb(249,31,29)" fg:x="33" fg:w="1"/><text x="10.1599%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.30%)</title><rect x="10.2102%" y="757" width="0.3003%" height="15" fill="rgb(225,111,53)" fg:x="34" fg:w="1"/><text x="10.4602%" y="767.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (1 samples, 0.30%)</title><rect x="10.5105%" y="757" width="0.3003%" height="15" fill="rgb(238,160,17)" fg:x="35" fg:w="1"/><text x="10.7605%" y="767.50"></text></g><g><title>[[heap]] (28 samples, 8.41%)</title><rect x="2.7027%" y="773" width="8.4084%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="28"/><text x="2.9527%" y="783.50">[[heap]]</text></g><g><title>wgpu_core::registry::Registry&lt;T,I,F&gt;::unregister (1 samples, 0.30%)</title><rect x="10.8108%" y="757" width="0.3003%" height="15" fill="rgb(232,36,49)" fg:x="36" fg:w="1"/><text x="11.0608%" y="767.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="11.1111%" y="757" width="0.6006%" height="15" fill="rgb(209,103,24)" fg:x="37" fg:w="2"/><text x="11.3611%" y="767.50"></text></g><g><title>cfree (1 samples, 0.30%)</title><rect x="11.7117%" y="757" width="0.3003%" height="15" fill="rgb(229,88,8)" fg:x="39" fg:w="1"/><text x="11.9617%" y="767.50"></text></g><g><title>[[stack]] (4 samples, 1.20%)</title><rect x="11.1111%" y="773" width="1.2012%" height="15" fill="rgb(213,181,19)" fg:x="37" fg:w="4"/><text x="11.3611%" y="783.50"></text></g><g><title>wgpu_core::command::bind::compat::BoundBindGroupLayouts::update_expectations (1 samples, 0.30%)</title><rect x="12.0120%" y="757" width="0.3003%" height="15" fill="rgb(254,191,54)" fg:x="40" fg:w="1"/><text x="12.2620%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 1.50%)</title><rect x="12.3123%" y="773" width="1.5015%" height="15" fill="rgb(241,83,37)" fg:x="41" fg:w="5"/><text x="12.5623%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="13.5135%" y="757" width="0.3003%" height="15" fill="rgb(233,36,39)" fg:x="45" fg:w="1"/><text x="13.7635%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="13.5135%" y="741" width="0.3003%" height="15" fill="rgb(226,3,54)" fg:x="45" fg:w="1"/><text x="13.7635%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="13.5135%" y="725" width="0.3003%" height="15" fill="rgb(245,192,40)" fg:x="45" fg:w="1"/><text x="13.7635%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="13.5135%" y="709" width="0.3003%" height="15" fill="rgb(238,167,29)" fg:x="45" fg:w="1"/><text x="13.7635%" y="719.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.60%)</title><rect x="15.0150%" y="741" width="0.6006%" height="15" fill="rgb(232,182,51)" fg:x="50" fg:w="2"/><text x="15.2650%" y="751.50"></text></g><g><title>cfree (2 samples, 0.60%)</title><rect x="15.0150%" y="725" width="0.6006%" height="15" fill="rgb(231,60,39)" fg:x="50" fg:w="2"/><text x="15.2650%" y="735.50"></text></g><g><title>[libc.so.6] (2 samples, 0.60%)</title><rect x="15.0150%" y="709" width="0.6006%" height="15" fill="rgb(208,69,12)" fg:x="50" fg:w="2"/><text x="15.2650%" y="719.50"></text></g><g><title>[libc.so.6] (2 samples, 0.60%)</title><rect x="15.0150%" y="693" width="0.6006%" height="15" fill="rgb(235,93,37)" fg:x="50" fg:w="2"/><text x="15.2650%" y="703.50"></text></g><g><title>[libc.so.6] (2 samples, 0.60%)</title><rect x="15.0150%" y="677" width="0.6006%" height="15" fill="rgb(213,116,39)" fg:x="50" fg:w="2"/><text x="15.2650%" y="687.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="15.6156%" y="741" width="0.3003%" height="15" fill="rgb(222,207,29)" fg:x="52" fg:w="1"/><text x="15.8656%" y="751.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (1 samples, 0.30%)</title><rect x="16.2162%" y="677" width="0.3003%" height="15" fill="rgb(206,96,30)" fg:x="54" fg:w="1"/><text x="16.4662%" y="687.50"></text></g><g><title>std::sys::unix::thread::truncate_cstr (1 samples, 0.30%)</title><rect x="16.2162%" y="661" width="0.3003%" height="15" fill="rgb(218,138,4)" fg:x="54" fg:w="1"/><text x="16.4662%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="16.2162%" y="645" width="0.3003%" height="15" fill="rgb(250,191,14)" fg:x="54" fg:w="1"/><text x="16.4662%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.90%)</title><rect x="15.9159%" y="725" width="0.9009%" height="15" fill="rgb(239,60,40)" fg:x="53" fg:w="3"/><text x="16.1659%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.60%)</title><rect x="16.2162%" y="709" width="0.6006%" height="15" fill="rgb(206,27,48)" fg:x="54" fg:w="2"/><text x="16.4662%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.60%)</title><rect x="16.2162%" y="693" width="0.6006%" height="15" fill="rgb(225,35,8)" fg:x="54" fg:w="2"/><text x="16.4662%" y="703.50"></text></g><g><title>std::thread::Thread::cname (1 samples, 0.30%)</title><rect x="16.5165%" y="677" width="0.3003%" height="15" fill="rgb(250,213,24)" fg:x="55" fg:w="1"/><text x="16.7665%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.30%)</title><rect x="16.5165%" y="661" width="0.3003%" height="15" fill="rgb(247,123,22)" fg:x="55" fg:w="1"/><text x="16.7665%" y="671.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_ref (1 samples, 0.30%)</title><rect x="16.5165%" y="645" width="0.3003%" height="15" fill="rgb(231,138,38)" fg:x="55" fg:w="1"/><text x="16.7665%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.30%)</title><rect x="16.5165%" y="629" width="0.3003%" height="15" fill="rgb(231,145,46)" fg:x="55" fg:w="1"/><text x="16.7665%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.30%)</title><rect x="16.5165%" y="613" width="0.3003%" height="15" fill="rgb(251,118,11)" fg:x="55" fg:w="1"/><text x="16.7665%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.30%)</title><rect x="16.5165%" y="597" width="0.3003%" height="15" fill="rgb(217,147,25)" fg:x="55" fg:w="1"/><text x="16.7665%" y="607.50"></text></g><g><title>[libc.so.6] (9 samples, 2.70%)</title><rect x="14.7147%" y="757" width="2.7027%" height="15" fill="rgb(247,81,37)" fg:x="49" fg:w="9"/><text x="14.9647%" y="767.50">[l..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 1.50%)</title><rect x="15.9159%" y="741" width="1.5015%" height="15" fill="rgb(209,12,38)" fg:x="53" fg:w="5"/><text x="16.1659%" y="751.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.60%)</title><rect x="16.8168%" y="725" width="0.6006%" height="15" fill="rgb(227,1,9)" fg:x="56" fg:w="2"/><text x="17.0668%" y="735.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.60%)</title><rect x="16.8168%" y="709" width="0.6006%" height="15" fill="rgb(248,47,43)" fg:x="56" fg:w="2"/><text x="17.0668%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.30%)</title><rect x="17.1171%" y="693" width="0.3003%" height="15" fill="rgb(221,10,30)" fg:x="57" fg:w="1"/><text x="17.3671%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.30%)</title><rect x="17.1171%" y="677" width="0.3003%" height="15" fill="rgb(210,229,1)" fg:x="57" fg:w="1"/><text x="17.3671%" y="687.50"></text></g><g><title>[libc.so.6] (13 samples, 3.90%)</title><rect x="13.8138%" y="773" width="3.9039%" height="15" fill="rgb(222,148,37)" fg:x="46" fg:w="13"/><text x="14.0638%" y="783.50">[lib..</text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::extend (1 samples, 0.30%)</title><rect x="17.4174%" y="757" width="0.3003%" height="15" fill="rgb(234,67,33)" fg:x="58" fg:w="1"/><text x="17.6674%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.30%)</title><rect x="17.7177%" y="757" width="0.3003%" height="15" fill="rgb(247,98,35)" fg:x="59" fg:w="1"/><text x="17.9677%" y="767.50"></text></g><g><title>[ui] (2 samples, 0.60%)</title><rect x="17.7177%" y="773" width="0.6006%" height="15" fill="rgb(247,138,52)" fg:x="59" fg:w="2"/><text x="17.9677%" y="783.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (1 samples, 0.30%)</title><rect x="18.0180%" y="757" width="0.3003%" height="15" fill="rgb(213,79,30)" fg:x="60" fg:w="1"/><text x="18.2680%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (3 samples, 0.90%)</title><rect x="20.7207%" y="757" width="0.9009%" height="15" fill="rgb(246,177,23)" fg:x="69" fg:w="3"/><text x="20.9707%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (3 samples, 0.90%)</title><rect x="20.7207%" y="741" width="0.9009%" height="15" fill="rgb(230,62,27)" fg:x="69" fg:w="3"/><text x="20.9707%" y="751.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (3 samples, 0.90%)</title><rect x="20.7207%" y="725" width="0.9009%" height="15" fill="rgb(216,154,8)" fg:x="69" fg:w="3"/><text x="20.9707%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (3 samples, 0.90%)</title><rect x="20.7207%" y="709" width="0.9009%" height="15" fill="rgb(244,35,45)" fg:x="69" fg:w="3"/><text x="20.9707%" y="719.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="20.7207%" y="693" width="0.9009%" height="15" fill="rgb(251,115,12)" fg:x="69" fg:w="3"/><text x="20.9707%" y="703.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="20.7207%" y="677" width="0.9009%" height="15" fill="rgb(240,54,50)" fg:x="69" fg:w="3"/><text x="20.9707%" y="687.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::enumerate_adapters (1 samples, 0.30%)</title><rect x="21.6216%" y="757" width="0.3003%" height="15" fill="rgb(233,84,52)" fg:x="72" fg:w="1"/><text x="21.8716%" y="767.50"></text></g><g><title>[libEGL.so.1.1.0] (1 samples, 0.30%)</title><rect x="21.6216%" y="741" width="0.3003%" height="15" fill="rgb(207,117,47)" fg:x="72" fg:w="1"/><text x="21.8716%" y="751.50"></text></g><g><title>__glDispatchMakeCurrent (1 samples, 0.30%)</title><rect x="21.6216%" y="725" width="0.3003%" height="15" fill="rgb(249,43,39)" fg:x="72" fg:w="1"/><text x="21.8716%" y="735.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (1 samples, 0.30%)</title><rect x="21.6216%" y="709" width="0.3003%" height="15" fill="rgb(209,38,44)" fg:x="72" fg:w="1"/><text x="21.8716%" y="719.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (1 samples, 0.30%)</title><rect x="21.6216%" y="693" width="0.3003%" height="15" fill="rgb(236,212,23)" fg:x="72" fg:w="1"/><text x="21.8716%" y="703.50"></text></g><g><title>_glapi_get_proc_address (1 samples, 0.30%)</title><rect x="21.6216%" y="677" width="0.3003%" height="15" fill="rgb(242,79,21)" fg:x="72" fg:w="1"/><text x="21.8716%" y="687.50"></text></g><g><title>[libglapi.so.0.0.0] (1 samples, 0.30%)</title><rect x="21.6216%" y="661" width="0.3003%" height="15" fill="rgb(211,96,35)" fg:x="72" fg:w="1"/><text x="21.8716%" y="671.50"></text></g><g><title>[libc.so.6] (4 samples, 1.20%)</title><rect x="21.9219%" y="757" width="1.2012%" height="15" fill="rgb(253,215,40)" fg:x="73" fg:w="4"/><text x="22.1719%" y="767.50"></text></g><g><title>main (1 samples, 0.30%)</title><rect x="22.8228%" y="741" width="0.3003%" height="15" fill="rgb(211,81,21)" fg:x="76" fg:w="1"/><text x="23.0728%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.30%)</title><rect x="22.8228%" y="725" width="0.3003%" height="15" fill="rgb(208,190,38)" fg:x="76" fg:w="1"/><text x="23.0728%" y="735.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.30%)</title><rect x="22.8228%" y="709" width="0.3003%" height="15" fill="rgb(235,213,38)" fg:x="76" fg:w="1"/><text x="23.0728%" y="719.50"></text></g><g><title>std::panicking::try (1 samples, 0.30%)</title><rect x="22.8228%" y="693" width="0.3003%" height="15" fill="rgb(237,122,38)" fg:x="76" fg:w="1"/><text x="23.0728%" y="703.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.30%)</title><rect x="22.8228%" y="677" width="0.3003%" height="15" fill="rgb(244,218,35)" fg:x="76" fg:w="1"/><text x="23.0728%" y="687.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1 samples, 0.30%)</title><rect x="22.8228%" y="661" width="0.3003%" height="15" fill="rgb(240,68,47)" fg:x="76" fg:w="1"/><text x="23.0728%" y="671.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.30%)</title><rect x="22.8228%" y="645" width="0.3003%" height="15" fill="rgb(210,16,53)" fg:x="76" fg:w="1"/><text x="23.0728%" y="655.50"></text></g><g><title>std::panicking::try (1 samples, 0.30%)</title><rect x="22.8228%" y="629" width="0.3003%" height="15" fill="rgb(235,124,12)" fg:x="76" fg:w="1"/><text x="23.0728%" y="639.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.30%)</title><rect x="22.8228%" y="613" width="0.3003%" height="15" fill="rgb(224,169,11)" fg:x="76" fg:w="1"/><text x="23.0728%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.30%)</title><rect x="22.8228%" y="597" width="0.3003%" height="15" fill="rgb(250,166,2)" fg:x="76" fg:w="1"/><text x="23.0728%" y="607.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.30%)</title><rect x="22.8228%" y="581" width="0.3003%" height="15" fill="rgb(242,216,29)" fg:x="76" fg:w="1"/><text x="23.0728%" y="591.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.30%)</title><rect x="22.8228%" y="565" width="0.3003%" height="15" fill="rgb(230,116,27)" fg:x="76" fg:w="1"/><text x="23.0728%" y="575.50"></text></g><g><title>ui::main (1 samples, 0.30%)</title><rect x="22.8228%" y="549" width="0.3003%" height="15" fill="rgb(228,99,48)" fg:x="76" fg:w="1"/><text x="23.0728%" y="559.50"></text></g><g><title>vert::app::AppBuilder::run (1 samples, 0.30%)</title><rect x="22.8228%" y="533" width="0.3003%" height="15" fill="rgb(253,11,6)" fg:x="76" fg:w="1"/><text x="23.0728%" y="543.50"></text></g><g><title>vert::app::instantiate_module (1 samples, 0.30%)</title><rect x="22.8228%" y="517" width="0.3003%" height="15" fill="rgb(247,143,39)" fg:x="76" fg:w="1"/><text x="23.0728%" y="527.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::tone_mapping::AcesToneMapping as vert::app::module::Module&gt;::new (1 samples, 0.30%)</title><rect x="22.8228%" y="501" width="0.3003%" height="15" fill="rgb(236,97,10)" fg:x="76" fg:w="1"/><text x="23.0728%" y="511.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.30%)</title><rect x="22.8228%" y="485" width="0.3003%" height="15" fill="rgb(233,208,19)" fg:x="76" fg:w="1"/><text x="23.0728%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="22.8228%" y="469" width="0.3003%" height="15" fill="rgb(216,164,2)" fg:x="76" fg:w="1"/><text x="23.0728%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="22.8228%" y="453" width="0.3003%" height="15" fill="rgb(220,129,5)" fg:x="76" fg:w="1"/><text x="23.0728%" y="463.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="22.8228%" y="437" width="0.3003%" height="15" fill="rgb(242,17,10)" fg:x="76" fg:w="1"/><text x="23.0728%" y="447.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (1 samples, 0.30%)</title><rect x="22.8228%" y="421" width="0.3003%" height="15" fill="rgb(242,107,0)" fg:x="76" fg:w="1"/><text x="23.0728%" y="431.50"></text></g><g><title>naga::front::wgsl::parse_str (1 samples, 0.30%)</title><rect x="22.8228%" y="405" width="0.3003%" height="15" fill="rgb(251,28,31)" fg:x="76" fg:w="1"/><text x="23.0728%" y="415.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1 samples, 0.30%)</title><rect x="22.8228%" y="389" width="0.3003%" height="15" fill="rgb(233,223,10)" fg:x="76" fg:w="1"/><text x="23.0728%" y="399.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (1 samples, 0.30%)</title><rect x="22.8228%" y="373" width="0.3003%" height="15" fill="rgb(215,21,27)" fg:x="76" fg:w="1"/><text x="23.0728%" y="383.50"></text></g><g><title>naga::front::wgsl::parse::Parser::function_decl (1 samples, 0.30%)</title><rect x="22.8228%" y="357" width="0.3003%" height="15" fill="rgb(232,23,21)" fg:x="76" fg:w="1"/><text x="23.0728%" y="367.50"></text></g><g><title>naga::front::wgsl::parse::Parser::statement (1 samples, 0.30%)</title><rect x="22.8228%" y="341" width="0.3003%" height="15" fill="rgb(244,5,23)" fg:x="76" fg:w="1"/><text x="23.0728%" y="351.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span (1 samples, 0.30%)</title><rect x="22.8228%" y="325" width="0.3003%" height="15" fill="rgb(226,81,46)" fg:x="76" fg:w="1"/><text x="23.0728%" y="335.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}} (1 samples, 0.30%)</title><rect x="22.8228%" y="309" width="0.3003%" height="15" fill="rgb(247,70,30)" fg:x="76" fg:w="1"/><text x="23.0728%" y="319.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}} (1 samples, 0.30%)</title><rect x="22.8228%" y="293" width="0.3003%" height="15" fill="rgb(212,68,19)" fg:x="76" fg:w="1"/><text x="23.0728%" y="303.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.30%)</title><rect x="22.8228%" y="277" width="0.3003%" height="15" fill="rgb(240,187,13)" fg:x="76" fg:w="1"/><text x="23.0728%" y="287.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.30%)</title><rect x="22.8228%" y="261" width="0.3003%" height="15" fill="rgb(223,113,26)" fg:x="76" fg:w="1"/><text x="23.0728%" y="271.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="22.8228%" y="245" width="0.3003%" height="15" fill="rgb(206,192,2)" fg:x="76" fg:w="1"/><text x="23.0728%" y="255.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="22.8228%" y="229" width="0.3003%" height="15" fill="rgb(241,108,4)" fg:x="76" fg:w="1"/><text x="23.0728%" y="239.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="22.8228%" y="213" width="0.3003%" height="15" fill="rgb(247,173,49)" fg:x="76" fg:w="1"/><text x="23.0728%" y="223.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="22.8228%" y="197" width="0.3003%" height="15" fill="rgb(224,114,35)" fg:x="76" fg:w="1"/><text x="23.0728%" y="207.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="22.8228%" y="181" width="0.3003%" height="15" fill="rgb(245,159,27)" fg:x="76" fg:w="1"/><text x="23.0728%" y="191.50"></text></g><g><title>naga::front::wgsl::parse::Parser::unary_expression (1 samples, 0.30%)</title><rect x="22.8228%" y="165" width="0.3003%" height="15" fill="rgb(245,172,44)" fg:x="76" fg:w="1"/><text x="23.0728%" y="175.50"></text></g><g><title>naga::front::wgsl::parse::Parser::arguments (1 samples, 0.30%)</title><rect x="22.8228%" y="149" width="0.3003%" height="15" fill="rgb(236,23,11)" fg:x="76" fg:w="1"/><text x="23.0728%" y="159.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span (1 samples, 0.30%)</title><rect x="22.8228%" y="133" width="0.3003%" height="15" fill="rgb(205,117,38)" fg:x="76" fg:w="1"/><text x="23.0728%" y="143.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}} (1 samples, 0.30%)</title><rect x="22.8228%" y="117" width="0.3003%" height="15" fill="rgb(237,72,25)" fg:x="76" fg:w="1"/><text x="23.0728%" y="127.50"></text></g><g><title>_ZN4naga5front4wgsl5parse5lexer13consume_token17h790d086fee39747dE.llvm.9652253072215551723 (1 samples, 0.30%)</title><rect x="22.8228%" y="101" width="0.3003%" height="15" fill="rgb(244,70,9)" fg:x="76" fg:w="1"/><text x="23.0728%" y="111.50"></text></g><g><title>naga::front::wgsl::parse::number::consume_number (1 samples, 0.30%)</title><rect x="22.8228%" y="85" width="0.3003%" height="15" fill="rgb(217,125,39)" fg:x="76" fg:w="1"/><text x="23.0728%" y="95.50"></text></g><g><title>naga::front::wgsl::parse::number::parse_dec_float (1 samples, 0.30%)</title><rect x="22.8228%" y="69" width="0.3003%" height="15" fill="rgb(235,36,10)" fg:x="76" fg:w="1"/><text x="23.0728%" y="79.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (1 samples, 0.30%)</title><rect x="22.8228%" y="53" width="0.3003%" height="15" fill="rgb(251,123,47)" fg:x="76" fg:w="1"/><text x="23.0728%" y="63.50"></text></g><g><title>core::num::dec2flt::dec2flt (1 samples, 0.30%)</title><rect x="22.8228%" y="37" width="0.3003%" height="15" fill="rgb(221,13,13)" fg:x="76" fg:w="1"/><text x="23.0728%" y="47.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.90%)</title><rect x="23.4234%" y="533" width="0.9009%" height="15" fill="rgb(238,131,9)" fg:x="78" fg:w="3"/><text x="23.6734%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.60%)</title><rect x="23.7237%" y="517" width="0.6006%" height="15" fill="rgb(211,50,8)" fg:x="79" fg:w="2"/><text x="23.9737%" y="527.50"></text></g><g><title>[libvulkan.so.1.3.274] (5 samples, 1.50%)</title><rect x="23.1231%" y="757" width="1.5015%" height="15" fill="rgb(245,182,24)" fg:x="77" fg:w="5"/><text x="23.3731%" y="767.50"></text></g><g><title>[libvulkan.so.1.3.274] (5 samples, 1.50%)</title><rect x="23.1231%" y="741" width="1.5015%" height="15" fill="rgb(242,14,37)" fg:x="77" fg:w="5"/><text x="23.3731%" y="751.50"></text></g><g><title>[libvulkan.so.1.3.274] (5 samples, 1.50%)</title><rect x="23.1231%" y="725" width="1.5015%" height="15" fill="rgb(246,228,12)" fg:x="77" fg:w="5"/><text x="23.3731%" y="735.50"></text></g><g><title>dlopen (5 samples, 1.50%)</title><rect x="23.1231%" y="709" width="1.5015%" height="15" fill="rgb(213,55,15)" fg:x="77" fg:w="5"/><text x="23.3731%" y="719.50"></text></g><g><title>[libc.so.6] (5 samples, 1.50%)</title><rect x="23.1231%" y="693" width="1.5015%" height="15" fill="rgb(209,9,3)" fg:x="77" fg:w="5"/><text x="23.3731%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 1.50%)</title><rect x="23.1231%" y="677" width="1.5015%" height="15" fill="rgb(230,59,30)" fg:x="77" fg:w="5"/><text x="23.3731%" y="687.50"></text></g><g><title>_dl_catch_exception (5 samples, 1.50%)</title><rect x="23.1231%" y="661" width="1.5015%" height="15" fill="rgb(209,121,21)" fg:x="77" fg:w="5"/><text x="23.3731%" y="671.50"></text></g><g><title>[libc.so.6] (5 samples, 1.50%)</title><rect x="23.1231%" y="645" width="1.5015%" height="15" fill="rgb(220,109,13)" fg:x="77" fg:w="5"/><text x="23.3731%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 1.50%)</title><rect x="23.1231%" y="629" width="1.5015%" height="15" fill="rgb(232,18,1)" fg:x="77" fg:w="5"/><text x="23.3731%" y="639.50"></text></g><g><title>_dl_catch_exception (5 samples, 1.50%)</title><rect x="23.1231%" y="613" width="1.5015%" height="15" fill="rgb(215,41,42)" fg:x="77" fg:w="5"/><text x="23.3731%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 1.50%)</title><rect x="23.1231%" y="597" width="1.5015%" height="15" fill="rgb(224,123,36)" fg:x="77" fg:w="5"/><text x="23.3731%" y="607.50"></text></g><g><title>_dl_catch_exception (5 samples, 1.50%)</title><rect x="23.1231%" y="581" width="1.5015%" height="15" fill="rgb(240,125,3)" fg:x="77" fg:w="5"/><text x="23.3731%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 1.50%)</title><rect x="23.1231%" y="565" width="1.5015%" height="15" fill="rgb(205,98,50)" fg:x="77" fg:w="5"/><text x="23.3731%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 1.50%)</title><rect x="23.1231%" y="549" width="1.5015%" height="15" fill="rgb(205,185,37)" fg:x="77" fg:w="5"/><text x="23.3731%" y="559.50"></text></g><g><title>[libLLVM-16.so] (1 samples, 0.30%)</title><rect x="24.3243%" y="533" width="0.3003%" height="15" fill="rgb(238,207,15)" fg:x="81" fg:w="1"/><text x="24.5743%" y="543.50"></text></g><g><title>[libvulkan_intel.so] (11 samples, 3.30%)</title><rect x="24.6246%" y="757" width="3.3033%" height="15" fill="rgb(213,199,42)" fg:x="82" fg:w="11"/><text x="24.8746%" y="767.50">[li..</text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.30%)</title><rect x="27.9279%" y="757" width="0.3003%" height="15" fill="rgb(235,201,11)" fg:x="93" fg:w="1"/><text x="28.1779%" y="767.50"></text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.753356876329018898 (2 samples, 0.60%)</title><rect x="28.2282%" y="757" width="0.6006%" height="15" fill="rgb(207,46,11)" fg:x="94" fg:w="2"/><text x="28.4782%" y="767.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (2 samples, 0.60%)</title><rect x="28.2282%" y="741" width="0.6006%" height="15" fill="rgb(241,35,35)" fg:x="94" fg:w="2"/><text x="28.4782%" y="751.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (2 samples, 0.60%)</title><rect x="28.2282%" y="725" width="0.6006%" height="15" fill="rgb(243,32,47)" fg:x="94" fg:w="2"/><text x="28.4782%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (2 samples, 0.60%)</title><rect x="28.2282%" y="709" width="0.6006%" height="15" fill="rgb(247,202,23)" fg:x="94" fg:w="2"/><text x="28.4782%" y="719.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (2 samples, 0.60%)</title><rect x="28.2282%" y="693" width="0.6006%" height="15" fill="rgb(219,102,11)" fg:x="94" fg:w="2"/><text x="28.4782%" y="703.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (2 samples, 0.60%)</title><rect x="28.2282%" y="677" width="0.6006%" height="15" fill="rgb(243,110,44)" fg:x="94" fg:w="2"/><text x="28.4782%" y="687.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (2 samples, 0.60%)</title><rect x="28.2282%" y="661" width="0.6006%" height="15" fill="rgb(222,74,54)" fg:x="94" fg:w="2"/><text x="28.4782%" y="671.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="28.5285%" y="645" width="0.3003%" height="15" fill="rgb(216,99,12)" fg:x="95" fg:w="1"/><text x="28.7785%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.30%)</title><rect x="28.8288%" y="757" width="0.3003%" height="15" fill="rgb(226,22,26)" fg:x="96" fg:w="1"/><text x="29.0788%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.30%)</title><rect x="29.1291%" y="757" width="0.3003%" height="15" fill="rgb(217,163,10)" fg:x="97" fg:w="1"/><text x="29.3791%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (1 samples, 0.30%)</title><rect x="29.4294%" y="757" width="0.3003%" height="15" fill="rgb(213,25,53)" fg:x="98" fg:w="1"/><text x="29.6794%" y="767.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (1 samples, 0.30%)</title><rect x="29.7297%" y="757" width="0.3003%" height="15" fill="rgb(252,105,26)" fg:x="99" fg:w="1"/><text x="29.9797%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.60%)</title><rect x="30.0300%" y="757" width="0.6006%" height="15" fill="rgb(220,39,43)" fg:x="100" fg:w="2"/><text x="30.2800%" y="767.50"></text></g><g><title>morphorm::types::Units::is_auto (1 samples, 0.30%)</title><rect x="30.6306%" y="757" width="0.3003%" height="15" fill="rgb(229,68,48)" fg:x="102" fg:w="1"/><text x="30.8806%" y="767.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.30%)</title><rect x="30.9309%" y="645" width="0.3003%" height="15" fill="rgb(252,8,32)" fg:x="103" fg:w="1"/><text x="31.1809%" y="655.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.30%)</title><rect x="30.9309%" y="629" width="0.3003%" height="15" fill="rgb(223,20,43)" fg:x="103" fg:w="1"/><text x="31.1809%" y="639.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.30%)</title><rect x="30.9309%" y="613" width="0.3003%" height="15" fill="rgb(229,81,49)" fg:x="103" fg:w="1"/><text x="31.1809%" y="623.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.60%)</title><rect x="30.9309%" y="757" width="0.6006%" height="15" fill="rgb(236,28,36)" fg:x="103" fg:w="2"/><text x="31.1809%" y="767.50"></text></g><g><title>wgpu::Instance::new (2 samples, 0.60%)</title><rect x="30.9309%" y="741" width="0.6006%" height="15" fill="rgb(249,185,26)" fg:x="103" fg:w="2"/><text x="31.1809%" y="751.50"></text></g><g><title>wgpu_core::instance::Instance::new (2 samples, 0.60%)</title><rect x="30.9309%" y="725" width="0.6006%" height="15" fill="rgb(249,174,33)" fg:x="103" fg:w="2"/><text x="31.1809%" y="735.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::init (2 samples, 0.60%)</title><rect x="30.9309%" y="709" width="0.6006%" height="15" fill="rgb(233,201,37)" fg:x="103" fg:w="2"/><text x="31.1809%" y="719.50"></text></g><g><title>wgpu_hal::gles::egl::Inner::create (2 samples, 0.60%)</title><rect x="30.9309%" y="693" width="0.6006%" height="15" fill="rgb(221,78,26)" fg:x="103" fg:w="2"/><text x="31.1809%" y="703.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (2 samples, 0.60%)</title><rect x="30.9309%" y="677" width="0.6006%" height="15" fill="rgb(250,127,30)" fg:x="103" fg:w="2"/><text x="31.1809%" y="687.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (2 samples, 0.60%)</title><rect x="30.9309%" y="661" width="0.6006%" height="15" fill="rgb(230,49,44)" fg:x="103" fg:w="2"/><text x="31.1809%" y="671.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (1 samples, 0.30%)</title><rect x="31.2312%" y="645" width="0.3003%" height="15" fill="rgb(229,67,23)" fg:x="104" fg:w="1"/><text x="31.4812%" y="655.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (1 samples, 0.30%)</title><rect x="31.2312%" y="629" width="0.3003%" height="15" fill="rgb(249,83,47)" fg:x="104" fg:w="1"/><text x="31.4812%" y="639.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.30%)</title><rect x="31.5315%" y="613" width="0.3003%" height="15" fill="rgb(215,43,3)" fg:x="105" fg:w="1"/><text x="31.7815%" y="623.50"></text></g><g><title>vkCreateInstance (2 samples, 0.60%)</title><rect x="31.5315%" y="757" width="0.6006%" height="15" fill="rgb(238,154,13)" fg:x="105" fg:w="2"/><text x="31.7815%" y="767.50"></text></g><g><title>[libvulkan.so.1.3.274] (2 samples, 0.60%)</title><rect x="31.5315%" y="741" width="0.6006%" height="15" fill="rgb(219,56,2)" fg:x="105" fg:w="2"/><text x="31.7815%" y="751.50"></text></g><g><title>[libvulkan.so.1.3.274] (2 samples, 0.60%)</title><rect x="31.5315%" y="725" width="0.6006%" height="15" fill="rgb(233,0,4)" fg:x="105" fg:w="2"/><text x="31.7815%" y="735.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="31.5315%" y="709" width="0.6006%" height="15" fill="rgb(235,30,7)" fg:x="105" fg:w="2"/><text x="31.7815%" y="719.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="31.5315%" y="693" width="0.6006%" height="15" fill="rgb(250,79,13)" fg:x="105" fg:w="2"/><text x="31.7815%" y="703.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="31.5315%" y="677" width="0.6006%" height="15" fill="rgb(211,146,34)" fg:x="105" fg:w="2"/><text x="31.7815%" y="687.50"></text></g><g><title>XML_ParseBuffer (2 samples, 0.60%)</title><rect x="31.5315%" y="661" width="0.6006%" height="15" fill="rgb(228,22,38)" fg:x="105" fg:w="2"/><text x="31.7815%" y="671.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.60%)</title><rect x="31.5315%" y="645" width="0.6006%" height="15" fill="rgb(235,168,5)" fg:x="105" fg:w="2"/><text x="31.7815%" y="655.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.60%)</title><rect x="31.5315%" y="629" width="0.6006%" height="15" fill="rgb(221,155,16)" fg:x="105" fg:w="2"/><text x="31.7815%" y="639.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="31.8318%" y="613" width="0.3003%" height="15" fill="rgb(215,215,53)" fg:x="106" fg:w="1"/><text x="32.0818%" y="623.50"></text></g><g><title>regcomp (1 samples, 0.30%)</title><rect x="31.8318%" y="597" width="0.3003%" height="15" fill="rgb(223,4,10)" fg:x="106" fg:w="1"/><text x="32.0818%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="31.8318%" y="581" width="0.3003%" height="15" fill="rgb(234,103,6)" fg:x="106" fg:w="1"/><text x="32.0818%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="31.8318%" y="565" width="0.3003%" height="15" fill="rgb(227,97,0)" fg:x="106" fg:w="1"/><text x="32.0818%" y="575.50"></text></g><g><title>__mbrtowc (1 samples, 0.30%)</title><rect x="31.8318%" y="549" width="0.3003%" height="15" fill="rgb(234,150,53)" fg:x="106" fg:w="1"/><text x="32.0818%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="31.8318%" y="533" width="0.3003%" height="15" fill="rgb(228,201,54)" fg:x="106" fg:w="1"/><text x="32.0818%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="31.8318%" y="517" width="0.3003%" height="15" fill="rgb(222,22,37)" fg:x="106" fg:w="1"/><text x="32.0818%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="31.8318%" y="501" width="0.3003%" height="15" fill="rgb(237,53,32)" fg:x="106" fg:w="1"/><text x="32.0818%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="31.8318%" y="485" width="0.3003%" height="15" fill="rgb(233,25,53)" fg:x="106" fg:w="1"/><text x="32.0818%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="31.8318%" y="469" width="0.3003%" height="15" fill="rgb(210,40,34)" fg:x="106" fg:w="1"/><text x="32.0818%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="31.8318%" y="453" width="0.3003%" height="15" fill="rgb(241,220,44)" fg:x="106" fg:w="1"/><text x="32.0818%" y="463.50"></text></g><g><title>__tfind (1 samples, 0.30%)</title><rect x="31.8318%" y="437" width="0.3003%" height="15" fill="rgb(235,28,35)" fg:x="106" fg:w="1"/><text x="32.0818%" y="447.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.30%)</title><rect x="32.1321%" y="565" width="0.3003%" height="15" fill="rgb(210,56,17)" fg:x="107" fg:w="1"/><text x="32.3821%" y="575.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.30%)</title><rect x="32.1321%" y="549" width="0.3003%" height="15" fill="rgb(224,130,29)" fg:x="107" fg:w="1"/><text x="32.3821%" y="559.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.30%)</title><rect x="32.1321%" y="533" width="0.3003%" height="15" fill="rgb(235,212,8)" fg:x="107" fg:w="1"/><text x="32.3821%" y="543.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.30%)</title><rect x="32.1321%" y="517" width="0.3003%" height="15" fill="rgb(223,33,50)" fg:x="107" fg:w="1"/><text x="32.3821%" y="527.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.30%)</title><rect x="32.1321%" y="501" width="0.3003%" height="15" fill="rgb(219,149,13)" fg:x="107" fg:w="1"/><text x="32.3821%" y="511.50"></text></g><g><title>malloc (1 samples, 0.30%)</title><rect x="32.1321%" y="485" width="0.3003%" height="15" fill="rgb(250,156,29)" fg:x="107" fg:w="1"/><text x="32.3821%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="32.1321%" y="469" width="0.3003%" height="15" fill="rgb(216,193,19)" fg:x="107" fg:w="1"/><text x="32.3821%" y="479.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.60%)</title><rect x="32.1321%" y="645" width="0.6006%" height="15" fill="rgb(216,135,14)" fg:x="107" fg:w="2"/><text x="32.3821%" y="655.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.60%)</title><rect x="32.1321%" y="629" width="0.6006%" height="15" fill="rgb(241,47,5)" fg:x="107" fg:w="2"/><text x="32.3821%" y="639.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.60%)</title><rect x="32.1321%" y="613" width="0.6006%" height="15" fill="rgb(233,42,35)" fg:x="107" fg:w="2"/><text x="32.3821%" y="623.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.60%)</title><rect x="32.1321%" y="597" width="0.6006%" height="15" fill="rgb(231,13,6)" fg:x="107" fg:w="2"/><text x="32.3821%" y="607.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.60%)</title><rect x="32.1321%" y="581" width="0.6006%" height="15" fill="rgb(207,181,40)" fg:x="107" fg:w="2"/><text x="32.3821%" y="591.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.30%)</title><rect x="32.4324%" y="565" width="0.3003%" height="15" fill="rgb(254,173,49)" fg:x="108" fg:w="1"/><text x="32.6824%" y="575.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.30%)</title><rect x="32.4324%" y="549" width="0.3003%" height="15" fill="rgb(221,1,38)" fg:x="108" fg:w="1"/><text x="32.6824%" y="559.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.30%)</title><rect x="32.4324%" y="533" width="0.3003%" height="15" fill="rgb(206,124,46)" fg:x="108" fg:w="1"/><text x="32.6824%" y="543.50"></text></g><g><title>wgpu::Instance::new (3 samples, 0.90%)</title><rect x="32.1321%" y="757" width="0.9009%" height="15" fill="rgb(249,21,11)" fg:x="107" fg:w="3"/><text x="32.3821%" y="767.50"></text></g><g><title>wgpu_core::instance::Instance::new (3 samples, 0.90%)</title><rect x="32.1321%" y="741" width="0.9009%" height="15" fill="rgb(222,201,40)" fg:x="107" fg:w="3"/><text x="32.3821%" y="751.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::init (3 samples, 0.90%)</title><rect x="32.1321%" y="725" width="0.9009%" height="15" fill="rgb(235,61,29)" fg:x="107" fg:w="3"/><text x="32.3821%" y="735.50"></text></g><g><title>wgpu_hal::gles::egl::Inner::create (3 samples, 0.90%)</title><rect x="32.1321%" y="709" width="0.9009%" height="15" fill="rgb(219,207,3)" fg:x="107" fg:w="3"/><text x="32.3821%" y="719.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (3 samples, 0.90%)</title><rect x="32.1321%" y="693" width="0.9009%" height="15" fill="rgb(222,56,46)" fg:x="107" fg:w="3"/><text x="32.3821%" y="703.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (3 samples, 0.90%)</title><rect x="32.1321%" y="677" width="0.9009%" height="15" fill="rgb(239,76,54)" fg:x="107" fg:w="3"/><text x="32.3821%" y="687.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (3 samples, 0.90%)</title><rect x="32.1321%" y="661" width="0.9009%" height="15" fill="rgb(231,124,27)" fg:x="107" fg:w="3"/><text x="32.3821%" y="671.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (1 samples, 0.30%)</title><rect x="32.7327%" y="645" width="0.3003%" height="15" fill="rgb(249,195,6)" fg:x="109" fg:w="1"/><text x="32.9827%" y="655.50"></text></g><g><title>dlopen (1 samples, 0.30%)</title><rect x="32.7327%" y="629" width="0.3003%" height="15" fill="rgb(237,174,47)" fg:x="109" fg:w="1"/><text x="32.9827%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="32.7327%" y="613" width="0.3003%" height="15" fill="rgb(206,201,31)" fg:x="109" fg:w="1"/><text x="32.9827%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="597" width="0.3003%" height="15" fill="rgb(231,57,52)" fg:x="109" fg:w="1"/><text x="32.9827%" y="607.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.30%)</title><rect x="32.7327%" y="581" width="0.3003%" height="15" fill="rgb(248,177,22)" fg:x="109" fg:w="1"/><text x="32.9827%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="32.7327%" y="565" width="0.3003%" height="15" fill="rgb(215,211,37)" fg:x="109" fg:w="1"/><text x="32.9827%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="549" width="0.3003%" height="15" fill="rgb(241,128,51)" fg:x="109" fg:w="1"/><text x="32.9827%" y="559.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.30%)</title><rect x="32.7327%" y="533" width="0.3003%" height="15" fill="rgb(227,165,31)" fg:x="109" fg:w="1"/><text x="32.9827%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="517" width="0.3003%" height="15" fill="rgb(228,167,24)" fg:x="109" fg:w="1"/><text x="32.9827%" y="527.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.30%)</title><rect x="32.7327%" y="501" width="0.3003%" height="15" fill="rgb(228,143,12)" fg:x="109" fg:w="1"/><text x="32.9827%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="485" width="0.3003%" height="15" fill="rgb(249,149,8)" fg:x="109" fg:w="1"/><text x="32.9827%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="469" width="0.3003%" height="15" fill="rgb(243,35,44)" fg:x="109" fg:w="1"/><text x="32.9827%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="453" width="0.3003%" height="15" fill="rgb(246,89,9)" fg:x="109" fg:w="1"/><text x="32.9827%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="437" width="0.3003%" height="15" fill="rgb(233,213,13)" fg:x="109" fg:w="1"/><text x="32.9827%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="421" width="0.3003%" height="15" fill="rgb(233,141,41)" fg:x="109" fg:w="1"/><text x="32.9827%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.30%)</title><rect x="32.7327%" y="405" width="0.3003%" height="15" fill="rgb(239,167,4)" fg:x="109" fg:w="1"/><text x="32.9827%" y="415.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (1 samples, 0.30%)</title><rect x="33.0330%" y="757" width="0.3003%" height="15" fill="rgb(209,217,16)" fg:x="110" fg:w="1"/><text x="33.2830%" y="767.50"></text></g><g><title>wgpu_core::command::bind::compat::BoundBindGroupLayouts::invalid_mask (1 samples, 0.30%)</title><rect x="33.3333%" y="757" width="0.3003%" height="15" fill="rgb(219,88,35)" fg:x="111" fg:w="1"/><text x="33.5833%" y="767.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_texture_memory (1 samples, 0.30%)</title><rect x="33.6336%" y="757" width="0.3003%" height="15" fill="rgb(220,193,23)" fg:x="112" fg:w="1"/><text x="33.8836%" y="767.50"></text></g><g><title>wgpu_core::command::clear::clear_texture (1 samples, 0.30%)</title><rect x="33.6336%" y="741" width="0.3003%" height="15" fill="rgb(230,90,52)" fg:x="112" fg:w="1"/><text x="33.8836%" y="751.50"></text></g><g><title>wgpu_core::command::clear::clear_texture_via_render_passes (1 samples, 0.30%)</title><rect x="33.6336%" y="725" width="0.3003%" height="15" fill="rgb(252,106,19)" fg:x="112" fg:w="1"/><text x="33.8836%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (1 samples, 0.30%)</title><rect x="33.6336%" y="709" width="0.3003%" height="15" fill="rgb(206,74,20)" fg:x="112" fg:w="1"/><text x="33.8836%" y="719.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="33.6336%" y="693" width="0.3003%" height="15" fill="rgb(230,138,44)" fg:x="112" fg:w="1"/><text x="33.8836%" y="703.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="33.6336%" y="677" width="0.3003%" height="15" fill="rgb(235,182,43)" fg:x="112" fg:w="1"/><text x="33.8836%" y="687.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="33.6336%" y="661" width="0.3003%" height="15" fill="rgb(242,16,51)" fg:x="112" fg:w="1"/><text x="33.8836%" y="671.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="33.6336%" y="645" width="0.3003%" height="15" fill="rgb(248,9,4)" fg:x="112" fg:w="1"/><text x="33.8836%" y="655.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="33.6336%" y="629" width="0.3003%" height="15" fill="rgb(210,31,22)" fg:x="112" fg:w="1"/><text x="33.8836%" y="639.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="33.6336%" y="613" width="0.3003%" height="15" fill="rgb(239,54,39)" fg:x="112" fg:w="1"/><text x="33.8836%" y="623.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="33.6336%" y="597" width="0.3003%" height="15" fill="rgb(230,99,41)" fg:x="112" fg:w="1"/><text x="33.8836%" y="607.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="33.6336%" y="581" width="0.3003%" height="15" fill="rgb(253,106,12)" fg:x="112" fg:w="1"/><text x="33.8836%" y="591.50"></text></g><g><title>[libvulkan_intel.so] (9 samples, 2.70%)</title><rect x="33.9339%" y="709" width="2.7027%" height="15" fill="rgb(213,46,41)" fg:x="113" fg:w="9"/><text x="34.1839%" y="719.50">[l..</text></g><g><title>[libvulkan_intel.so] (9 samples, 2.70%)</title><rect x="33.9339%" y="693" width="2.7027%" height="15" fill="rgb(215,133,35)" fg:x="113" fg:w="9"/><text x="34.1839%" y="703.50">[l..</text></g><g><title>[libvulkan_intel.so] (9 samples, 2.70%)</title><rect x="33.9339%" y="677" width="2.7027%" height="15" fill="rgb(213,28,5)" fg:x="113" fg:w="9"/><text x="34.1839%" y="687.50">[l..</text></g><g><title>[libvulkan_intel.so] (8 samples, 2.40%)</title><rect x="34.2342%" y="661" width="2.4024%" height="15" fill="rgb(215,77,49)" fg:x="114" fg:w="8"/><text x="34.4842%" y="671.50">[l..</text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="36.0360%" y="645" width="0.6006%" height="15" fill="rgb(248,100,22)" fg:x="120" fg:w="2"/><text x="36.2860%" y="655.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="36.0360%" y="629" width="0.6006%" height="15" fill="rgb(208,67,9)" fg:x="120" fg:w="2"/><text x="36.2860%" y="639.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="36.0360%" y="613" width="0.6006%" height="15" fill="rgb(219,133,21)" fg:x="120" fg:w="2"/><text x="36.2860%" y="623.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (10 samples, 3.00%)</title><rect x="33.9339%" y="757" width="3.0030%" height="15" fill="rgb(246,46,29)" fg:x="113" fg:w="10"/><text x="34.1839%" y="767.50">wgp..</text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (10 samples, 3.00%)</title><rect x="33.9339%" y="741" width="3.0030%" height="15" fill="rgb(246,185,52)" fg:x="113" fg:w="10"/><text x="34.1839%" y="751.50">wgp..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (10 samples, 3.00%)</title><rect x="33.9339%" y="725" width="3.0030%" height="15" fill="rgb(252,136,11)" fg:x="113" fg:w="10"/><text x="34.1839%" y="735.50">wgp..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_render_pass (1 samples, 0.30%)</title><rect x="36.6366%" y="709" width="0.3003%" height="15" fill="rgb(219,138,53)" fg:x="122" fg:w="1"/><text x="36.8866%" y="719.50"></text></g><g><title>wgpu_core::command::render::VertexState::update_limits (1 samples, 0.30%)</title><rect x="36.9369%" y="757" width="0.3003%" height="15" fill="rgb(211,51,23)" fg:x="123" fg:w="1"/><text x="37.1869%" y="767.50"></text></g><g><title>wgpu_core::device::RenderPassContext::check_compatible (1 samples, 0.30%)</title><rect x="37.2372%" y="757" width="0.3003%" height="15" fill="rgb(247,221,28)" fg:x="124" fg:w="1"/><text x="37.4872%" y="767.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_texture_view (1 samples, 0.30%)</title><rect x="37.5375%" y="757" width="0.3003%" height="15" fill="rgb(251,222,45)" fg:x="125" fg:w="1"/><text x="37.7875%" y="767.50"></text></g><g><title>wgpu_core::init_tracker::texture::TextureInitTracker::check_action (1 samples, 0.30%)</title><rect x="37.8378%" y="757" width="0.3003%" height="15" fill="rgb(217,162,53)" fg:x="126" fg:w="1"/><text x="38.0878%" y="767.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (1 samples, 0.30%)</title><rect x="38.1381%" y="757" width="0.3003%" height="15" fill="rgb(229,93,14)" fg:x="127" fg:w="1"/><text x="38.3881%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (1 samples, 0.30%)</title><rect x="38.1381%" y="741" width="0.3003%" height="15" fill="rgb(209,67,49)" fg:x="127" fg:w="1"/><text x="38.3881%" y="751.50"></text></g><g><title>vkCreateDevice (1 samples, 0.30%)</title><rect x="38.1381%" y="725" width="0.3003%" height="15" fill="rgb(213,87,29)" fg:x="127" fg:w="1"/><text x="38.3881%" y="735.50"></text></g><g><title>[libvulkan.so.1.3.274] (1 samples, 0.30%)</title><rect x="38.1381%" y="709" width="0.3003%" height="15" fill="rgb(205,151,52)" fg:x="127" fg:w="1"/><text x="38.3881%" y="719.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="38.1381%" y="693" width="0.3003%" height="15" fill="rgb(253,215,39)" fg:x="127" fg:w="1"/><text x="38.3881%" y="703.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="38.1381%" y="677" width="0.3003%" height="15" fill="rgb(221,220,41)" fg:x="127" fg:w="1"/><text x="38.3881%" y="687.50"></text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::get (1 samples, 0.30%)</title><rect x="38.4384%" y="757" width="0.3003%" height="15" fill="rgb(218,133,21)" fg:x="128" fg:w="1"/><text x="38.6884%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (1 samples, 0.30%)</title><rect x="38.7387%" y="757" width="0.3003%" height="15" fill="rgb(221,193,43)" fg:x="129" fg:w="1"/><text x="38.9887%" y="767.50"></text></g><g><title>[unknown] (71 samples, 21.32%)</title><rect x="18.3183%" y="773" width="21.3213%" height="15" fill="rgb(240,128,52)" fg:x="61" fg:w="71"/><text x="18.5683%" y="783.50">[unknown]</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (2 samples, 0.60%)</title><rect x="39.0390%" y="757" width="0.6006%" height="15" fill="rgb(253,114,12)" fg:x="130" fg:w="2"/><text x="39.2890%" y="767.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (2 samples, 0.60%)</title><rect x="39.0390%" y="741" width="0.6006%" height="15" fill="rgb(215,223,47)" fg:x="130" fg:w="2"/><text x="39.2890%" y="751.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (2 samples, 0.60%)</title><rect x="39.0390%" y="725" width="0.6006%" height="15" fill="rgb(248,225,23)" fg:x="130" fg:w="2"/><text x="39.2890%" y="735.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::Ime::new (2 samples, 0.60%)</title><rect x="39.0390%" y="709" width="0.6006%" height="15" fill="rgb(250,108,0)" fg:x="130" fg:w="2"/><text x="39.2890%" y="719.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::PotentialInputMethods::open_im (2 samples, 0.60%)</title><rect x="39.0390%" y="693" width="0.6006%" height="15" fill="rgb(228,208,7)" fg:x="130" fg:w="2"/><text x="39.2890%" y="703.50"></text></g><g><title>_ZN5winit13platform_impl8platform3x113ime12input_method20PotentialInputMethod7open_im17h3cf011a26f25cd6dE.llvm.1883977762121155037 (2 samples, 0.60%)</title><rect x="39.0390%" y="677" width="0.6006%" height="15" fill="rgb(244,45,10)" fg:x="130" fg:w="2"/><text x="39.2890%" y="687.50"></text></g><g><title>_XimOpenIM (2 samples, 0.60%)</title><rect x="39.0390%" y="661" width="0.6006%" height="15" fill="rgb(207,125,25)" fg:x="130" fg:w="2"/><text x="39.2890%" y="671.50"></text></g><g><title>_XimLocalOpenIM (2 samples, 0.60%)</title><rect x="39.0390%" y="645" width="0.6006%" height="15" fill="rgb(210,195,18)" fg:x="130" fg:w="2"/><text x="39.2890%" y="655.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.60%)</title><rect x="39.0390%" y="629" width="0.6006%" height="15" fill="rgb(249,80,12)" fg:x="130" fg:w="2"/><text x="39.2890%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (1 samples, 0.30%)</title><rect x="39.6396%" y="341" width="0.3003%" height="15" fill="rgb(221,65,9)" fg:x="132" fg:w="1"/><text x="39.8896%" y="351.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_clipped_shape (1 samples, 0.30%)</title><rect x="39.9399%" y="325" width="0.3003%" height="15" fill="rgb(235,49,36)" fg:x="133" fg:w="1"/><text x="40.1899%" y="335.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_shape (1 samples, 0.30%)</title><rect x="39.9399%" y="309" width="0.3003%" height="15" fill="rgb(225,32,20)" fg:x="133" fg:w="1"/><text x="40.1899%" y="319.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_rect (1 samples, 0.30%)</title><rect x="39.9399%" y="293" width="0.3003%" height="15" fill="rgb(215,141,46)" fg:x="133" fg:w="1"/><text x="40.1899%" y="303.50"></text></g><g><title>_ZN6epaint11tessellator11stroke_path17h3b2fa0dd94fcfd98E.llvm.973520160457006097 (1 samples, 0.30%)</title><rect x="39.9399%" y="277" width="0.3003%" height="15" fill="rgb(250,160,47)" fg:x="133" fg:w="1"/><text x="40.1899%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.30%)</title><rect x="39.9399%" y="261" width="0.3003%" height="15" fill="rgb(216,222,40)" fg:x="133" fg:w="1"/><text x="40.1899%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.30%)</title><rect x="39.9399%" y="245" width="0.3003%" height="15" fill="rgb(234,217,39)" fg:x="133" fg:w="1"/><text x="40.1899%" y="255.50"></text></g><g><title>realloc (1 samples, 0.30%)</title><rect x="39.9399%" y="229" width="0.3003%" height="15" fill="rgb(207,178,40)" fg:x="133" fg:w="1"/><text x="40.1899%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="39.9399%" y="213" width="0.3003%" height="15" fill="rgb(221,136,13)" fg:x="133" fg:w="1"/><text x="40.1899%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="39.9399%" y="197" width="0.3003%" height="15" fill="rgb(249,199,10)" fg:x="133" fg:w="1"/><text x="40.1899%" y="207.50"></text></g><g><title>_ZN6epaint11tessellator11stroke_path17h3b2fa0dd94fcfd98E.llvm.973520160457006097 (1 samples, 0.30%)</title><rect x="40.2402%" y="309" width="0.3003%" height="15" fill="rgb(249,222,13)" fg:x="134" fg:w="1"/><text x="40.4902%" y="319.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_rect (1 samples, 0.30%)</title><rect x="40.5405%" y="309" width="0.3003%" height="15" fill="rgb(244,185,38)" fg:x="135" fg:w="1"/><text x="40.7905%" y="319.50"></text></g><g><title>epaint::tessellator::Path::add_line_loop (1 samples, 0.30%)</title><rect x="40.5405%" y="293" width="0.3003%" height="15" fill="rgb(236,202,9)" fg:x="135" fg:w="1"/><text x="40.7905%" y="303.50"></text></g><g><title>hypotf (1 samples, 0.30%)</title><rect x="40.5405%" y="277" width="0.3003%" height="15" fill="rgb(250,229,37)" fg:x="135" fg:w="1"/><text x="40.7905%" y="287.50"></text></g><g><title>egui::context::Context::tessellate (5 samples, 1.50%)</title><rect x="39.6396%" y="389" width="1.5015%" height="15" fill="rgb(206,174,23)" fg:x="132" fg:w="5"/><text x="39.8896%" y="399.50"></text></g><g><title>egui::context::Context::write (5 samples, 1.50%)</title><rect x="39.6396%" y="373" width="1.5015%" height="15" fill="rgb(211,33,43)" fg:x="132" fg:w="5"/><text x="39.8896%" y="383.50"></text></g><g><title>epaint::tessellator::tessellate_shapes (5 samples, 1.50%)</title><rect x="39.6396%" y="357" width="1.5015%" height="15" fill="rgb(245,58,50)" fg:x="132" fg:w="5"/><text x="39.8896%" y="367.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_clipped_shape (4 samples, 1.20%)</title><rect x="39.9399%" y="341" width="1.2012%" height="15" fill="rgb(244,68,36)" fg:x="133" fg:w="4"/><text x="40.1899%" y="351.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_shape (3 samples, 0.90%)</title><rect x="40.2402%" y="325" width="0.9009%" height="15" fill="rgb(232,229,15)" fg:x="134" fg:w="3"/><text x="40.4902%" y="335.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_text (1 samples, 0.30%)</title><rect x="40.8408%" y="309" width="0.3003%" height="15" fill="rgb(254,30,23)" fg:x="136" fg:w="1"/><text x="41.0908%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.30%)</title><rect x="40.8408%" y="293" width="0.3003%" height="15" fill="rgb(235,160,14)" fg:x="136" fg:w="1"/><text x="41.0908%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.30%)</title><rect x="40.8408%" y="277" width="0.3003%" height="15" fill="rgb(212,155,44)" fg:x="136" fg:w="1"/><text x="41.0908%" y="287.50"></text></g><g><title>realloc (1 samples, 0.30%)</title><rect x="40.8408%" y="261" width="0.3003%" height="15" fill="rgb(226,2,50)" fg:x="136" fg:w="1"/><text x="41.0908%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="40.8408%" y="245" width="0.3003%" height="15" fill="rgb(234,177,6)" fg:x="136" fg:w="1"/><text x="41.0908%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="40.8408%" y="229" width="0.3003%" height="15" fill="rgb(217,24,9)" fg:x="136" fg:w="1"/><text x="41.0908%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="41.1411%" y="373" width="0.3003%" height="15" fill="rgb(220,13,46)" fg:x="137" fg:w="1"/><text x="41.3911%" y="383.50"></text></g><g><title>&lt;vert::modules::egui::Egui as vert::modules::renderer::Prepare&gt;::prepare (7 samples, 2.10%)</title><rect x="39.6396%" y="405" width="2.1021%" height="15" fill="rgb(239,221,27)" fg:x="132" fg:w="7"/><text x="39.8896%" y="415.50">&lt;..</text></g><g><title>egui_wgpu::renderer::Renderer::update_buffers (2 samples, 0.60%)</title><rect x="41.1411%" y="389" width="0.6006%" height="15" fill="rgb(222,198,25)" fg:x="137" fg:w="2"/><text x="41.3911%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::QueueWriteBufferView&gt; (1 samples, 0.30%)</title><rect x="41.4414%" y="373" width="0.3003%" height="15" fill="rgb(211,99,13)" fg:x="138" fg:w="1"/><text x="41.6914%" y="383.50"></text></g><g><title>&lt;wgpu::QueueWriteBufferView as core::ops::drop::Drop&gt;::drop (1 samples, 0.30%)</title><rect x="41.4414%" y="357" width="0.3003%" height="15" fill="rgb(232,111,31)" fg:x="138" fg:w="1"/><text x="41.6914%" y="367.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_staging_buffer (1 samples, 0.30%)</title><rect x="41.4414%" y="341" width="0.3003%" height="15" fill="rgb(245,82,37)" fg:x="138" fg:w="1"/><text x="41.6914%" y="351.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_staging_buffer (1 samples, 0.30%)</title><rect x="41.4414%" y="325" width="0.3003%" height="15" fill="rgb(227,149,46)" fg:x="138" fg:w="1"/><text x="41.6914%" y="335.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer (1 samples, 0.30%)</title><rect x="41.4414%" y="309" width="0.3003%" height="15" fill="rgb(218,36,50)" fg:x="138" fg:w="1"/><text x="41.6914%" y="319.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (1 samples, 0.30%)</title><rect x="41.4414%" y="293" width="0.3003%" height="15" fill="rgb(226,80,48)" fg:x="138" fg:w="1"/><text x="41.6914%" y="303.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (1 samples, 0.30%)</title><rect x="41.4414%" y="277" width="0.3003%" height="15" fill="rgb(238,224,15)" fg:x="138" fg:w="1"/><text x="41.6914%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="41.4414%" y="261" width="0.3003%" height="15" fill="rgb(241,136,10)" fg:x="138" fg:w="1"/><text x="41.6914%" y="271.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="41.4414%" y="245" width="0.3003%" height="15" fill="rgb(208,32,45)" fg:x="138" fg:w="1"/><text x="41.6914%" y="255.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="41.4414%" y="229" width="0.3003%" height="15" fill="rgb(207,135,9)" fg:x="138" fg:w="1"/><text x="41.6914%" y="239.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="41.4414%" y="213" width="0.3003%" height="15" fill="rgb(206,86,44)" fg:x="138" fg:w="1"/><text x="41.6914%" y="223.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="41.4414%" y="197" width="0.3003%" height="15" fill="rgb(245,177,15)" fg:x="138" fg:w="1"/><text x="41.6914%" y="207.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="41.4414%" y="181" width="0.3003%" height="15" fill="rgb(206,64,50)" fg:x="138" fg:w="1"/><text x="41.6914%" y="191.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close_and_swap (1 samples, 0.30%)</title><rect x="41.7417%" y="309" width="0.3003%" height="15" fill="rgb(234,36,40)" fg:x="139" fg:w="1"/><text x="41.9917%" y="319.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (1 samples, 0.30%)</title><rect x="41.7417%" y="293" width="0.3003%" height="15" fill="rgb(213,64,8)" fg:x="139" fg:w="1"/><text x="41.9917%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="41.7417%" y="277" width="0.3003%" height="15" fill="rgb(210,75,36)" fg:x="139" fg:w="1"/><text x="41.9917%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="41.7417%" y="261" width="0.3003%" height="15" fill="rgb(229,88,21)" fg:x="139" fg:w="1"/><text x="41.9917%" y="271.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::add_pass_texture_init_actions (1 samples, 0.30%)</title><rect x="42.0420%" y="293" width="0.3003%" height="15" fill="rgb(252,204,47)" fg:x="140" fg:w="1"/><text x="42.2920%" y="303.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (1 samples, 0.30%)</title><rect x="42.0420%" y="277" width="0.3003%" height="15" fill="rgb(208,77,27)" fg:x="140" fg:w="1"/><text x="42.2920%" y="287.50"></text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.12648948253069277602 (3 samples, 0.90%)</title><rect x="41.7417%" y="389" width="0.9009%" height="15" fill="rgb(221,76,26)" fg:x="139" fg:w="3"/><text x="41.9917%" y="399.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (3 samples, 0.90%)</title><rect x="41.7417%" y="373" width="0.9009%" height="15" fill="rgb(225,139,18)" fg:x="139" fg:w="3"/><text x="41.9917%" y="383.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (3 samples, 0.90%)</title><rect x="41.7417%" y="357" width="0.9009%" height="15" fill="rgb(230,137,11)" fg:x="139" fg:w="3"/><text x="41.9917%" y="367.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (3 samples, 0.90%)</title><rect x="41.7417%" y="341" width="0.9009%" height="15" fill="rgb(212,28,1)" fg:x="139" fg:w="3"/><text x="41.9917%" y="351.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (3 samples, 0.90%)</title><rect x="41.7417%" y="325" width="0.9009%" height="15" fill="rgb(248,164,17)" fg:x="139" fg:w="3"/><text x="41.9917%" y="335.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (2 samples, 0.60%)</title><rect x="42.0420%" y="309" width="0.6006%" height="15" fill="rgb(222,171,42)" fg:x="140" fg:w="2"/><text x="42.2920%" y="319.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (1 samples, 0.30%)</title><rect x="42.3423%" y="293" width="0.3003%" height="15" fill="rgb(243,84,45)" fg:x="141" fg:w="1"/><text x="42.5923%" y="303.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (1 samples, 0.30%)</title><rect x="42.3423%" y="277" width="0.3003%" height="15" fill="rgb(252,49,23)" fg:x="141" fg:w="1"/><text x="42.5923%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.30%)</title><rect x="42.3423%" y="261" width="0.3003%" height="15" fill="rgb(215,19,7)" fg:x="141" fg:w="1"/><text x="42.5923%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.30%)</title><rect x="42.3423%" y="245" width="0.3003%" height="15" fill="rgb(238,81,41)" fg:x="141" fg:w="1"/><text x="42.5923%" y="255.50"></text></g><g><title>&lt;vert::modules::egui::Egui as vert::modules::renderer::post_processing::SdrSurfaceRenderer&gt;::render (4 samples, 1.20%)</title><rect x="41.7417%" y="405" width="1.2012%" height="15" fill="rgb(210,199,37)" fg:x="139" fg:w="4"/><text x="41.9917%" y="415.50"></text></g><g><title>egui_wgpu::renderer::Renderer::render (1 samples, 0.30%)</title><rect x="42.6426%" y="389" width="0.3003%" height="15" fill="rgb(244,192,49)" fg:x="142" fg:w="1"/><text x="42.8926%" y="399.50"></text></g><g><title>wgpu::RenderPass::set_bind_group (1 samples, 0.30%)</title><rect x="42.6426%" y="373" width="0.3003%" height="15" fill="rgb(226,211,11)" fg:x="142" fg:w="1"/><text x="42.8926%" y="383.50"></text></g><g><title>wgpu_render_pass_set_bind_group (1 samples, 0.30%)</title><rect x="42.6426%" y="357" width="0.3003%" height="15" fill="rgb(236,162,54)" fg:x="142" fg:w="1"/><text x="42.8926%" y="367.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::color_mesh::ColorMeshRenderer as vert::modules::renderer::Prepare&gt;::prepare (2 samples, 0.60%)</title><rect x="42.9429%" y="405" width="0.6006%" height="15" fill="rgb(220,229,9)" fg:x="143" fg:w="2"/><text x="43.1929%" y="415.50"></text></g><g><title>wgpu::Queue::write_buffer (2 samples, 0.60%)</title><rect x="42.9429%" y="389" width="0.6006%" height="15" fill="rgb(250,87,22)" fg:x="143" fg:w="2"/><text x="43.1929%" y="399.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (2 samples, 0.60%)</title><rect x="42.9429%" y="373" width="0.6006%" height="15" fill="rgb(239,43,17)" fg:x="143" fg:w="2"/><text x="43.1929%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (2 samples, 0.60%)</title><rect x="42.9429%" y="357" width="0.6006%" height="15" fill="rgb(231,177,25)" fg:x="143" fg:w="2"/><text x="43.1929%" y="367.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (2 samples, 0.60%)</title><rect x="42.9429%" y="341" width="0.6006%" height="15" fill="rgb(219,179,1)" fg:x="143" fg:w="2"/><text x="43.1929%" y="351.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (2 samples, 0.60%)</title><rect x="42.9429%" y="325" width="0.6006%" height="15" fill="rgb(238,219,53)" fg:x="143" fg:w="2"/><text x="43.1929%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (1 samples, 0.30%)</title><rect x="43.2432%" y="309" width="0.3003%" height="15" fill="rgb(232,167,36)" fg:x="144" fg:w="1"/><text x="43.4932%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.2432%" y="293" width="0.3003%" height="15" fill="rgb(244,19,51)" fg:x="144" fg:w="1"/><text x="43.4932%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.2432%" y="277" width="0.3003%" height="15" fill="rgb(224,6,22)" fg:x="144" fg:w="1"/><text x="43.4932%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.2432%" y="261" width="0.3003%" height="15" fill="rgb(224,145,5)" fg:x="144" fg:w="1"/><text x="43.4932%" y="271.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.2432%" y="245" width="0.3003%" height="15" fill="rgb(234,130,49)" fg:x="144" fg:w="1"/><text x="43.4932%" y="255.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.2432%" y="229" width="0.3003%" height="15" fill="rgb(254,6,2)" fg:x="144" fg:w="1"/><text x="43.4932%" y="239.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.2432%" y="213" width="0.3003%" height="15" fill="rgb(208,96,46)" fg:x="144" fg:w="1"/><text x="43.4932%" y="223.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.2432%" y="197" width="0.3003%" height="15" fill="rgb(239,3,39)" fg:x="144" fg:w="1"/><text x="43.4932%" y="207.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.2432%" y="181" width="0.3003%" height="15" fill="rgb(233,210,1)" fg:x="144" fg:w="1"/><text x="43.4932%" y="191.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::gizmos::Gizmos as vert::modules::renderer::Prepare&gt;::prepare (1 samples, 0.30%)</title><rect x="43.5435%" y="405" width="0.3003%" height="15" fill="rgb(244,137,37)" fg:x="145" fg:w="1"/><text x="43.7935%" y="415.50"></text></g><g><title>wgpu::Queue::write_buffer (1 samples, 0.30%)</title><rect x="43.5435%" y="389" width="0.3003%" height="15" fill="rgb(240,136,2)" fg:x="145" fg:w="1"/><text x="43.7935%" y="399.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (1 samples, 0.30%)</title><rect x="43.5435%" y="373" width="0.3003%" height="15" fill="rgb(239,18,37)" fg:x="145" fg:w="1"/><text x="43.7935%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (1 samples, 0.30%)</title><rect x="43.5435%" y="357" width="0.3003%" height="15" fill="rgb(218,185,22)" fg:x="145" fg:w="1"/><text x="43.7935%" y="367.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (1 samples, 0.30%)</title><rect x="43.5435%" y="341" width="0.3003%" height="15" fill="rgb(225,218,4)" fg:x="145" fg:w="1"/><text x="43.7935%" y="351.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (1 samples, 0.30%)</title><rect x="43.5435%" y="325" width="0.3003%" height="15" fill="rgb(230,182,32)" fg:x="145" fg:w="1"/><text x="43.7935%" y="335.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (1 samples, 0.30%)</title><rect x="43.5435%" y="309" width="0.3003%" height="15" fill="rgb(242,56,43)" fg:x="145" fg:w="1"/><text x="43.7935%" y="319.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.30%)</title><rect x="43.5435%" y="293" width="0.3003%" height="15" fill="rgb(233,99,24)" fg:x="145" fg:w="1"/><text x="43.7935%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.5435%" y="277" width="0.3003%" height="15" fill="rgb(234,209,42)" fg:x="145" fg:w="1"/><text x="43.7935%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="43.5435%" y="261" width="0.3003%" height="15" fill="rgb(227,7,12)" fg:x="145" fg:w="1"/><text x="43.7935%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="43.8438%" y="277" width="0.3003%" height="15" fill="rgb(245,203,43)" fg:x="146" fg:w="1"/><text x="44.0938%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (5 samples, 1.50%)</title><rect x="43.8438%" y="293" width="1.5015%" height="15" fill="rgb(238,205,33)" fg:x="146" fg:w="5"/><text x="44.0938%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (4 samples, 1.20%)</title><rect x="44.1441%" y="277" width="1.2012%" height="15" fill="rgb(231,56,7)" fg:x="147" fg:w="4"/><text x="44.3941%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="44.7447%" y="261" width="0.6006%" height="15" fill="rgb(244,186,29)" fg:x="149" fg:w="2"/><text x="44.9947%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::EntryPayload&gt; (1 samples, 0.30%)</title><rect x="45.3453%" y="293" width="0.3003%" height="15" fill="rgb(234,111,31)" fg:x="151" fg:w="1"/><text x="45.5953%" y="303.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.30%)</title><rect x="45.3453%" y="277" width="0.3003%" height="15" fill="rgb(241,149,10)" fg:x="151" fg:w="1"/><text x="45.5953%" y="287.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (2 samples, 0.60%)</title><rect x="45.6456%" y="293" width="0.6006%" height="15" fill="rgb(249,206,44)" fg:x="152" fg:w="2"/><text x="45.8956%" y="303.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (1 samples, 0.30%)</title><rect x="45.9459%" y="277" width="0.3003%" height="15" fill="rgb(251,153,30)" fg:x="153" fg:w="1"/><text x="46.1959%" y="287.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (1 samples, 0.30%)</title><rect x="46.2462%" y="293" width="0.3003%" height="15" fill="rgb(239,152,38)" fg:x="154" fg:w="1"/><text x="46.4962%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.30%)</title><rect x="46.2462%" y="277" width="0.3003%" height="15" fill="rgb(249,139,47)" fg:x="154" fg:w="1"/><text x="46.4962%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.30%)</title><rect x="46.2462%" y="261" width="0.3003%" height="15" fill="rgb(244,64,35)" fg:x="154" fg:w="1"/><text x="46.4962%" y="271.50"></text></g><g><title>malloc (1 samples, 0.30%)</title><rect x="46.2462%" y="245" width="0.3003%" height="15" fill="rgb(216,46,15)" fg:x="154" fg:w="1"/><text x="46.4962%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="46.2462%" y="229" width="0.3003%" height="15" fill="rgb(250,74,19)" fg:x="154" fg:w="1"/><text x="46.4962%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="46.2462%" y="213" width="0.3003%" height="15" fill="rgb(249,42,33)" fg:x="154" fg:w="1"/><text x="46.4962%" y="223.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (1 samples, 0.30%)</title><rect x="46.5465%" y="293" width="0.3003%" height="15" fill="rgb(242,149,17)" fg:x="155" fg:w="1"/><text x="46.7965%" y="303.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (1 samples, 0.30%)</title><rect x="46.5465%" y="277" width="0.3003%" height="15" fill="rgb(244,29,21)" fg:x="155" fg:w="1"/><text x="46.7965%" y="287.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (1 samples, 0.30%)</title><rect x="46.8468%" y="277" width="0.3003%" height="15" fill="rgb(220,130,37)" fg:x="156" fg:w="1"/><text x="47.0968%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="46.8468%" y="261" width="0.3003%" height="15" fill="rgb(211,67,2)" fg:x="156" fg:w="1"/><text x="47.0968%" y="271.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (2 samples, 0.60%)</title><rect x="46.8468%" y="293" width="0.6006%" height="15" fill="rgb(235,68,52)" fg:x="156" fg:w="2"/><text x="47.0968%" y="303.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (1 samples, 0.30%)</title><rect x="47.1471%" y="277" width="0.3003%" height="15" fill="rgb(246,142,3)" fg:x="157" fg:w="1"/><text x="47.3971%" y="287.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.30%)</title><rect x="47.1471%" y="261" width="0.3003%" height="15" fill="rgb(241,25,7)" fg:x="157" fg:w="1"/><text x="47.3971%" y="271.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (1 samples, 0.30%)</title><rect x="47.4474%" y="277" width="0.3003%" height="15" fill="rgb(242,119,39)" fg:x="158" fg:w="1"/><text x="47.6974%" y="287.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (3 samples, 0.90%)</title><rect x="47.4474%" y="293" width="0.9009%" height="15" fill="rgb(241,98,45)" fg:x="158" fg:w="3"/><text x="47.6974%" y="303.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (2 samples, 0.60%)</title><rect x="47.7477%" y="277" width="0.6006%" height="15" fill="rgb(254,28,30)" fg:x="159" fg:w="2"/><text x="47.9977%" y="287.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (1 samples, 0.30%)</title><rect x="48.3483%" y="293" width="0.3003%" height="15" fill="rgb(241,142,54)" fg:x="161" fg:w="1"/><text x="48.5983%" y="303.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.30%)</title><rect x="48.3483%" y="277" width="0.3003%" height="15" fill="rgb(222,85,15)" fg:x="161" fg:w="1"/><text x="48.5983%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.60%)</title><rect x="50.1502%" y="245" width="0.6006%" height="15" fill="rgb(210,85,47)" fg:x="167" fg:w="2"/><text x="50.4002%" y="255.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (10 samples, 3.00%)</title><rect x="48.6486%" y="293" width="3.0030%" height="15" fill="rgb(224,206,25)" fg:x="162" fg:w="10"/><text x="48.8986%" y="303.50">wgp..</text></g><g><title>[libvulkan_intel.so] (10 samples, 3.00%)</title><rect x="48.6486%" y="277" width="3.0030%" height="15" fill="rgb(243,201,19)" fg:x="162" fg:w="10"/><text x="48.8986%" y="287.50">[li..</text></g><g><title>[libvulkan_intel.so] (10 samples, 3.00%)</title><rect x="48.6486%" y="261" width="3.0030%" height="15" fill="rgb(236,59,4)" fg:x="162" fg:w="10"/><text x="48.8986%" y="271.50">[li..</text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="50.7508%" y="245" width="0.9009%" height="15" fill="rgb(254,179,45)" fg:x="169" fg:w="3"/><text x="51.0008%" y="255.50"></text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.753356876329018898 (27 samples, 8.11%)</title><rect x="43.8438%" y="373" width="8.1081%" height="15" fill="rgb(226,14,10)" fg:x="146" fg:w="27"/><text x="44.0938%" y="383.50">_ZN4core3pt..</text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (27 samples, 8.11%)</title><rect x="43.8438%" y="357" width="8.1081%" height="15" fill="rgb(244,27,41)" fg:x="146" fg:w="27"/><text x="44.0938%" y="367.50">&lt;wgpu::Rend..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (27 samples, 8.11%)</title><rect x="43.8438%" y="341" width="8.1081%" height="15" fill="rgb(235,35,32)" fg:x="146" fg:w="27"/><text x="44.0938%" y="351.50">&lt;T as wgpu:..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (27 samples, 8.11%)</title><rect x="43.8438%" y="325" width="8.1081%" height="15" fill="rgb(218,68,31)" fg:x="146" fg:w="27"/><text x="44.0938%" y="335.50">&lt;wgpu::back..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (27 samples, 8.11%)</title><rect x="43.8438%" y="309" width="8.1081%" height="15" fill="rgb(207,120,37)" fg:x="146" fg:w="27"/><text x="44.0938%" y="319.50">wgpu_core::..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (1 samples, 0.30%)</title><rect x="51.6517%" y="293" width="0.3003%" height="15" fill="rgb(227,98,0)" fg:x="172" fg:w="1"/><text x="51.9017%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="51.6517%" y="277" width="0.3003%" height="15" fill="rgb(207,7,3)" fg:x="172" fg:w="1"/><text x="51.9017%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="51.6517%" y="261" width="0.3003%" height="15" fill="rgb(206,98,19)" fg:x="172" fg:w="1"/><text x="51.9017%" y="271.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::bloom::Bloom as vert::modules::renderer::post_processing::PostProcessingEffect&gt;::apply::run_screen_render_pass (28 samples, 8.41%)</title><rect x="43.8438%" y="389" width="8.4084%" height="15" fill="rgb(217,5,26)" fg:x="146" fg:w="28"/><text x="44.0938%" y="399.50">&lt;vert::modul..</text></g><g><title>wgpu::CommandEncoder::begin_render_pass (1 samples, 0.30%)</title><rect x="51.9520%" y="373" width="0.3003%" height="15" fill="rgb(235,190,38)" fg:x="173" fg:w="1"/><text x="52.2020%" y="383.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::bloom::Bloom as vert::modules::renderer::post_processing::PostProcessingEffect&gt;::apply (30 samples, 9.01%)</title><rect x="43.8438%" y="405" width="9.0090%" height="15" fill="rgb(247,86,24)" fg:x="146" fg:w="30"/><text x="44.0938%" y="415.50">&lt;vert::module..</text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.753356876329018898 (2 samples, 0.60%)</title><rect x="52.2523%" y="389" width="0.6006%" height="15" fill="rgb(205,101,16)" fg:x="174" fg:w="2"/><text x="52.5023%" y="399.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (2 samples, 0.60%)</title><rect x="52.2523%" y="373" width="0.6006%" height="15" fill="rgb(246,168,33)" fg:x="174" fg:w="2"/><text x="52.5023%" y="383.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (2 samples, 0.60%)</title><rect x="52.2523%" y="357" width="0.6006%" height="15" fill="rgb(231,114,1)" fg:x="174" fg:w="2"/><text x="52.5023%" y="367.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (2 samples, 0.60%)</title><rect x="52.2523%" y="341" width="0.6006%" height="15" fill="rgb(207,184,53)" fg:x="174" fg:w="2"/><text x="52.5023%" y="351.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (2 samples, 0.60%)</title><rect x="52.2523%" y="325" width="0.6006%" height="15" fill="rgb(224,95,51)" fg:x="174" fg:w="2"/><text x="52.5023%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.30%)</title><rect x="52.5526%" y="309" width="0.3003%" height="15" fill="rgb(212,188,45)" fg:x="175" fg:w="1"/><text x="52.8026%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="52.5526%" y="293" width="0.3003%" height="15" fill="rgb(223,154,38)" fg:x="175" fg:w="1"/><text x="52.8026%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="52.5526%" y="277" width="0.3003%" height="15" fill="rgb(251,22,52)" fg:x="175" fg:w="1"/><text x="52.8026%" y="287.50"></text></g><g><title>_ZN4core3ptr37drop_in_place$LT$wgpu..RenderPass$GT$17hf46f5e95145f3d4eE.llvm.753356876329018898 (1 samples, 0.30%)</title><rect x="52.8529%" y="389" width="0.3003%" height="15" fill="rgb(229,209,22)" fg:x="176" fg:w="1"/><text x="53.1029%" y="399.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (1 samples, 0.30%)</title><rect x="52.8529%" y="373" width="0.3003%" height="15" fill="rgb(234,138,34)" fg:x="176" fg:w="1"/><text x="53.1029%" y="383.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (1 samples, 0.30%)</title><rect x="52.8529%" y="357" width="0.3003%" height="15" fill="rgb(212,95,11)" fg:x="176" fg:w="1"/><text x="53.1029%" y="367.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (1 samples, 0.30%)</title><rect x="52.8529%" y="341" width="0.3003%" height="15" fill="rgb(240,179,47)" fg:x="176" fg:w="1"/><text x="53.1029%" y="351.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.30%)</title><rect x="52.8529%" y="325" width="0.3003%" height="15" fill="rgb(240,163,11)" fg:x="176" fg:w="1"/><text x="53.1029%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::UsageScope&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.30%)</title><rect x="52.8529%" y="309" width="0.3003%" height="15" fill="rgb(236,37,12)" fg:x="176" fg:w="1"/><text x="53.1029%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.30%)</title><rect x="52.8529%" y="293" width="0.3003%" height="15" fill="rgb(232,164,16)" fg:x="176" fg:w="1"/><text x="53.1029%" y="303.50"></text></g><g><title>&lt;vert::modules::renderer::post_processing::tone_mapping::AcesToneMapping as vert::modules::renderer::post_processing::PostProcessingEffect&gt;::apply (2 samples, 0.60%)</title><rect x="52.8529%" y="405" width="0.6006%" height="15" fill="rgb(244,205,15)" fg:x="176" fg:w="2"/><text x="53.1029%" y="415.50"></text></g><g><title>wgpu::RenderPass::draw (1 samples, 0.30%)</title><rect x="53.1532%" y="389" width="0.3003%" height="15" fill="rgb(223,117,47)" fg:x="177" fg:w="1"/><text x="53.4032%" y="399.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_draw (1 samples, 0.30%)</title><rect x="53.1532%" y="373" width="0.3003%" height="15" fill="rgb(244,107,35)" fg:x="177" fg:w="1"/><text x="53.4032%" y="383.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_draw (1 samples, 0.30%)</title><rect x="53.4535%" y="373" width="0.3003%" height="15" fill="rgb(205,140,8)" fg:x="178" fg:w="1"/><text x="53.7035%" y="383.50"></text></g><g><title>wgpu::RenderPass::draw (3 samples, 0.90%)</title><rect x="53.4535%" y="389" width="0.9009%" height="15" fill="rgb(228,84,46)" fg:x="178" fg:w="3"/><text x="53.7035%" y="399.50"></text></g><g><title>wgpu_render_pass_draw (2 samples, 0.60%)</title><rect x="53.7538%" y="373" width="0.6006%" height="15" fill="rgb(254,188,9)" fg:x="179" fg:w="2"/><text x="54.0038%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.30%)</title><rect x="54.0541%" y="357" width="0.3003%" height="15" fill="rgb(206,112,54)" fg:x="180" fg:w="1"/><text x="54.3041%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.30%)</title><rect x="54.0541%" y="341" width="0.3003%" height="15" fill="rgb(216,84,49)" fg:x="180" fg:w="1"/><text x="54.3041%" y="351.50"></text></g><g><title>realloc (1 samples, 0.30%)</title><rect x="54.0541%" y="325" width="0.3003%" height="15" fill="rgb(214,194,35)" fg:x="180" fg:w="1"/><text x="54.3041%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="54.0541%" y="309" width="0.3003%" height="15" fill="rgb(249,28,3)" fg:x="180" fg:w="1"/><text x="54.3041%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="54.0541%" y="293" width="0.3003%" height="15" fill="rgb(222,56,52)" fg:x="180" fg:w="1"/><text x="54.3041%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="54.0541%" y="277" width="0.3003%" height="15" fill="rgb(245,217,50)" fg:x="180" fg:w="1"/><text x="54.3041%" y="287.50"></text></g><g><title>&lt;vert::modules::ui::ui_renderer::UiRenderer as vert::modules::renderer::main_pass_renderer::MainPassRenderer&gt;::render (4 samples, 1.20%)</title><rect x="53.4535%" y="405" width="1.2012%" height="15" fill="rgb(213,201,24)" fg:x="178" fg:w="4"/><text x="53.7035%" y="415.50"></text></g><g><title>wgpu::RenderPass::set_vertex_buffer (1 samples, 0.30%)</title><rect x="54.3544%" y="389" width="0.3003%" height="15" fill="rgb(248,116,28)" fg:x="181" fg:w="1"/><text x="54.6044%" y="399.50"></text></g><g><title>_ZN4core3ptr38drop_in_place$LT$wgpu..TextureView$GT$17h02af6c0a77e475f8E.llvm.2757540087349140276 (1 samples, 0.30%)</title><rect x="54.6547%" y="405" width="0.3003%" height="15" fill="rgb(219,72,43)" fg:x="182" fg:w="1"/><text x="54.9047%" y="415.50"></text></g><g><title>&lt;wgpu::TextureView as core::ops::drop::Drop&gt;::drop (1 samples, 0.30%)</title><rect x="54.6547%" y="389" width="0.3003%" height="15" fill="rgb(209,138,14)" fg:x="182" fg:w="1"/><text x="54.9047%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="66.9670%" y="293" width="0.3003%" height="15" fill="rgb(222,18,33)" fg:x="223" fg:w="1"/><text x="67.2170%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (49 samples, 14.71%)</title><rect x="57.0571%" y="325" width="14.7147%" height="15" fill="rgb(213,199,7)" fg:x="190" fg:w="49"/><text x="57.3071%" y="335.50">[libvulkan_intel.so]</text></g><g><title>[libvulkan_intel.so] (36 samples, 10.81%)</title><rect x="60.9610%" y="309" width="10.8108%" height="15" fill="rgb(250,110,10)" fg:x="203" fg:w="36"/><text x="61.2110%" y="319.50">[libvulkan_intel..</text></g><g><title>[libvulkan_intel.so] (15 samples, 4.50%)</title><rect x="67.2673%" y="293" width="4.5045%" height="15" fill="rgb(248,123,6)" fg:x="224" fg:w="15"/><text x="67.5173%" y="303.50">[libv..</text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (4 samples, 1.20%)</title><rect x="71.7718%" y="325" width="1.2012%" height="15" fill="rgb(206,91,31)" fg:x="239" fg:w="4"/><text x="72.0218%" y="335.50"></text></g><g><title>wgpu_core::command::bind::compat::BoundBindGroupLayouts::update_expectations (1 samples, 0.30%)</title><rect x="72.6727%" y="309" width="0.3003%" height="15" fill="rgb(211,154,13)" fg:x="242" fg:w="1"/><text x="72.9227%" y="319.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (1 samples, 0.30%)</title><rect x="72.9730%" y="325" width="0.3003%" height="15" fill="rgb(225,148,7)" fg:x="243" fg:w="1"/><text x="73.2230%" y="335.50"></text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::get (1 samples, 0.30%)</title><rect x="72.9730%" y="309" width="0.3003%" height="15" fill="rgb(220,160,43)" fg:x="243" fg:w="1"/><text x="73.2230%" y="319.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (1 samples, 0.30%)</title><rect x="73.2733%" y="325" width="0.3003%" height="15" fill="rgb(213,52,39)" fg:x="244" fg:w="1"/><text x="73.5233%" y="335.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (1 samples, 0.30%)</title><rect x="73.2733%" y="309" width="0.3003%" height="15" fill="rgb(243,137,7)" fg:x="244" fg:w="1"/><text x="73.5233%" y="319.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (1 samples, 0.30%)</title><rect x="73.2733%" y="293" width="0.3003%" height="15" fill="rgb(230,79,13)" fg:x="244" fg:w="1"/><text x="73.5233%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.30%)</title><rect x="73.2733%" y="277" width="0.3003%" height="15" fill="rgb(247,105,23)" fg:x="244" fg:w="1"/><text x="73.5233%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.30%)</title><rect x="73.2733%" y="261" width="0.3003%" height="15" fill="rgb(223,179,41)" fg:x="244" fg:w="1"/><text x="73.5233%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.30%)</title><rect x="73.2733%" y="245" width="0.3003%" height="15" fill="rgb(218,9,34)" fg:x="244" fg:w="1"/><text x="73.5233%" y="255.50"></text></g><g><title>malloc (1 samples, 0.30%)</title><rect x="73.2733%" y="229" width="0.3003%" height="15" fill="rgb(222,106,8)" fg:x="244" fg:w="1"/><text x="73.5233%" y="239.50"></text></g><g><title>wgpu_core::command::render::VertexState::update_limits (2 samples, 0.60%)</title><rect x="73.5736%" y="325" width="0.6006%" height="15" fill="rgb(211,220,0)" fg:x="245" fg:w="2"/><text x="73.8236%" y="335.50"></text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::get (1 samples, 0.30%)</title><rect x="74.1742%" y="325" width="0.3003%" height="15" fill="rgb(229,52,16)" fg:x="247" fg:w="1"/><text x="74.4242%" y="335.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (1 samples, 0.30%)</title><rect x="74.4745%" y="325" width="0.3003%" height="15" fill="rgb(212,155,18)" fg:x="248" fg:w="1"/><text x="74.7245%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.30%)</title><rect x="74.4745%" y="309" width="0.3003%" height="15" fill="rgb(242,21,14)" fg:x="248" fg:w="1"/><text x="74.7245%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.30%)</title><rect x="74.4745%" y="293" width="0.3003%" height="15" fill="rgb(222,19,48)" fg:x="248" fg:w="1"/><text x="74.7245%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.30%)</title><rect x="74.4745%" y="277" width="0.3003%" height="15" fill="rgb(232,45,27)" fg:x="248" fg:w="1"/><text x="74.7245%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.30%)</title><rect x="74.4745%" y="261" width="0.3003%" height="15" fill="rgb(249,103,42)" fg:x="248" fg:w="1"/><text x="74.7245%" y="271.50"></text></g><g><title>malloc (1 samples, 0.30%)</title><rect x="74.4745%" y="245" width="0.3003%" height="15" fill="rgb(246,81,33)" fg:x="248" fg:w="1"/><text x="74.7245%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="74.4745%" y="229" width="0.3003%" height="15" fill="rgb(252,33,42)" fg:x="248" fg:w="1"/><text x="74.7245%" y="239.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.60%)</title><rect x="75.0751%" y="309" width="0.6006%" height="15" fill="rgb(209,212,41)" fg:x="250" fg:w="2"/><text x="75.3251%" y="319.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (14 samples, 4.20%)</title><rect x="74.7748%" y="325" width="4.2042%" height="15" fill="rgb(207,154,6)" fg:x="249" fg:w="14"/><text x="75.0248%" y="335.50">wgpu_..</text></g><g><title>wgpu_core::LifeGuard::add_ref (11 samples, 3.30%)</title><rect x="75.6757%" y="309" width="3.3033%" height="15" fill="rgb(223,64,47)" fg:x="252" fg:w="11"/><text x="75.9257%" y="319.50">wgp..</text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (81 samples, 24.32%)</title><rect x="54.9550%" y="405" width="24.3243%" height="15" fill="rgb(211,161,38)" fg:x="183" fg:w="81"/><text x="55.2050%" y="415.50">core::ptr::drop_in_place&lt;wgpu::RenderPa..</text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (81 samples, 24.32%)</title><rect x="54.9550%" y="389" width="24.3243%" height="15" fill="rgb(219,138,40)" fg:x="183" fg:w="81"/><text x="55.2050%" y="399.50">&lt;wgpu::RenderPass as core::ops::drop::D..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (81 samples, 24.32%)</title><rect x="54.9550%" y="373" width="24.3243%" height="15" fill="rgb(241,228,46)" fg:x="183" fg:w="81"/><text x="55.2050%" y="383.50">&lt;T as wgpu::context::DynContext&gt;::comma..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (81 samples, 24.32%)</title><rect x="54.9550%" y="357" width="24.3243%" height="15" fill="rgb(223,209,38)" fg:x="183" fg:w="81"/><text x="55.2050%" y="367.50">&lt;wgpu::backend::direct::Context as wgpu..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (81 samples, 24.32%)</title><rect x="54.9550%" y="341" width="24.3243%" height="15" fill="rgb(236,164,45)" fg:x="183" fg:w="81"/><text x="55.2050%" y="351.50">wgpu_core::command::render::&lt;impl wgpu_..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (1 samples, 0.30%)</title><rect x="78.9790%" y="325" width="0.3003%" height="15" fill="rgb(231,15,5)" fg:x="263" fg:w="1"/><text x="79.2290%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="78.9790%" y="309" width="0.3003%" height="15" fill="rgb(252,35,15)" fg:x="263" fg:w="1"/><text x="79.2290%" y="319.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::insert_single (1 samples, 0.30%)</title><rect x="79.2793%" y="325" width="0.3003%" height="15" fill="rgb(248,181,18)" fg:x="264" fg:w="1"/><text x="79.5293%" y="335.50"></text></g><g><title>wgpu::Surface::get_current_texture (6 samples, 1.80%)</title><rect x="79.2793%" y="389" width="1.8018%" height="15" fill="rgb(233,39,42)" fg:x="264" fg:w="6"/><text x="79.5293%" y="399.50">w..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (6 samples, 1.80%)</title><rect x="79.2793%" y="373" width="1.8018%" height="15" fill="rgb(238,110,33)" fg:x="264" fg:w="6"/><text x="79.5293%" y="383.50">&lt;..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (6 samples, 1.80%)</title><rect x="79.2793%" y="357" width="1.8018%" height="15" fill="rgb(233,195,10)" fg:x="264" fg:w="6"/><text x="79.5293%" y="367.50">&lt;..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_get_current_texture (6 samples, 1.80%)</title><rect x="79.2793%" y="341" width="1.8018%" height="15" fill="rgb(254,105,3)" fg:x="264" fg:w="6"/><text x="79.5293%" y="351.50">w..</text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (5 samples, 1.50%)</title><rect x="79.5796%" y="325" width="1.5015%" height="15" fill="rgb(221,225,9)" fg:x="265" fg:w="5"/><text x="79.8296%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (5 samples, 1.50%)</title><rect x="79.5796%" y="309" width="1.5015%" height="15" fill="rgb(224,227,45)" fg:x="265" fg:w="5"/><text x="79.8296%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (5 samples, 1.50%)</title><rect x="79.5796%" y="293" width="1.5015%" height="15" fill="rgb(229,198,43)" fg:x="265" fg:w="5"/><text x="79.8296%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (5 samples, 1.50%)</title><rect x="79.5796%" y="277" width="1.5015%" height="15" fill="rgb(206,209,35)" fg:x="265" fg:w="5"/><text x="79.8296%" y="287.50"></text></g><g><title>drmSyncobjWait (5 samples, 1.50%)</title><rect x="79.5796%" y="261" width="1.5015%" height="15" fill="rgb(245,195,53)" fg:x="265" fg:w="5"/><text x="79.8296%" y="271.50"></text></g><g><title>drmIoctl (5 samples, 1.50%)</title><rect x="79.5796%" y="245" width="1.5015%" height="15" fill="rgb(240,92,26)" fg:x="265" fg:w="5"/><text x="79.8296%" y="255.50"></text></g><g><title>ioctl (5 samples, 1.50%)</title><rect x="79.5796%" y="229" width="1.5015%" height="15" fill="rgb(207,40,23)" fg:x="265" fg:w="5"/><text x="79.8296%" y="239.50"></text></g><g><title>vert::modules::graphics_context::GraphicsContext::new_surface_texture_and_view (8 samples, 2.40%)</title><rect x="79.2793%" y="405" width="2.4024%" height="15" fill="rgb(223,111,35)" fg:x="264" fg:w="8"/><text x="79.5293%" y="415.50">ve..</text></g><g><title>wgpu::Texture::create_view (2 samples, 0.60%)</title><rect x="81.0811%" y="389" width="0.6006%" height="15" fill="rgb(229,147,28)" fg:x="270" fg:w="2"/><text x="81.3311%" y="399.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_create_view (2 samples, 0.60%)</title><rect x="81.0811%" y="373" width="0.6006%" height="15" fill="rgb(211,29,28)" fg:x="270" fg:w="2"/><text x="81.3311%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::texture_create_view (2 samples, 0.60%)</title><rect x="81.0811%" y="357" width="0.6006%" height="15" fill="rgb(228,72,33)" fg:x="270" fg:w="2"/><text x="81.3311%" y="367.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::texture_create_view (1 samples, 0.30%)</title><rect x="81.3814%" y="341" width="0.3003%" height="15" fill="rgb(205,214,31)" fg:x="271" fg:w="1"/><text x="81.6314%" y="351.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_texture_view (1 samples, 0.30%)</title><rect x="81.3814%" y="325" width="0.3003%" height="15" fill="rgb(224,111,15)" fg:x="271" fg:w="1"/><text x="81.6314%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (1 samples, 0.30%)</title><rect x="81.3814%" y="309" width="0.3003%" height="15" fill="rgb(253,21,26)" fg:x="271" fg:w="1"/><text x="81.6314%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="81.3814%" y="293" width="0.3003%" height="15" fill="rgb(245,139,43)" fg:x="271" fg:w="1"/><text x="81.6314%" y="303.50"></text></g><g><title>vert::modules::renderer::main_pass_renderer::MainPassRendererHandle::new::render (1 samples, 0.30%)</title><rect x="81.6817%" y="405" width="0.3003%" height="15" fill="rgb(252,170,7)" fg:x="272" fg:w="1"/><text x="81.9317%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.30%)</title><rect x="81.9820%" y="341" width="0.3003%" height="15" fill="rgb(231,118,14)" fg:x="273" fg:w="1"/><text x="82.2320%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="82.2823%" y="309" width="0.9009%" height="15" fill="rgb(238,83,0)" fg:x="274" fg:w="3"/><text x="82.5323%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="82.2823%" y="293" width="0.9009%" height="15" fill="rgb(221,39,39)" fg:x="274" fg:w="3"/><text x="82.5323%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="82.2823%" y="277" width="0.9009%" height="15" fill="rgb(222,119,46)" fg:x="274" fg:w="3"/><text x="82.5323%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="82.2823%" y="261" width="0.9009%" height="15" fill="rgb(222,165,49)" fg:x="274" fg:w="3"/><text x="82.5323%" y="271.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="82.2823%" y="245" width="0.9009%" height="15" fill="rgb(219,113,52)" fg:x="274" fg:w="3"/><text x="82.5323%" y="255.50"></text></g><g><title>[libvulkan_intel.so] (2 samples, 0.60%)</title><rect x="82.5826%" y="229" width="0.6006%" height="15" fill="rgb(214,7,15)" fg:x="275" fg:w="2"/><text x="82.8326%" y="239.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="82.8829%" y="213" width="0.3003%" height="15" fill="rgb(235,32,4)" fg:x="276" fg:w="1"/><text x="83.1329%" y="223.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (4 samples, 1.20%)</title><rect x="82.2823%" y="341" width="1.2012%" height="15" fill="rgb(238,90,54)" fg:x="274" fg:w="4"/><text x="82.5323%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (4 samples, 1.20%)</title><rect x="82.2823%" y="325" width="1.2012%" height="15" fill="rgb(213,208,19)" fg:x="274" fg:w="4"/><text x="82.5323%" y="335.50"></text></g><g><title>malloc (1 samples, 0.30%)</title><rect x="83.1832%" y="309" width="0.3003%" height="15" fill="rgb(233,156,4)" fg:x="277" fg:w="1"/><text x="83.4332%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="83.1832%" y="293" width="0.3003%" height="15" fill="rgb(207,194,5)" fg:x="277" fg:w="1"/><text x="83.4332%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="83.1832%" y="277" width="0.3003%" height="15" fill="rgb(206,111,30)" fg:x="277" fg:w="1"/><text x="83.4332%" y="287.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::maintain (3 samples, 0.90%)</title><rect x="83.4835%" y="341" width="0.9009%" height="15" fill="rgb(243,70,54)" fg:x="278" fg:w="3"/><text x="83.7335%" y="351.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (3 samples, 0.90%)</title><rect x="83.4835%" y="325" width="0.9009%" height="15" fill="rgb(242,28,8)" fg:x="278" fg:w="3"/><text x="83.7335%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="83.4835%" y="309" width="0.9009%" height="15" fill="rgb(219,106,18)" fg:x="278" fg:w="3"/><text x="83.7335%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="83.4835%" y="293" width="0.9009%" height="15" fill="rgb(244,222,10)" fg:x="278" fg:w="3"/><text x="83.7335%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="83.4835%" y="277" width="0.9009%" height="15" fill="rgb(236,179,52)" fg:x="278" fg:w="3"/><text x="83.7335%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="83.4835%" y="261" width="0.9009%" height="15" fill="rgb(213,23,39)" fg:x="278" fg:w="3"/><text x="83.7335%" y="271.50"></text></g><g><title>cfree (1 samples, 0.30%)</title><rect x="84.0841%" y="245" width="0.3003%" height="15" fill="rgb(238,48,10)" fg:x="280" fg:w="1"/><text x="84.3341%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="84.0841%" y="229" width="0.3003%" height="15" fill="rgb(251,196,23)" fg:x="280" fg:w="1"/><text x="84.3341%" y="239.50"></text></g><g><title>wgpu_core::registry::Registry&lt;T,I,F&gt;::unregister_locked (1 samples, 0.30%)</title><rect x="84.3844%" y="341" width="0.3003%" height="15" fill="rgb(250,152,24)" fg:x="281" fg:w="1"/><text x="84.6344%" y="351.50"></text></g><g><title>wgpu_core::identity::IdentityManager::free (1 samples, 0.30%)</title><rect x="84.3844%" y="325" width="0.3003%" height="15" fill="rgb(209,150,17)" fg:x="281" fg:w="1"/><text x="84.6344%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="84.9850%" y="293" width="0.3003%" height="15" fill="rgb(234,202,34)" fg:x="283" fg:w="1"/><text x="85.2350%" y="303.50"></text></g><g><title>wgpu::Queue::submit (12 samples, 3.60%)</title><rect x="81.9820%" y="405" width="3.6036%" height="15" fill="rgb(253,148,53)" fg:x="273" fg:w="12"/><text x="82.2320%" y="415.50">wgpu..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (12 samples, 3.60%)</title><rect x="81.9820%" y="389" width="3.6036%" height="15" fill="rgb(218,129,16)" fg:x="273" fg:w="12"/><text x="82.2320%" y="399.50">&lt;T a..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (12 samples, 3.60%)</title><rect x="81.9820%" y="373" width="3.6036%" height="15" fill="rgb(216,85,19)" fg:x="273" fg:w="12"/><text x="82.2320%" y="383.50">&lt;wgp..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_submit (12 samples, 3.60%)</title><rect x="81.9820%" y="357" width="3.6036%" height="15" fill="rgb(235,228,7)" fg:x="273" fg:w="12"/><text x="82.2320%" y="367.50">wgpu..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (3 samples, 0.90%)</title><rect x="84.6847%" y="341" width="0.9009%" height="15" fill="rgb(245,175,0)" fg:x="282" fg:w="3"/><text x="84.9347%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="84.6847%" y="325" width="0.9009%" height="15" fill="rgb(208,168,36)" fg:x="282" fg:w="3"/><text x="84.9347%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (3 samples, 0.90%)</title><rect x="84.6847%" y="309" width="0.9009%" height="15" fill="rgb(246,171,24)" fg:x="282" fg:w="3"/><text x="84.9347%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="85.2853%" y="293" width="0.3003%" height="15" fill="rgb(215,142,24)" fg:x="284" fg:w="1"/><text x="85.5353%" y="303.50"></text></g><g><title>wgpu::Queue::write_buffer (2 samples, 0.60%)</title><rect x="85.5856%" y="405" width="0.6006%" height="15" fill="rgb(250,187,7)" fg:x="285" fg:w="2"/><text x="85.8356%" y="415.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (2 samples, 0.60%)</title><rect x="85.5856%" y="389" width="0.6006%" height="15" fill="rgb(228,66,33)" fg:x="285" fg:w="2"/><text x="85.8356%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (2 samples, 0.60%)</title><rect x="85.5856%" y="373" width="0.6006%" height="15" fill="rgb(234,215,21)" fg:x="285" fg:w="2"/><text x="85.8356%" y="383.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (2 samples, 0.60%)</title><rect x="85.5856%" y="357" width="0.6006%" height="15" fill="rgb(222,191,20)" fg:x="285" fg:w="2"/><text x="85.8356%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.60%)</title><rect x="85.5856%" y="341" width="0.6006%" height="15" fill="rgb(245,79,54)" fg:x="285" fg:w="2"/><text x="85.8356%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="86.4865%" y="261" width="0.3003%" height="15" fill="rgb(240,10,37)" fg:x="288" fg:w="1"/><text x="86.7365%" y="271.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="86.4865%" y="245" width="0.3003%" height="15" fill="rgb(214,192,32)" fg:x="288" fg:w="1"/><text x="86.7365%" y="255.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="86.4865%" y="229" width="0.3003%" height="15" fill="rgb(209,36,54)" fg:x="288" fg:w="1"/><text x="86.7365%" y="239.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="86.4865%" y="213" width="0.3003%" height="15" fill="rgb(220,10,11)" fg:x="288" fg:w="1"/><text x="86.7365%" y="223.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="86.4865%" y="197" width="0.3003%" height="15" fill="rgb(221,106,17)" fg:x="288" fg:w="1"/><text x="86.7365%" y="207.50"></text></g><g><title>malloc (1 samples, 0.30%)</title><rect x="86.4865%" y="181" width="0.3003%" height="15" fill="rgb(251,142,44)" fg:x="288" fg:w="1"/><text x="86.7365%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="86.4865%" y="165" width="0.3003%" height="15" fill="rgb(238,13,15)" fg:x="288" fg:w="1"/><text x="86.7365%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="86.4865%" y="149" width="0.3003%" height="15" fill="rgb(208,107,27)" fg:x="288" fg:w="1"/><text x="86.7365%" y="159.50"></text></g><g><title>_ZN4vert7modules8renderer8Renderer18prepare_and_render17h80bcbabc5bbee19bE.llvm.2757540087349140276 (162 samples, 48.65%)</title><rect x="39.6396%" y="421" width="48.6486%" height="15" fill="rgb(205,136,37)" fg:x="132" fg:w="162"/><text x="39.8896%" y="431.50">_ZN4vert7modules8renderer8Renderer18prepare_and_render17h80bcbabc5bbee19bE.llvm...</text></g><g><title>wgpu::SurfaceTexture::present (7 samples, 2.10%)</title><rect x="86.1862%" y="405" width="2.1021%" height="15" fill="rgb(250,205,27)" fg:x="287" fg:w="7"/><text x="86.4362%" y="415.50">w..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (7 samples, 2.10%)</title><rect x="86.1862%" y="389" width="2.1021%" height="15" fill="rgb(210,80,43)" fg:x="287" fg:w="7"/><text x="86.4362%" y="399.50">&lt;..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (7 samples, 2.10%)</title><rect x="86.1862%" y="373" width="2.1021%" height="15" fill="rgb(247,160,36)" fg:x="287" fg:w="7"/><text x="86.4362%" y="383.50">&lt;..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_present (7 samples, 2.10%)</title><rect x="86.1862%" y="357" width="2.1021%" height="15" fill="rgb(234,13,49)" fg:x="287" fg:w="7"/><text x="86.4362%" y="367.50">w..</text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (7 samples, 2.10%)</title><rect x="86.1862%" y="341" width="2.1021%" height="15" fill="rgb(234,122,0)" fg:x="287" fg:w="7"/><text x="86.4362%" y="351.50">&lt;..</text></g><g><title>[libvulkan_intel.so] (7 samples, 2.10%)</title><rect x="86.1862%" y="325" width="2.1021%" height="15" fill="rgb(207,146,38)" fg:x="287" fg:w="7"/><text x="86.4362%" y="335.50">[..</text></g><g><title>[libvulkan_intel.so] (7 samples, 2.10%)</title><rect x="86.1862%" y="309" width="2.1021%" height="15" fill="rgb(207,177,25)" fg:x="287" fg:w="7"/><text x="86.4362%" y="319.50">[..</text></g><g><title>[libvulkan_intel.so] (7 samples, 2.10%)</title><rect x="86.1862%" y="293" width="2.1021%" height="15" fill="rgb(211,178,42)" fg:x="287" fg:w="7"/><text x="86.4362%" y="303.50">[..</text></g><g><title>[libvulkan_intel.so] (6 samples, 1.80%)</title><rect x="86.4865%" y="277" width="1.8018%" height="15" fill="rgb(230,69,54)" fg:x="288" fg:w="6"/><text x="86.7365%" y="287.50">[..</text></g><g><title>xcb_request_check (5 samples, 1.50%)</title><rect x="86.7868%" y="261" width="1.5015%" height="15" fill="rgb(214,135,41)" fg:x="289" fg:w="5"/><text x="87.0368%" y="271.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 1.50%)</title><rect x="86.7868%" y="245" width="1.5015%" height="15" fill="rgb(237,67,25)" fg:x="289" fg:w="5"/><text x="87.0368%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 1.50%)</title><rect x="86.7868%" y="229" width="1.5015%" height="15" fill="rgb(222,189,50)" fg:x="289" fg:w="5"/><text x="87.0368%" y="239.50"></text></g><g><title>__poll (5 samples, 1.50%)</title><rect x="86.7868%" y="213" width="1.5015%" height="15" fill="rgb(245,148,34)" fg:x="289" fg:w="5"/><text x="87.0368%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="87.9880%" y="197" width="0.3003%" height="15" fill="rgb(222,29,6)" fg:x="293" fg:w="1"/><text x="88.2380%" y="207.50"></text></g><g><title>&lt;vert::modules::ui::billboard::DivChildIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.60%)</title><rect x="88.5886%" y="373" width="0.6006%" height="15" fill="rgb(221,189,43)" fg:x="295" fg:w="2"/><text x="88.8386%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.60%)</title><rect x="88.5886%" y="357" width="0.6006%" height="15" fill="rgb(207,36,27)" fg:x="295" fg:w="2"/><text x="88.8386%" y="367.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h6f830251cf6a6f60E.llvm.2789452885020406341 (1 samples, 0.30%)</title><rect x="88.8889%" y="341" width="0.3003%" height="15" fill="rgb(217,90,24)" fg:x="296" fg:w="1"/><text x="89.1389%" y="351.50"></text></g><g><title>ui::MyApp::update (4 samples, 1.20%)</title><rect x="88.2883%" y="421" width="1.2012%" height="15" fill="rgb(224,66,35)" fg:x="294" fg:w="4"/><text x="88.5383%" y="431.50"></text></g><g><title>vert::modules::ui::billboard::Billboard::end_frame (4 samples, 1.20%)</title><rect x="88.2883%" y="405" width="1.2012%" height="15" fill="rgb(221,13,50)" fg:x="294" fg:w="4"/><text x="88.5383%" y="415.50"></text></g><g><title>morphorm::layout::layout (4 samples, 1.20%)</title><rect x="88.2883%" y="389" width="1.2012%" height="15" fill="rgb(236,68,49)" fg:x="294" fg:w="4"/><text x="88.5383%" y="399.50"></text></g><g><title>morphorm::layout::layout (1 samples, 0.30%)</title><rect x="89.1892%" y="373" width="0.3003%" height="15" fill="rgb(229,146,28)" fg:x="297" fg:w="1"/><text x="89.4392%" y="383.50"></text></g><g><title>epaint::text::text_layout::layout (1 samples, 0.30%)</title><rect x="90.3904%" y="197" width="0.3003%" height="15" fill="rgb(225,31,38)" fg:x="301" fg:w="1"/><text x="90.6404%" y="207.50"></text></g><g><title>roundf32 (1 samples, 0.30%)</title><rect x="90.3904%" y="181" width="0.3003%" height="15" fill="rgb(250,208,3)" fg:x="301" fg:w="1"/><text x="90.6404%" y="191.50"></text></g><g><title>egui::context::Context::write (4 samples, 1.20%)</title><rect x="89.7898%" y="245" width="1.2012%" height="15" fill="rgb(246,54,23)" fg:x="299" fg:w="4"/><text x="90.0398%" y="255.50"></text></g><g><title>egui::widget_text::WidgetTextJob::into_galley (4 samples, 1.20%)</title><rect x="89.7898%" y="229" width="1.2012%" height="15" fill="rgb(243,76,11)" fg:x="299" fg:w="4"/><text x="90.0398%" y="239.50"></text></g><g><title>epaint::text::fonts::FontsAndCache::layout_job (4 samples, 1.20%)</title><rect x="89.7898%" y="213" width="1.2012%" height="15" fill="rgb(245,21,50)" fg:x="299" fg:w="4"/><text x="90.0398%" y="223.50"></text></g><g><title>malloc (1 samples, 0.30%)</title><rect x="90.6907%" y="197" width="0.3003%" height="15" fill="rgb(228,9,43)" fg:x="302" fg:w="1"/><text x="90.9407%" y="207.50"></text></g><g><title>egui::ui::Ui::allocate_exact_size (2 samples, 0.60%)</title><rect x="90.9910%" y="245" width="0.6006%" height="15" fill="rgb(208,100,47)" fg:x="303" fg:w="2"/><text x="91.2410%" y="255.50"></text></g><g><title>egui::context::Context::interact (1 samples, 0.30%)</title><rect x="91.2913%" y="229" width="0.3003%" height="15" fill="rgb(232,26,8)" fg:x="304" fg:w="1"/><text x="91.5413%" y="239.50"></text></g><g><title>egui::context::Context::interact_with_hovered (1 samples, 0.30%)</title><rect x="91.2913%" y="213" width="0.3003%" height="15" fill="rgb(216,166,38)" fg:x="304" fg:w="1"/><text x="91.5413%" y="223.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.30%)</title><rect x="91.2913%" y="197" width="0.3003%" height="15" fill="rgb(251,202,51)" fg:x="304" fg:w="1"/><text x="91.5413%" y="207.50"></text></g><g><title>&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (8 samples, 2.40%)</title><rect x="89.7898%" y="277" width="2.4024%" height="15" fill="rgb(254,216,34)" fg:x="299" fg:w="8"/><text x="90.0398%" y="287.50">&lt;e..</text></g><g><title>egui::widgets::label::Label::layout_in_ui (8 samples, 2.40%)</title><rect x="89.7898%" y="261" width="2.4024%" height="15" fill="rgb(251,32,27)" fg:x="299" fg:w="8"/><text x="90.0398%" y="271.50">eg..</text></g><g><title>egui::widget_text::WidgetText::into_text_job (2 samples, 0.60%)</title><rect x="91.5916%" y="245" width="0.6006%" height="15" fill="rgb(208,127,28)" fg:x="305" fg:w="2"/><text x="91.8416%" y="255.50"></text></g><g><title>egui::widget_text::RichText::into_text_job (2 samples, 0.60%)</title><rect x="91.5916%" y="229" width="0.6006%" height="15" fill="rgb(224,137,22)" fg:x="305" fg:w="2"/><text x="91.8416%" y="239.50"></text></g><g><title>egui::widget_text::RichText::into_text_and_format (1 samples, 0.30%)</title><rect x="91.8919%" y="213" width="0.3003%" height="15" fill="rgb(254,70,32)" fg:x="306" fg:w="1"/><text x="92.1419%" y="223.50"></text></g><g><title>egui::style::FontSelection::resolve (1 samples, 0.30%)</title><rect x="91.8919%" y="197" width="0.3003%" height="15" fill="rgb(229,75,37)" fg:x="306" fg:w="1"/><text x="92.1419%" y="207.50"></text></g><g><title>egui::style::TextStyle::resolve (1 samples, 0.30%)</title><rect x="91.8919%" y="181" width="0.3003%" height="15" fill="rgb(252,64,23)" fg:x="306" fg:w="1"/><text x="92.1419%" y="191.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.30%)</title><rect x="91.8919%" y="165" width="0.3003%" height="15" fill="rgb(232,162,48)" fg:x="306" fg:w="1"/><text x="92.1419%" y="175.50"></text></g><g><title>&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (1 samples, 0.30%)</title><rect x="92.1922%" y="181" width="0.3003%" height="15" fill="rgb(246,160,12)" fg:x="307" fg:w="1"/><text x="92.4422%" y="191.50"></text></g><g><title>&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (2 samples, 0.60%)</title><rect x="92.1922%" y="197" width="0.6006%" height="15" fill="rgb(247,166,0)" fg:x="307" fg:w="2"/><text x="92.4422%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.30%)</title><rect x="92.4925%" y="181" width="0.3003%" height="15" fill="rgb(249,219,21)" fg:x="308" fg:w="1"/><text x="92.7425%" y="191.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.30%)</title><rect x="92.4925%" y="165" width="0.3003%" height="15" fill="rgb(205,209,3)" fg:x="308" fg:w="1"/><text x="92.7425%" y="175.50"></text></g><g><title>&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (3 samples, 0.90%)</title><rect x="92.1922%" y="277" width="0.9009%" height="15" fill="rgb(243,44,1)" fg:x="307" fg:w="3"/><text x="92.4422%" y="287.50"></text></g><g><title>egui::ui::Ui::horizontal_with_main_wrap_dyn (3 samples, 0.90%)</title><rect x="92.1922%" y="261" width="0.9009%" height="15" fill="rgb(206,159,16)" fg:x="307" fg:w="3"/><text x="92.4422%" y="271.50"></text></g><g><title>egui::ui::Ui::allocate_ui_with_layout_dyn (3 samples, 0.90%)</title><rect x="92.1922%" y="245" width="0.9009%" height="15" fill="rgb(244,77,30)" fg:x="307" fg:w="3"/><text x="92.4422%" y="255.50"></text></g><g><title>_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h668347b07e9db4e5E.llvm.14826037258625001205 (3 samples, 0.90%)</title><rect x="92.1922%" y="229" width="0.9009%" height="15" fill="rgb(218,69,12)" fg:x="307" fg:w="3"/><text x="92.4422%" y="239.50"></text></g><g><title>egui::widgets::slider::Slider::add_contents (3 samples, 0.90%)</title><rect x="92.1922%" y="213" width="0.9009%" height="15" fill="rgb(212,87,7)" fg:x="307" fg:w="3"/><text x="92.4422%" y="223.50"></text></g><g><title>egui::response::Response::union (1 samples, 0.30%)</title><rect x="92.7928%" y="197" width="0.3003%" height="15" fill="rgb(245,114,25)" fg:x="309" fg:w="1"/><text x="93.0428%" y="207.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingState::show_body_unindented (13 samples, 3.90%)</title><rect x="89.4895%" y="389" width="3.9039%" height="15" fill="rgb(210,61,42)" fg:x="298" fg:w="13"/><text x="89.7395%" y="399.50">egui..</text></g><g><title>egui::ui::Ui::scope (13 samples, 3.90%)</title><rect x="89.4895%" y="373" width="3.9039%" height="15" fill="rgb(211,52,33)" fg:x="298" fg:w="13"/><text x="89.7395%" y="383.50">egui..</text></g><g><title>egui::ui::Ui::scope_dyn (13 samples, 3.90%)</title><rect x="89.4895%" y="357" width="3.9039%" height="15" fill="rgb(234,58,33)" fg:x="298" fg:w="13"/><text x="89.7395%" y="367.50">egui..</text></g><g><title>_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17ha9b0284caac2e444E.llvm.14917777082512500663 (13 samples, 3.90%)</title><rect x="89.4895%" y="341" width="3.9039%" height="15" fill="rgb(220,115,36)" fg:x="298" fg:w="13"/><text x="89.7395%" y="351.50">_ZN4..</text></g><g><title>egui::containers::resize::Resize::show (13 samples, 3.90%)</title><rect x="89.4895%" y="325" width="3.9039%" height="15" fill="rgb(243,153,54)" fg:x="298" fg:w="13"/><text x="89.7395%" y="335.50">egui..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 3.90%)</title><rect x="89.4895%" y="309" width="3.9039%" height="15" fill="rgb(251,47,18)" fg:x="298" fg:w="13"/><text x="89.7395%" y="319.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13 samples, 3.90%)</title><rect x="89.4895%" y="293" width="3.9039%" height="15" fill="rgb(242,102,42)" fg:x="298" fg:w="13"/><text x="89.7395%" y="303.50">core..</text></g><g><title>egui::ui::Ui::radio_value (1 samples, 0.30%)</title><rect x="93.0931%" y="277" width="0.3003%" height="15" fill="rgb(234,31,38)" fg:x="310" fg:w="1"/><text x="93.3431%" y="287.50"></text></g><g><title>&lt;egui::widgets::button::RadioButton as egui::widgets::Widget&gt;::ui (1 samples, 0.30%)</title><rect x="93.0931%" y="261" width="0.3003%" height="15" fill="rgb(221,117,51)" fg:x="310" fg:w="1"/><text x="93.3431%" y="271.50"></text></g><g><title>egui::ui::Ui::allocate_exact_size (1 samples, 0.30%)</title><rect x="93.0931%" y="245" width="0.3003%" height="15" fill="rgb(212,20,18)" fg:x="310" fg:w="1"/><text x="93.3431%" y="255.50"></text></g><g><title>egui::context::Context::interact (1 samples, 0.30%)</title><rect x="93.0931%" y="229" width="0.3003%" height="15" fill="rgb(245,133,36)" fg:x="310" fg:w="1"/><text x="93.3431%" y="239.50"></text></g><g><title>egui::context::Context::interact_with_hovered (1 samples, 0.30%)</title><rect x="93.0931%" y="213" width="0.3003%" height="15" fill="rgb(212,6,19)" fg:x="310" fg:w="1"/><text x="93.3431%" y="223.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.30%)</title><rect x="93.0931%" y="197" width="0.3003%" height="15" fill="rgb(218,1,36)" fg:x="310" fg:w="1"/><text x="93.3431%" y="207.50"></text></g><g><title>vert::modules::batteries::graphics_settings_controller::GraphicsSettingsController::update (15 samples, 4.50%)</title><rect x="89.4895%" y="421" width="4.5045%" height="15" fill="rgb(246,84,54)" fg:x="298" fg:w="15"/><text x="89.7395%" y="431.50">vert:..</text></g><g><title>egui::containers::window::Window::show_dyn (15 samples, 4.50%)</title><rect x="89.4895%" y="405" width="4.5045%" height="15" fill="rgb(242,110,6)" fg:x="298" fg:w="15"/><text x="89.7395%" y="415.50">egui:..</text></g><g><title>egui::containers::frame::Prepared::end (2 samples, 0.60%)</title><rect x="93.3934%" y="389" width="0.6006%" height="15" fill="rgb(214,47,5)" fg:x="311" fg:w="2"/><text x="93.6434%" y="399.50"></text></g><g><title>egui::containers::frame::Frame::paint (1 samples, 0.30%)</title><rect x="93.6937%" y="373" width="0.3003%" height="15" fill="rgb(218,159,25)" fg:x="312" fg:w="1"/><text x="93.9437%" y="383.50"></text></g><g><title>epaint::shadow::Shadow::tessellate (1 samples, 0.30%)</title><rect x="93.6937%" y="357" width="0.3003%" height="15" fill="rgb(215,211,28)" fg:x="312" fg:w="1"/><text x="93.9437%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;epaint::tessellator::Tessellator&gt; (1 samples, 0.30%)</title><rect x="93.6937%" y="341" width="0.3003%" height="15" fill="rgb(238,59,32)" fg:x="312" fg:w="1"/><text x="93.9437%" y="351.50"></text></g><g><title>cfree (1 samples, 0.30%)</title><rect x="93.6937%" y="325" width="0.3003%" height="15" fill="rgb(226,82,3)" fg:x="312" fg:w="1"/><text x="93.9437%" y="335.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::poll_events_with_timeout (183 samples, 54.95%)</title><rect x="39.6396%" y="469" width="54.9550%" height="15" fill="rgb(240,164,32)" fg:x="132" fg:w="183"/><text x="39.8896%" y="479.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::poll_events_with_timeout</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::single_iteration (183 samples, 54.95%)</title><rect x="39.6396%" y="453" width="54.9550%" height="15" fill="rgb(232,46,7)" fg:x="132" fg:w="183"/><text x="39.8896%" y="463.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::single_iteration</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (183 samples, 54.95%)</title><rect x="39.6396%" y="437" width="54.9550%" height="15" fill="rgb(229,129,53)" fg:x="132" fg:w="183"/><text x="39.8896%" y="447.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>vert::modules::egui::Egui::begin_frame (2 samples, 0.60%)</title><rect x="93.9940%" y="421" width="0.6006%" height="15" fill="rgb(234,188,29)" fg:x="313" fg:w="2"/><text x="94.2440%" y="431.50"></text></g><g><title>egui::context::Context::write (2 samples, 0.60%)</title><rect x="93.9940%" y="405" width="0.6006%" height="15" fill="rgb(246,141,4)" fg:x="313" fg:w="2"/><text x="94.2440%" y="415.50"></text></g><g><title>epaint::text::fonts::Fonts::begin_frame (1 samples, 0.30%)</title><rect x="94.2943%" y="389" width="0.3003%" height="15" fill="rgb(229,23,39)" fg:x="314" fg:w="1"/><text x="94.5443%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (1 samples, 0.30%)</title><rect x="94.2943%" y="373" width="0.3003%" height="15" fill="rgb(206,12,3)" fg:x="314" fg:w="1"/><text x="94.5443%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.30%)</title><rect x="94.2943%" y="357" width="0.3003%" height="15" fill="rgb(252,226,20)" fg:x="314" fg:w="1"/><text x="94.5443%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.30%)</title><rect x="94.2943%" y="341" width="0.3003%" height="15" fill="rgb(216,123,35)" fg:x="314" fg:w="1"/><text x="94.5443%" y="351.50"></text></g><g><title>cfree (1 samples, 0.30%)</title><rect x="94.2943%" y="325" width="0.3003%" height="15" fill="rgb(212,68,40)" fg:x="314" fg:w="1"/><text x="94.5443%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="94.2943%" y="309" width="0.3003%" height="15" fill="rgb(254,125,32)" fg:x="314" fg:w="1"/><text x="94.5443%" y="319.50"></text></g><g><title>&lt;vert::modules::egui::Egui as vert::modules::renderer::Prepare&gt;::prepare (1 samples, 0.30%)</title><rect x="94.5946%" y="421" width="0.3003%" height="15" fill="rgb(253,97,22)" fg:x="315" fg:w="1"/><text x="94.8446%" y="431.50"></text></g><g><title>egui_wgpu::renderer::Renderer::update_texture (1 samples, 0.30%)</title><rect x="94.5946%" y="405" width="0.3003%" height="15" fill="rgb(241,101,14)" fg:x="315" fg:w="1"/><text x="94.8446%" y="415.50"></text></g><g><title>_ZN4vert7modules8renderer8Renderer18prepare_and_render17h80bcbabc5bbee19bE.llvm.2757540087349140276 (2 samples, 0.60%)</title><rect x="94.5946%" y="437" width="0.6006%" height="15" fill="rgb(238,103,29)" fg:x="315" fg:w="2"/><text x="94.8446%" y="447.50"></text></g><g><title>wgpu::Queue::submit (1 samples, 0.30%)</title><rect x="94.8949%" y="421" width="0.3003%" height="15" fill="rgb(233,195,47)" fg:x="316" fg:w="1"/><text x="95.1449%" y="431.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (1 samples, 0.30%)</title><rect x="94.8949%" y="405" width="0.3003%" height="15" fill="rgb(246,218,30)" fg:x="316" fg:w="1"/><text x="95.1449%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (1 samples, 0.30%)</title><rect x="94.8949%" y="389" width="0.3003%" height="15" fill="rgb(219,145,47)" fg:x="316" fg:w="1"/><text x="95.1449%" y="399.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_submit (1 samples, 0.30%)</title><rect x="94.8949%" y="373" width="0.3003%" height="15" fill="rgb(243,12,26)" fg:x="316" fg:w="1"/><text x="95.1449%" y="383.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::maintain (1 samples, 0.30%)</title><rect x="94.8949%" y="357" width="0.3003%" height="15" fill="rgb(214,87,16)" fg:x="316" fg:w="1"/><text x="95.1449%" y="367.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (1 samples, 0.30%)</title><rect x="94.8949%" y="341" width="0.3003%" height="15" fill="rgb(208,99,42)" fg:x="316" fg:w="1"/><text x="95.1449%" y="351.50"></text></g><g><title>wgpu_core::registry::Registry&lt;T,I,F&gt;::unregister_locked (1 samples, 0.30%)</title><rect x="94.8949%" y="325" width="0.3003%" height="15" fill="rgb(253,99,2)" fg:x="316" fg:w="1"/><text x="95.1449%" y="335.50"></text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::remove (1 samples, 0.30%)</title><rect x="94.8949%" y="309" width="0.3003%" height="15" fill="rgb(220,168,23)" fg:x="316" fg:w="1"/><text x="95.1449%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.90%)</title><rect x="94.5946%" y="453" width="0.9009%" height="15" fill="rgb(242,38,24)" fg:x="315" fg:w="3"/><text x="94.8446%" y="463.50"></text></g><g><title>vert::modules::egui::Egui::begin_frame (1 samples, 0.30%)</title><rect x="95.1952%" y="437" width="0.3003%" height="15" fill="rgb(225,182,9)" fg:x="317" fg:w="1"/><text x="95.4452%" y="447.50"></text></g><g><title>egui::context::Context::write (1 samples, 0.30%)</title><rect x="95.1952%" y="421" width="0.3003%" height="15" fill="rgb(243,178,37)" fg:x="317" fg:w="1"/><text x="95.4452%" y="431.50"></text></g><g><title>epaint::text::font::Font::preload_common_characters (1 samples, 0.30%)</title><rect x="95.1952%" y="405" width="0.3003%" height="15" fill="rgb(232,139,19)" fg:x="317" fg:w="1"/><text x="95.4452%" y="415.50"></text></g><g><title>epaint::text::font::Font::glyph_info (1 samples, 0.30%)</title><rect x="95.1952%" y="389" width="0.3003%" height="15" fill="rgb(225,201,24)" fg:x="317" fg:w="1"/><text x="95.4452%" y="399.50"></text></g><g><title>epaint::text::font::FontImpl::glyph_info (1 samples, 0.30%)</title><rect x="95.1952%" y="373" width="0.3003%" height="15" fill="rgb(221,47,46)" fg:x="317" fg:w="1"/><text x="95.4452%" y="383.50"></text></g><g><title>epaint::text::font::FontImpl::allocate_glyph (1 samples, 0.30%)</title><rect x="95.1952%" y="357" width="0.3003%" height="15" fill="rgb(249,23,13)" fg:x="317" fg:w="1"/><text x="95.4452%" y="367.50"></text></g><g><title>&lt;ab_glyph::ttfp::FontRef as ab_glyph::font::Font&gt;::outline (1 samples, 0.30%)</title><rect x="95.1952%" y="341" width="0.3003%" height="15" fill="rgb(219,9,5)" fg:x="317" fg:w="1"/><text x="95.4452%" y="351.50"></text></g><g><title>ttf_parser::Face::outline_glyph (1 samples, 0.30%)</title><rect x="95.1952%" y="325" width="0.3003%" height="15" fill="rgb(254,171,16)" fg:x="317" fg:w="1"/><text x="95.4452%" y="335.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (1 samples, 0.30%)</title><rect x="95.1952%" y="309" width="0.3003%" height="15" fill="rgb(230,171,20)" fg:x="317" fg:w="1"/><text x="95.4452%" y="319.50"></text></g><g><title>&lt;vert::modules::winit_main::WinitMain as vert::app::module::MainModule&gt;::main (187 samples, 56.16%)</title><rect x="39.6396%" y="501" width="56.1562%" height="15" fill="rgb(210,71,41)" fg:x="132" fg:w="187"/><text x="39.8896%" y="511.50">&lt;vert::modules::winit_main::WinitMain as vert::app::module::MainModule&gt;::main</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_on_demand (187 samples, 56.16%)</title><rect x="39.6396%" y="485" width="56.1562%" height="15" fill="rgb(206,173,20)" fg:x="132" fg:w="187"/><text x="39.8896%" y="495.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_on_demand</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::single_iteration (4 samples, 1.20%)</title><rect x="94.5946%" y="469" width="1.2012%" height="15" fill="rgb(233,88,34)" fg:x="315" fg:w="4"/><text x="94.8446%" y="479.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (1 samples, 0.30%)</title><rect x="95.4955%" y="453" width="0.3003%" height="15" fill="rgb(223,209,46)" fg:x="318" fg:w="1"/><text x="95.7455%" y="463.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::_{{closure}} (1 samples, 0.30%)</title><rect x="95.4955%" y="437" width="0.3003%" height="15" fill="rgb(250,43,18)" fg:x="318" fg:w="1"/><text x="95.7455%" y="447.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (1 samples, 0.30%)</title><rect x="95.4955%" y="421" width="0.3003%" height="15" fill="rgb(208,13,10)" fg:x="318" fg:w="1"/><text x="95.7455%" y="431.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_send (1 samples, 0.30%)</title><rect x="95.4955%" y="405" width="0.3003%" height="15" fill="rgb(212,200,36)" fg:x="318" fg:w="1"/><text x="95.7455%" y="415.50"></text></g><g><title>&lt;vert::modules::camera::MainCamera3D as vert::app::module::Module&gt;::new (1 samples, 0.30%)</title><rect x="95.7958%" y="485" width="0.3003%" height="15" fill="rgb(225,90,30)" fg:x="319" fg:w="1"/><text x="96.0458%" y="495.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1 samples, 0.30%)</title><rect x="95.7958%" y="469" width="0.3003%" height="15" fill="rgb(236,182,39)" fg:x="319" fg:w="1"/><text x="96.0458%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (1 samples, 0.30%)</title><rect x="95.7958%" y="453" width="0.3003%" height="15" fill="rgb(212,144,35)" fg:x="319" fg:w="1"/><text x="96.0458%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (1 samples, 0.30%)</title><rect x="95.7958%" y="437" width="0.3003%" height="15" fill="rgb(228,63,44)" fg:x="319" fg:w="1"/><text x="96.0458%" y="447.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.30%)</title><rect x="95.7958%" y="421" width="0.3003%" height="15" fill="rgb(228,109,6)" fg:x="319" fg:w="1"/><text x="96.0458%" y="431.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_buffer (1 samples, 0.30%)</title><rect x="95.7958%" y="405" width="0.3003%" height="15" fill="rgb(238,117,24)" fg:x="319" fg:w="1"/><text x="96.0458%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (1 samples, 0.30%)</title><rect x="95.7958%" y="389" width="0.3003%" height="15" fill="rgb(242,26,26)" fg:x="319" fg:w="1"/><text x="96.0458%" y="399.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.30%)</title><rect x="95.7958%" y="373" width="0.3003%" height="15" fill="rgb(221,92,48)" fg:x="319" fg:w="1"/><text x="96.0458%" y="383.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (1 samples, 0.30%)</title><rect x="95.7958%" y="357" width="0.3003%" height="15" fill="rgb(209,209,32)" fg:x="319" fg:w="1"/><text x="96.0458%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::allocate_memory (1 samples, 0.30%)</title><rect x="95.7958%" y="341" width="0.3003%" height="15" fill="rgb(221,70,22)" fg:x="319" fg:w="1"/><text x="96.0458%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="95.7958%" y="325" width="0.3003%" height="15" fill="rgb(248,145,5)" fg:x="319" fg:w="1"/><text x="96.0458%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="95.7958%" y="309" width="0.3003%" height="15" fill="rgb(226,116,26)" fg:x="319" fg:w="1"/><text x="96.0458%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="95.7958%" y="293" width="0.3003%" height="15" fill="rgb(244,5,17)" fg:x="319" fg:w="1"/><text x="96.0458%" y="303.50"></text></g><g><title>fontdue::font::Font::from_bytes (2 samples, 0.60%)</title><rect x="96.0961%" y="469" width="0.6006%" height="15" fill="rgb(252,159,33)" fg:x="320" fg:w="2"/><text x="96.3461%" y="479.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (2 samples, 0.60%)</title><rect x="96.0961%" y="453" width="0.6006%" height="15" fill="rgb(206,71,0)" fg:x="320" fg:w="2"/><text x="96.3461%" y="463.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (2 samples, 0.60%)</title><rect x="96.0961%" y="437" width="0.6006%" height="15" fill="rgb(233,118,54)" fg:x="320" fg:w="2"/><text x="96.3461%" y="447.50"></text></g><g><title>&lt;fontdue::math::Geometry as ttf_parser::OutlineBuilder&gt;::quad_to (1 samples, 0.30%)</title><rect x="96.3964%" y="421" width="0.3003%" height="15" fill="rgb(234,83,48)" fg:x="321" fg:w="1"/><text x="96.6464%" y="431.50"></text></g><g><title>fontdue::math::Geometry::push (1 samples, 0.30%)</title><rect x="96.3964%" y="405" width="0.3003%" height="15" fill="rgb(228,3,54)" fg:x="321" fg:w="1"/><text x="96.6464%" y="415.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.30%)</title><rect x="96.6967%" y="453" width="0.3003%" height="15" fill="rgb(226,155,13)" fg:x="322" fg:w="1"/><text x="96.9467%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.30%)</title><rect x="96.6967%" y="437" width="0.3003%" height="15" fill="rgb(241,28,37)" fg:x="322" fg:w="1"/><text x="96.9467%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.30%)</title><rect x="96.6967%" y="421" width="0.3003%" height="15" fill="rgb(233,93,10)" fg:x="322" fg:w="1"/><text x="96.9467%" y="431.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.30%)</title><rect x="96.6967%" y="405" width="0.3003%" height="15" fill="rgb(225,113,19)" fg:x="322" fg:w="1"/><text x="96.9467%" y="415.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_texture (1 samples, 0.30%)</title><rect x="96.6967%" y="389" width="0.3003%" height="15" fill="rgb(241,2,18)" fg:x="322" fg:w="1"/><text x="96.9467%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.30%)</title><rect x="96.6967%" y="373" width="0.3003%" height="15" fill="rgb(228,207,21)" fg:x="322" fg:w="1"/><text x="96.9467%" y="383.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.30%)</title><rect x="96.6967%" y="357" width="0.3003%" height="15" fill="rgb(213,211,35)" fg:x="322" fg:w="1"/><text x="96.9467%" y="367.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (1 samples, 0.30%)</title><rect x="96.6967%" y="341" width="0.3003%" height="15" fill="rgb(209,83,10)" fg:x="322" fg:w="1"/><text x="96.9467%" y="351.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::allocate_memory (1 samples, 0.30%)</title><rect x="96.6967%" y="325" width="0.3003%" height="15" fill="rgb(209,164,1)" fg:x="322" fg:w="1"/><text x="96.9467%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="96.6967%" y="309" width="0.3003%" height="15" fill="rgb(213,184,43)" fg:x="322" fg:w="1"/><text x="96.9467%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="96.6967%" y="293" width="0.3003%" height="15" fill="rgb(231,61,34)" fg:x="322" fg:w="1"/><text x="96.9467%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="96.6967%" y="277" width="0.3003%" height="15" fill="rgb(235,75,3)" fg:x="322" fg:w="1"/><text x="96.9467%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.60%)</title><rect x="96.9970%" y="389" width="0.6006%" height="15" fill="rgb(220,106,47)" fg:x="323" fg:w="2"/><text x="97.2470%" y="399.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::text_renderer::TextRenderer as vert::app::module::Module&gt;::new (6 samples, 1.80%)</title><rect x="96.0961%" y="485" width="1.8018%" height="15" fill="rgb(210,196,33)" fg:x="320" fg:w="6"/><text x="96.3461%" y="495.50">&lt;..</text></g><g><title>vert::elements::texture::Texture::from_image (4 samples, 1.20%)</title><rect x="96.6967%" y="469" width="1.2012%" height="15" fill="rgb(229,154,42)" fg:x="322" fg:w="4"/><text x="96.9467%" y="479.50"></text></g><g><title>wgpu::Queue::write_texture (3 samples, 0.90%)</title><rect x="96.9970%" y="453" width="0.9009%" height="15" fill="rgb(228,114,26)" fg:x="323" fg:w="3"/><text x="97.2470%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (3 samples, 0.90%)</title><rect x="96.9970%" y="437" width="0.9009%" height="15" fill="rgb(208,144,1)" fg:x="323" fg:w="3"/><text x="97.2470%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (3 samples, 0.90%)</title><rect x="96.9970%" y="421" width="0.9009%" height="15" fill="rgb(239,112,37)" fg:x="323" fg:w="3"/><text x="97.2470%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_texture (3 samples, 0.90%)</title><rect x="96.9970%" y="405" width="0.9009%" height="15" fill="rgb(210,96,50)" fg:x="323" fg:w="3"/><text x="97.2470%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (1 samples, 0.30%)</title><rect x="97.5976%" y="389" width="0.3003%" height="15" fill="rgb(222,178,2)" fg:x="325" fg:w="1"/><text x="97.8476%" y="399.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="97.5976%" y="373" width="0.3003%" height="15" fill="rgb(226,74,18)" fg:x="325" fg:w="1"/><text x="97.8476%" y="383.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="97.5976%" y="357" width="0.3003%" height="15" fill="rgb(225,67,54)" fg:x="325" fg:w="1"/><text x="97.8476%" y="367.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="97.5976%" y="341" width="0.3003%" height="15" fill="rgb(251,92,32)" fg:x="325" fg:w="1"/><text x="97.8476%" y="351.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="97.5976%" y="325" width="0.3003%" height="15" fill="rgb(228,149,22)" fg:x="325" fg:w="1"/><text x="97.8476%" y="335.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="97.5976%" y="309" width="0.3003%" height="15" fill="rgb(243,54,13)" fg:x="325" fg:w="1"/><text x="97.8476%" y="319.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="97.5976%" y="293" width="0.3003%" height="15" fill="rgb(243,180,28)" fg:x="325" fg:w="1"/><text x="97.8476%" y="303.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="97.5976%" y="277" width="0.3003%" height="15" fill="rgb(208,167,24)" fg:x="325" fg:w="1"/><text x="97.8476%" y="287.50"></text></g><g><title>[libvulkan_intel.so] (1 samples, 0.30%)</title><rect x="97.5976%" y="261" width="0.3003%" height="15" fill="rgb(245,73,45)" fg:x="325" fg:w="1"/><text x="97.8476%" y="271.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::ui_rect::UiRectRenderer as vert::app::module::Module&gt;::new (1 samples, 0.30%)</title><rect x="97.8979%" y="485" width="0.3003%" height="15" fill="rgb(237,203,48)" fg:x="326" fg:w="1"/><text x="98.1479%" y="495.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.30%)</title><rect x="97.8979%" y="469" width="0.3003%" height="15" fill="rgb(211,197,16)" fg:x="326" fg:w="1"/><text x="98.1479%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="97.8979%" y="453" width="0.3003%" height="15" fill="rgb(243,99,51)" fg:x="326" fg:w="1"/><text x="98.1479%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="97.8979%" y="437" width="0.3003%" height="15" fill="rgb(215,123,29)" fg:x="326" fg:w="1"/><text x="98.1479%" y="447.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="97.8979%" y="421" width="0.3003%" height="15" fill="rgb(239,186,37)" fg:x="326" fg:w="1"/><text x="98.1479%" y="431.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (1 samples, 0.30%)</title><rect x="97.8979%" y="405" width="0.3003%" height="15" fill="rgb(252,136,39)" fg:x="326" fg:w="1"/><text x="98.1479%" y="415.50"></text></g><g><title>naga::front::wgsl::parse_str (1 samples, 0.30%)</title><rect x="97.8979%" y="389" width="0.3003%" height="15" fill="rgb(223,213,32)" fg:x="326" fg:w="1"/><text x="98.1479%" y="399.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1 samples, 0.30%)</title><rect x="97.8979%" y="373" width="0.3003%" height="15" fill="rgb(233,115,5)" fg:x="326" fg:w="1"/><text x="98.1479%" y="383.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (1 samples, 0.30%)</title><rect x="97.8979%" y="357" width="0.3003%" height="15" fill="rgb(207,226,44)" fg:x="326" fg:w="1"/><text x="98.1479%" y="367.50"></text></g><g><title>naga::front::wgsl::parse::Parser::function_decl (1 samples, 0.30%)</title><rect x="97.8979%" y="341" width="0.3003%" height="15" fill="rgb(208,126,0)" fg:x="326" fg:w="1"/><text x="98.1479%" y="351.50"></text></g><g><title>naga::front::wgsl::parse::Parser::statement (1 samples, 0.30%)</title><rect x="97.8979%" y="325" width="0.3003%" height="15" fill="rgb(244,66,21)" fg:x="326" fg:w="1"/><text x="98.1479%" y="335.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span (1 samples, 0.30%)</title><rect x="97.8979%" y="309" width="0.3003%" height="15" fill="rgb(222,97,12)" fg:x="326" fg:w="1"/><text x="98.1479%" y="319.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}} (1 samples, 0.30%)</title><rect x="97.8979%" y="293" width="0.3003%" height="15" fill="rgb(219,213,19)" fg:x="326" fg:w="1"/><text x="98.1479%" y="303.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}} (1 samples, 0.30%)</title><rect x="97.8979%" y="277" width="0.3003%" height="15" fill="rgb(252,169,30)" fg:x="326" fg:w="1"/><text x="98.1479%" y="287.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.30%)</title><rect x="97.8979%" y="261" width="0.3003%" height="15" fill="rgb(206,32,51)" fg:x="326" fg:w="1"/><text x="98.1479%" y="271.50"></text></g><g><title>naga::front::wgsl::parse::Parser::general_expression_with_span::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.30%)</title><rect x="97.8979%" y="245" width="0.3003%" height="15" fill="rgb(250,172,42)" fg:x="326" fg:w="1"/><text x="98.1479%" y="255.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="97.8979%" y="229" width="0.3003%" height="15" fill="rgb(209,34,43)" fg:x="326" fg:w="1"/><text x="98.1479%" y="239.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="97.8979%" y="213" width="0.3003%" height="15" fill="rgb(223,11,35)" fg:x="326" fg:w="1"/><text x="98.1479%" y="223.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="97.8979%" y="197" width="0.3003%" height="15" fill="rgb(251,219,26)" fg:x="326" fg:w="1"/><text x="98.1479%" y="207.50"></text></g><g><title>naga::front::wgsl::parse::ExpressionContext::parse_binary_op (1 samples, 0.30%)</title><rect x="97.8979%" y="181" width="0.3003%" height="15" fill="rgb(231,119,3)" fg:x="326" fg:w="1"/><text x="98.1479%" y="191.50"></text></g><g><title>_ZN4naga5front4wgsl5parse5lexer13consume_token17h790d086fee39747dE.llvm.9652253072215551723 (1 samples, 0.30%)</title><rect x="97.8979%" y="165" width="0.3003%" height="15" fill="rgb(216,97,11)" fg:x="326" fg:w="1"/><text x="98.1479%" y="175.50"></text></g><g><title>naga::front::wgsl::parse::lexer::consume_any (1 samples, 0.30%)</title><rect x="97.8979%" y="149" width="0.3003%" height="15" fill="rgb(223,59,9)" fg:x="326" fg:w="1"/><text x="98.1479%" y="159.50"></text></g><g><title>&lt;vert::modules::renderer::main_pass_renderer::world_rect::WorldRectRenderer as vert::app::module::Module&gt;::new (1 samples, 0.30%)</title><rect x="98.1982%" y="485" width="0.3003%" height="15" fill="rgb(233,93,31)" fg:x="327" fg:w="1"/><text x="98.4482%" y="495.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.30%)</title><rect x="98.1982%" y="469" width="0.3003%" height="15" fill="rgb(239,81,33)" fg:x="327" fg:w="1"/><text x="98.4482%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="98.1982%" y="453" width="0.3003%" height="15" fill="rgb(213,120,34)" fg:x="327" fg:w="1"/><text x="98.4482%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="98.1982%" y="437" width="0.3003%" height="15" fill="rgb(243,49,53)" fg:x="327" fg:w="1"/><text x="98.4482%" y="447.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.30%)</title><rect x="98.1982%" y="421" width="0.3003%" height="15" fill="rgb(247,216,33)" fg:x="327" fg:w="1"/><text x="98.4482%" y="431.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_shader_module (1 samples, 0.30%)</title><rect x="98.1982%" y="405" width="0.3003%" height="15" fill="rgb(226,26,14)" fg:x="327" fg:w="1"/><text x="98.4482%" y="415.50"></text></g><g><title>naga::front::wgsl::parse_str (1 samples, 0.30%)</title><rect x="98.1982%" y="389" width="0.3003%" height="15" fill="rgb(215,49,53)" fg:x="327" fg:w="1"/><text x="98.4482%" y="399.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1 samples, 0.30%)</title><rect x="98.1982%" y="373" width="0.3003%" height="15" fill="rgb(245,162,40)" fg:x="327" fg:w="1"/><text x="98.4482%" y="383.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::lower (1 samples, 0.30%)</title><rect x="98.1982%" y="357" width="0.3003%" height="15" fill="rgb(229,68,17)" fg:x="327" fg:w="1"/><text x="98.4482%" y="367.50"></text></g><g><title>naga::front::wgsl::lower::Lowerer::resolve_ast_type (1 samples, 0.30%)</title><rect x="98.1982%" y="341" width="0.3003%" height="15" fill="rgb(213,182,10)" fg:x="327" fg:w="1"/><text x="98.4482%" y="351.50"></text></g><g><title>naga::arena::UniqueArena&lt;T&gt;::insert (1 samples, 0.30%)</title><rect x="98.1982%" y="325" width="0.3003%" height="15" fill="rgb(245,125,30)" fg:x="327" fg:w="1"/><text x="98.4482%" y="335.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1 samples, 0.30%)</title><rect x="98.1982%" y="309" width="0.3003%" height="15" fill="rgb(232,202,2)" fg:x="327" fg:w="1"/><text x="98.4482%" y="319.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::find_or_insert (1 samples, 0.30%)</title><rect x="98.1982%" y="293" width="0.3003%" height="15" fill="rgb(237,140,51)" fg:x="327" fg:w="1"/><text x="98.4482%" y="303.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.30%)</title><rect x="98.1982%" y="277" width="0.3003%" height="15" fill="rgb(236,157,25)" fg:x="327" fg:w="1"/><text x="98.4482%" y="287.50"></text></g><g><title>&lt;fontdue::math::Geometry as ttf_parser::OutlineBuilder&gt;::line_to (1 samples, 0.30%)</title><rect x="98.4985%" y="437" width="0.3003%" height="15" fill="rgb(219,209,0)" fg:x="328" fg:w="1"/><text x="98.7485%" y="447.50"></text></g><g><title>fontdue::math::Geometry::push (1 samples, 0.30%)</title><rect x="98.4985%" y="421" width="0.3003%" height="15" fill="rgb(240,116,54)" fg:x="328" fg:w="1"/><text x="98.7485%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.30%)</title><rect x="98.4985%" y="405" width="0.3003%" height="15" fill="rgb(216,10,36)" fg:x="328" fg:w="1"/><text x="98.7485%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.30%)</title><rect x="98.4985%" y="389" width="0.3003%" height="15" fill="rgb(222,72,44)" fg:x="328" fg:w="1"/><text x="98.7485%" y="399.50"></text></g><g><title>realloc (1 samples, 0.30%)</title><rect x="98.4985%" y="373" width="0.3003%" height="15" fill="rgb(232,159,9)" fg:x="328" fg:w="1"/><text x="98.7485%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="98.4985%" y="357" width="0.3003%" height="15" fill="rgb(210,39,32)" fg:x="328" fg:w="1"/><text x="98.7485%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.30%)</title><rect x="98.4985%" y="341" width="0.3003%" height="15" fill="rgb(216,194,45)" fg:x="328" fg:w="1"/><text x="98.7485%" y="351.50"></text></g><g><title>&lt;fontdue::math::Geometry as ttf_parser::OutlineBuilder&gt;::quad_to (1 samples, 0.30%)</title><rect x="98.7988%" y="437" width="0.3003%" height="15" fill="rgb(218,18,35)" fg:x="329" fg:w="1"/><text x="99.0488%" y="447.50"></text></g><g><title>fontdue::math::Geometry::push (1 samples, 0.30%)</title><rect x="98.7988%" y="421" width="0.3003%" height="15" fill="rgb(207,83,51)" fg:x="329" fg:w="1"/><text x="99.0488%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.30%)</title><rect x="98.7988%" y="405" width="0.3003%" height="15" fill="rgb(225,63,43)" fg:x="329" fg:w="1"/><text x="99.0488%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.30%)</title><rect x="98.7988%" y="389" width="0.3003%" height="15" fill="rgb(207,57,36)" fg:x="329" fg:w="1"/><text x="99.0488%" y="399.50"></text></g><g><title>realloc (1 samples, 0.30%)</title><rect x="98.7988%" y="373" width="0.3003%" height="15" fill="rgb(216,99,33)" fg:x="329" fg:w="1"/><text x="99.0488%" y="383.50"></text></g><g><title>&lt;vert::modules::ui::font_cache::FontCache as vert::app::module::Module&gt;::new (3 samples, 0.90%)</title><rect x="98.4985%" y="485" width="0.9009%" height="15" fill="rgb(225,42,16)" fg:x="328" fg:w="3"/><text x="98.7485%" y="495.50"></text></g><g><title>fontdue::font::Font::from_bytes (3 samples, 0.90%)</title><rect x="98.4985%" y="469" width="0.9009%" height="15" fill="rgb(220,201,45)" fg:x="328" fg:w="3"/><text x="98.7485%" y="479.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (3 samples, 0.90%)</title><rect x="98.4985%" y="453" width="0.9009%" height="15" fill="rgb(225,33,4)" fg:x="328" fg:w="3"/><text x="98.7485%" y="463.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (1 samples, 0.30%)</title><rect x="99.0991%" y="437" width="0.3003%" height="15" fill="rgb(224,33,50)" fg:x="330" fg:w="1"/><text x="99.3491%" y="447.50"></text></g><g><title>&lt;fontdue::math::Geometry as ttf_parser::OutlineBuilder&gt;::quad_to (1 samples, 0.30%)</title><rect x="99.0991%" y="421" width="0.3003%" height="15" fill="rgb(246,198,51)" fg:x="330" fg:w="1"/><text x="99.3491%" y="431.50"></text></g><g><title>fontdue::math::Geometry::push (1 samples, 0.30%)</title><rect x="99.0991%" y="405" width="0.3003%" height="15" fill="rgb(205,22,4)" fg:x="330" fg:w="1"/><text x="99.3491%" y="415.50"></text></g><g><title>_start (200 samples, 60.06%)</title><rect x="39.6396%" y="773" width="60.0601%" height="15" fill="rgb(206,3,8)" fg:x="132" fg:w="200"/><text x="39.8896%" y="783.50">_start</text></g><g><title>__libc_start_main (200 samples, 60.06%)</title><rect x="39.6396%" y="757" width="60.0601%" height="15" fill="rgb(251,23,15)" fg:x="132" fg:w="200"/><text x="39.8896%" y="767.50">__libc_start_main</text></g><g><title>[libc.so.6] (200 samples, 60.06%)</title><rect x="39.6396%" y="741" width="60.0601%" height="15" fill="rgb(252,88,28)" fg:x="132" fg:w="200"/><text x="39.8896%" y="751.50">[libc.so.6]</text></g><g><title>main (200 samples, 60.06%)</title><rect x="39.6396%" y="725" width="60.0601%" height="15" fill="rgb(212,127,14)" fg:x="132" fg:w="200"/><text x="39.8896%" y="735.50">main</text></g><g><title>std::rt::lang_start_internal (200 samples, 60.06%)</title><rect x="39.6396%" y="709" width="60.0601%" height="15" fill="rgb(247,145,37)" fg:x="132" fg:w="200"/><text x="39.8896%" y="719.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (200 samples, 60.06%)</title><rect x="39.6396%" y="693" width="60.0601%" height="15" fill="rgb(209,117,53)" fg:x="132" fg:w="200"/><text x="39.8896%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (200 samples, 60.06%)</title><rect x="39.6396%" y="677" width="60.0601%" height="15" fill="rgb(212,90,42)" fg:x="132" fg:w="200"/><text x="39.8896%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (200 samples, 60.06%)</title><rect x="39.6396%" y="661" width="60.0601%" height="15" fill="rgb(218,164,37)" fg:x="132" fg:w="200"/><text x="39.8896%" y="671.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (200 samples, 60.06%)</title><rect x="39.6396%" y="645" width="60.0601%" height="15" fill="rgb(246,65,34)" fg:x="132" fg:w="200"/><text x="39.8896%" y="655.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (200 samples, 60.06%)</title><rect x="39.6396%" y="629" width="60.0601%" height="15" fill="rgb(231,100,33)" fg:x="132" fg:w="200"/><text x="39.8896%" y="639.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (200 samples, 60.06%)</title><rect x="39.6396%" y="613" width="60.0601%" height="15" fill="rgb(228,126,14)" fg:x="132" fg:w="200"/><text x="39.8896%" y="623.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (200 samples, 60.06%)</title><rect x="39.6396%" y="597" width="60.0601%" height="15" fill="rgb(215,173,21)" fg:x="132" fg:w="200"/><text x="39.8896%" y="607.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (200 samples, 60.06%)</title><rect x="39.6396%" y="581" width="60.0601%" height="15" fill="rgb(210,6,40)" fg:x="132" fg:w="200"/><text x="39.8896%" y="591.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (200 samples, 60.06%)</title><rect x="39.6396%" y="565" width="60.0601%" height="15" fill="rgb(212,48,18)" fg:x="132" fg:w="200"/><text x="39.8896%" y="575.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (200 samples, 60.06%)</title><rect x="39.6396%" y="549" width="60.0601%" height="15" fill="rgb(230,214,11)" fg:x="132" fg:w="200"/><text x="39.8896%" y="559.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>ui::main (200 samples, 60.06%)</title><rect x="39.6396%" y="533" width="60.0601%" height="15" fill="rgb(254,105,39)" fg:x="132" fg:w="200"/><text x="39.8896%" y="543.50">ui::main</text></g><g><title>vert::app::AppBuilder::run (200 samples, 60.06%)</title><rect x="39.6396%" y="517" width="60.0601%" height="15" fill="rgb(245,158,5)" fg:x="132" fg:w="200"/><text x="39.8896%" y="527.50">vert::app::AppBuilder::run</text></g><g><title>vert::app::instantiate_module (13 samples, 3.90%)</title><rect x="95.7958%" y="501" width="3.9039%" height="15" fill="rgb(249,208,11)" fg:x="319" fg:w="13"/><text x="96.0458%" y="511.50">vert..</text></g><g><title>vert::modules::ui::font_cache::FontCache::rasterize_default_font (1 samples, 0.30%)</title><rect x="99.3994%" y="485" width="0.3003%" height="15" fill="rgb(210,39,28)" fg:x="331" fg:w="1"/><text x="99.6494%" y="495.50"></text></g><g><title>vert::modules::ui::font_cache::FontCache::rasterize_font (1 samples, 0.30%)</title><rect x="99.3994%" y="469" width="0.3003%" height="15" fill="rgb(211,56,53)" fg:x="331" fg:w="1"/><text x="99.6494%" y="479.50"></text></g><g><title>image::image::GenericImage::copy_from (1 samples, 0.30%)</title><rect x="99.3994%" y="453" width="0.3003%" height="15" fill="rgb(226,201,30)" fg:x="331" fg:w="1"/><text x="99.6494%" y="463.50"></text></g><g><title>all (333 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(239,101,34)" fg:x="0" fg:w="333"/><text x="0.2500%" y="815.50"></text></g><g><title>ui (324 samples, 97.30%)</title><rect x="2.7027%" y="789" width="97.2973%" height="15" fill="rgb(226,209,5)" fg:x="9" fg:w="324"/><text x="2.9527%" y="799.50">ui</text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.30%)</title><rect x="99.6997%" y="773" width="0.3003%" height="15" fill="rgb(250,105,47)" fg:x="332" fg:w="1"/><text x="99.9497%" y="783.50"></text></g></svg></svg>